{"meta":{"title":"‰∏çÊèíÁîµÁ†ÅÂÜú","subtitle":"unpluggedcoder","description":"A Coder, love drums and sketches.","author":"‰∏çÊèíÁîµÁ†ÅÂÜú","url":"https://unpluggedcoder.me","root":"/"},"pages":[{"title":"Search","date":"2017-10-30T02:10:26.000Z","updated":"2022-09-15T15:51:05.341Z","comments":true,"path":"Search/index.html","permalink":"https://unpluggedcoder.me/Search/index.html","excerpt":"","text":""},{"title":"about","date":"2017-10-29T14:12:45.000Z","updated":"2022-09-15T15:51:05.355Z","comments":true,"path":"about/index.html","permalink":"https://unpluggedcoder.me/about/index.html","excerpt":"","text":"Coder, love sketch and drumming.Creator of Shuide.email. Proudly powered by Hexo and Theme by pure"},{"title":"ÂàÜÁ±ª","date":"2022-09-15T15:51:05.355Z","updated":"2022-09-15T15:51:05.355Z","comments":false,"path":"categories/index.html","permalink":"https://unpluggedcoder.me/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-09-15T15:51:05.427Z","updated":"2022-09-15T15:51:05.427Z","comments":false,"path":"repository/index.html","permalink":"https://unpluggedcoder.me/repository/index.html","excerpt":"","text":""},{"title":"Ê†áÁ≠æ","date":"2022-09-15T15:51:05.427Z","updated":"2022-09-15T15:51:05.427Z","comments":false,"path":"tags/index.html","permalink":"https://unpluggedcoder.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"FILCO-MINILA-R Convertible Review","slug":"FILCO-MINILA-R-Convertible-Review","date":"2022-09-30T08:04:36.000Z","updated":"2022-09-30T08:49:02.539Z","comments":true,"path":"2022/09/30/FILCO-MINILA-R-Convertible-Review/","link":"","permalink":"https://unpluggedcoder.me/2022/09/30/FILCO-MINILA-R-Convertible-Review/","excerpt":"I‚Äôve been use FILCO MNILA Series(1st Gen MINILA Air &amp; 2nd Gen: MNILA-R Convertible) for almost 6 years. During these years, I‚Äôve used some other mechanical keyboards on trial and sold them out finally. In my opinion, the FILCO MINILA still the best mechanical keyboard, especially for programmer.","text":"I‚Äôve been use FILCO MNILA Series(1st Gen MINILA Air &amp; 2nd Gen: MNILA-R Convertible) for almost 6 years. During these years, I‚Äôve used some other mechanical keyboards on trial and sold them out finally. In my opinion, the FILCO MINILA still the best mechanical keyboard, especially for programmer. Here I want share some strengths of FILCO MINILA, especially the 2nd generation MINILA-R Convertible. So, basically these points are main considerations when I choosing a mechanical keyboard. Layout &amp; Built-in shortcuts For me these are the most important consideration. It has direct impact on productivity, when it used by programmer, this effective comes double. I believe less finger move bring faster strike, that‚Äôs why I prefer compact keyboards. But not just the layout, the built-in shortcuts must came help for the arrow and other feature keys. The MNILA-R Convertible inherit most shortcuts from last gen and imporve the built-in shortcuts support for Mac, like volume, screen brightness. Wow! The DIP Switch, for me, I setup as the above picture. The most useful switch for me is replace CapsLock with Ctrl key. Before I switch it ON, I cannot figure why there is such thing. I turned it ON at one day four years ago, that feeling just hit me from deep mind. I‚Äôve realized that I barely use CapsLock for all the time, more over, it set my little finger free, no longer to touch left corner for Ctrl key. The Fn key position, it have two Fn key beside the Space key, very convenient for many shortcuts. That‚Äôs why I prefer it to HHKB. Here is the original description of Fn key by FILCO: The world‚Äôs first double function keyboard!Majestouch MINILA is the Mini layout version of Majestouch and we‚Äôve made it as compact as possible by sharing Function keys with other keys. It has the same key pitch as our famous Majestouch keyboards.The most striking feature of MINILA is the ‚ÄúDouble Function keys‚Äù located each side of the spacebar. We focused on less frequently used finger, the thumb, and let it work with Function keys. Just keep your thumbs busy and you get a lot of work done much easier than a normal keyboard! You can use whichever thumb you want. This keyboard can work well for anybody! Professionals, intermediate or even beginner class! Once you get used to typing on MINILA, you will not want to go back typing on normal keyboards! [You can use MINILA even more conveniently with FN keys] You can type cursor keys with a combination of FN key.Pressing FN key and E&#x2F;S&#x2F;D&#x2F;F simultaneously corresponds to ‚Üë&#x2F;‚Üê&#x2F;‚Üì&#x2F;‚Üí respectively.With this solution, you can keep your home position and still you get to type arrows very easily.Pressing FN key plus [:;] key simultaneously functions as backspace.This will allow you to command backspace without changing your home position.Those combinations will offer you a faster typing environment. Keycap The MINILA-Air‚Äôs keycap is what attracted me in first place. It is made by ABS, but the sense of touch is a icy feeling and smoothly. To keep that feeling I keep clean the keycap surface before it come to greasy. Then I tried to replace them by PBT keycap. After a few month, I change back to original keycap, miss that feeling. The MINILA-R Convertible keycap is a so called ‚ÄòPatch Keycap‚Äô made by PBT. So the touch area is a litter smaller than MINILA-Air. It doesn‚Äôt like other frosted feeling PBT stuff, keep the glossy surface from last generation. It still be greasy after years using, but much slower. Battery If someone around you used FILCO, then you‚Äôve must heard of its battery life. Just load the AA batteries in, then forget it. For years I can‚Äôt believe it‚Äôs powered by AA batteries and I don‚Äôt know how it accomplish that. It seems have nothing to do with bluetooth version(1st: v3, 2nd: v5.1). In contrast, some keyboard with lithium battery pack(Niz Keyboard), only stand for few months, and I have to plugged it in frequently, finally it becomes a USB cable keyboard. Multiple Connections I switch devices often, it was a pain suffer. MINILA-R Convertible had done a great of that by just add 4 devices key, and moreover, it had a USB 2.0 connection! The 1st Gen MNILA Air had some connection issue every time reconnect to a device(Chances, especially hit Cmd key during connection initialization, key comes to Alt code). The issue is gone on MINILA-R Convertible and more smoothly. Appearance I like simple color, my first mechanical keyboard is MINILA-Air in black, then the white. In 2020 MINILA-R Convertible came out with Sky Gray&#x2F;Black&#x2F;ASAGI color, the ASAGI color is a kind of blue, looks better than two. I don‚Äôt know why it missing white. FILCO seems like mod colors. Unitl the MINILA-R Convertible anniversary, the white color finally came out(above picture). The white part like some kinde of baked paint, shining and beauty. It was fortunate that no light in MINILA. RGB lights are totaly not necessary for keyboard. Switch This is the most trivial part, because many mechanical keyboard manufacturers do use the Cherry MX Switch. MINILA-R Convertible add MX SILENT Red switch, which became my favorite one. Before that is MX Red switch, but the new MINILA-R Convertible‚Äôs red switch distance of strike is clearly shorter than MINILA-Air. These are my share review of FILCO MINILA, hope you can find your best mechanical keyboard.üòÄ","categories":[],"tags":[{"name":"FILCO","slug":"FILCO","permalink":"https://unpluggedcoder.me/tags/FILCO/"},{"name":"Minila","slug":"Minila","permalink":"https://unpluggedcoder.me/tags/Minila/"},{"name":"Mechanical Keyboard","slug":"Mechanical-Keyboard","permalink":"https://unpluggedcoder.me/tags/Mechanical-Keyboard/"}]},{"title":"Improved Differential Flame Graph","slug":"Improved Differential Flame Graph","date":"2021-05-22T00:29:20.000Z","updated":"2022-09-15T15:51:05.344Z","comments":true,"path":"2021/05/22/Improved Differential Flame Graph/","link":"","permalink":"https://unpluggedcoder.me/2021/05/22/Improved%20Differential%20Flame%20Graph/","excerpt":"","text":"The Differential Flame Graph was introduced by Brendan Gregg in FlameGraph toolkit , which can let us debug the performance regressions. But it also has its known issue. ‚ÄúIf code paths vanish completely in the second profile, then there‚Äôs nothing to color blue.‚Äù For me there is another issue. The width of frame doesn‚Äôt present the REAL difference between two flame graphs. Let‚Äôs see an exampleüå∞. Assume we have two folded files like below: 123456789101112131415# before.folded_start;main;func1 5_start;main;func2 10_start;main;func4;func3 8_start;main;func4 25_start;main;func5;func6 15_start;main;func5 6# after.folded_start;main;func2 35_start;main;func4 0_start;main;func4;func3 18_start;main;func5;func6 5_start;main;func5 20_start;main;func7 7 To get a clear view for function changes, we can put it in a table like below: Name Before After Delta func1 5 0 -5 func2 10 35 +25 func3 8 18 +10 func4 25 0 -25 func5 6 20 +14 func6 15 5 -10 func7 0 7 +7 Total 69 86 &amp;#124;96&amp;#124; Original Differential Flame Graph func1 was totally lost. Although we can use Negation to get another differential flame graph. func3 have +10 delta and func4 have down to zero with -25 delta. But they share the SAME frame width because the diff-graph is just based on after.folded. Differential Flame Graph With Delta WidthI changed the way calculate diff-frame width which is based on Delta column in the above table, cause it‚Äôs REAL differentials. Here is the screenshot. The width of frame is based on delta, not any one of samples. So the width percentage is stand for: How much does it effects in all changes. Now, func1 shows up and func4 has outstanding optimization from the view. The frame color is calculated by its OWN delta. So it means: How does the frame‚Äôs SELF samples(time) changes. For the function has not real samples, I put the total delta width on the hint message. Try itYou can try the improved differential flame graph at my fork from the Rustü¶Ä version of flame graph toolkit inferno(which is üí•20x faster than Perl version).","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"Flamegraph","slug":"Rust/Flamegraph","permalink":"https://unpluggedcoder.me/categories/Rust/Flamegraph/"}],"tags":[]},{"title":"2020-04‰π¶Âçï","slug":"2020-04‰π¶Âçï","date":"2020-05-31T13:44:20.000Z","updated":"2022-09-15T15:51:05.341Z","comments":true,"path":"2020/05/31/2020-04‰π¶Âçï/","link":"","permalink":"https://unpluggedcoder.me/2020/05/31/2020-04%E4%B9%A6%E5%8D%95/","excerpt":"","text":"Êï∞Â≠¶‰∏éÊ≥õÂûãÁºñÁ®ã-È´òÊïàÁºñÁ®ãÁöÑÂ••Áßò ËøôÊú¨‰π¶ËôΩÁÑ∂‰∏çÂéö, ‰ΩÜÊòØËä±‰∫ÜÂæàÈïøÊó∂Èó¥ÊâçËØªÂÆå. Êú¨‰π¶ÁöÑ‰ΩúËÄÖ‰πüÊòØÊòØC++ STLÁöÑ‰ΩúËÄÖ.‰ªñÊú¨‰∫∫‰πüÊòØÊã•ÊúâËÄÖÊÆøÂ†ÇÁ∫ßÁöÑÂ±•ÂéÜ! ËøôÊú¨‰π¶Âç∞Ë±°ÊúÄÊ∑±ÁöÑÊòØË¥ØÁ©øÊï¥Êú¨‰π¶ÁöÑÊï∞Â≠¶ÂéÜÂè≤. ÂØπ‰∫éÁ®ãÂ∫èÂëòÊù•ËØ¥, ÈáåÈù¢ÁöÑÊï∞Â≠¶Áü•ËØÜÂèØËÉΩ‰∏çÊòØÈùûÂ∏∏ÂÆûÁî®,‰ΩÜÊòØÂâçÂá†Á´†ÈáåÂ±ïÁé∞ÁöÑÂà©Áî®Êï∞Â≠¶Áü•ËØÜËøõË°å‰ª£Á†ÅÊÄßËÉΩ‰ºòÂåñÁöÑÊäÄÊúØ‰ª§‰∫∫‰Ω©Êúç. Èô§Ê≠§‰πãÂ§ñ, ËøôÊú¨‰π¶ÁÆÄÁõ¥ÂèØ‰ª•Áß∞‰Ωú‰∏ÄÊú¨Êï∞Â≠¶ÂéÜÂè≤‰π¶, ÊúÄÂ•ΩÂ•áÁöÑÊòØ‰ΩúËÄÖÊèêÂà∞ÁöÑ‰∫∫Á±ªÂéÜÂè≤‰∏≠, Êúâ‰∏ÄÂçÉÂ§öÂπ¥ÁöÑÊï∞Â≠¶Á©∫ÁôΩ, Âá†‰πéÊ≤°Êúâ‰ªÄ‰πàÊï∞Â≠¶ÊàêÊûú. Â¶ÇÊûúÁ®ãÂ∫èÂëòÂ∏åÊúõ‰ªéËøôÊú¨‰π¶‰∏≠‰∫ÜËß£Âà∞‰ªÄ‰πàÂ•áÊäÄÊ∑´Â∑ß, ÈÇ£ÂèØËÉΩ‰ºöÂ§±Êúõü§¶‚Äç‚ôÇÔ∏è. ÁúãÂà∞Á¨¨ÂçÅÁ´†ÁöÑÊ†áÈ¢òÊòØ‚ÄúÁºñÁ®ãÁöÑÂü∫Êú¨Ê¶ÇÂøµ‚Äù, ‰Ω†‰ª•‰∏∫‰ªñÁªà‰∫éÂºÄÂßãÁªô‰Ω†ËÆ≤ÁºñÁ®ã‰∫ÜÔºåÁªìÊûú‰∏Ä‰∏äÊù•ÂèàÁªô‰Ω†‰∏ä‰∫ÜËäÇÂéÜÂè≤ËØæÔºåÁúüÈ¶ôÔºÅÂà∞ÊúÄÂêé, ÊääË¥ØÁ©øÂÖ®‰π¶ÁöÑÁ¥†Êï∞ÁªìÂêàÂÖ∂Â∫îÁî®ÈùûÂØπÁß∞Âä†ÂØÜÁÆóÊ≥ïÊù•‰Ωú‰∏∫Êî∂Â∞æ, Áªà‰∫éÊúâÁßçÊÑüËßâËøôÊú¨‰π¶Ê≤°ÁôΩÁúã. ‰ª•ÂêéËøôÂ∞±ÊòØÊàëÁöÑÊï∞Â≠¶ÂéÜÂè≤ÂèÇËÄÉ‰π¶. ETFÂ§ßÂ∏àÊäïËµÑÁ≠ñÁï• ËøôÊú¨‰π¶ÁøªËØëËøáÊù•ÁöÑ‰∏≠ÊñáÂêçÂ§™Ëä±Âì®‰∫Ü, Ëã±ÊñáÂêçÂè™ÊòØ„ÄäETF Investment Strategies„Äã, ËØëËÄÖÂä†‰∏ä‚ÄúÂ§ßÂ∏à‚Äù‰∏§‰∏™Â≠óÂèØËÉΩ‰ºöÊØîËæÉÂ•ΩÂçñÂêß. ‰ΩúËÄÖÊòØÈùûÂ∏∏ÁöÑÂä°ÂÆû, ‰ªãÁªç‰∫ÜETFÁöÑÊñπÊñπÈù¢Èù¢, ÊàëÂπ∂‰∏çÊúüÊúõ‰ªéËøôÁ±ª‰π¶‰∏≠ËÉΩÂ§üÂ≠¶Âà∞‰ªÄ‰πàÊäïËµÑÈáëÊâãÊåá, ÊàëÁöÑÁõÆÁöÑÊòØÂ∞±ÊòØÊâ´Áõ≤. ‰ΩúËÄÖÊääETFÁöÑÂêÑÁßçÊïûÂè£ËÆ≤ÂæóÂæàÊ∏ÖÊô∞, ‰ª•ÂèäÂêÑÁßç‰∫§ÊòìÊïûÂè£ÈÄÇÂêà‰ªÄ‰πàÊ†∑ÁöÑÊäïËµÑËÄÖ, ÈÉΩÂèØ‰ª•ÂØπÂè∑ÂÖ•Â∫ß. ËøòÁªìÂêà‰∫ÜÂæàÂ§öÂ§ßÂÖ¨Âè∏ÁöÑÊäïËµÑÊ°à‰æã. ÁúãÂÆåËøôÊú¨‰π¶ÁöÑÊó∂ÂÄô, ETFÂ∑≤ÁªèÊòØÊàëÂÆöÊäïÁöÑÈáç‰ªì‰∫ßÂìÅ‰∫Ü, Ê∂µÁõñ‰∫Ü‰∏çÂêåÁöÑË°å‰∏ö. ÂØπ‰∫éÁßçÊï£Êà∑Êù•ËØ¥, ETFÁúüÁöÑÊòØÂêàÈÄÇ‰∏çËøá‰∫Ü.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[]},{"title":"The Gray Rhino","slug":"ÁÅ∞ÁäÄÁâõ","date":"2020-04-20T15:44:20.000Z","updated":"2022-09-20T15:47:43.845Z","comments":true,"path":"2020/04/20/ÁÅ∞ÁäÄÁâõ/","link":"","permalink":"https://unpluggedcoder.me/2020/04/20/%E7%81%B0%E7%8A%80%E7%89%9B/","excerpt":"","text":"Êé®ËçêÂ∫¶: 3.5ÂàÜ ËøôÊú¨‰π¶ÂæàÊó©Â∞±Ë∫∫Âú®‰∫ÜÁîµÂ≠ê‰π¶Èáå, ‰πüÊòØÊúÄËøëÁñ´ÊÉÖ, ÊÉ≥Ëµ∑Êù•ÁúãÁöÑ. ‰ªäÂ§©ÂàöÁúãÂÆå. ‰π¶ÁöÑ‰∏ÄÂºÄÂßã, ÂÆåÂÖ®Ê≤°ÊêûÊòéÁôΩ‰ªÄ‰πàÊòØÁÅ∞ÁäÄÁâõ? ÂíåÂ§ßÊ¶ÇÁéáÂç±Êú∫ÊúâÂï•ÂÖ≥Á≥ª? ÂêéÈù¢ÊâçÊÖ¢ÊÖ¢ÊòéÁôΩ. ÂÖ∂ÂÆû, Ëá™Â∑±ÁîüÊ¥ª‰∏≠ÊúâÂ•ΩÂ§öËøôÊ†∑ÁöÑ‰∫ãÊÉÖÂú®‰∏ÄÊ≠•Ê≠•ÈÄºËøë. ÊÄéÊ†∑ÊâçËÉΩÂà©Áî®Ëøô‰∫õÂ§ßÁöÑË∂ãÂäøÂë¢? Â∞±ÂÉèÊàëÂú®Êé®Áâπ‰∏äËÅäÂà∞ÁöÑ‰∏ÄÁÇπ:‚ÄúËÆæÊÉ≥‰∏Ä‰∏ã,ÂÅáÂ¶ÇRustËøôÈó®ËØ≠Ë®ÄÂÉèÁé∞Âú®Java‰∏ÄÊ†∑Â§ßËßÑÊ®°‰ΩøÁî®Ëµ∑Êù•‰ºöÂèëÁîü‰ªÄ‰πàÂèòÂåñ?Áî®Êà∑‰ΩìÈ™åÊèêÂçá,‰ºöÊ∑òÊ±∞ÊéâÊÄßËÉΩÂ∑ÆÁöÑ‰∫ßÂìÅ‰πà? ÂØπ‰ºÅ‰∏öÊù•ËØ¥,‰ºöËäÇÁúÅ‰∏ãÈùûÂ∏∏Â§öÁöÑÁÆóÂäõ,ÊàñËÄÖËØ¥ÂêåÁ≠âËµÑÊ∫ê‰∏ã‰ºÅ‰∏öÊàñÁ°¨‰ª∂ÂèØ‰ª•ÂÅöÊõ¥Â§öÁöÑËÆ°ÁÆó.‰∏ã‰∏Ä‰ª£ÁºñÁ®ãËØ≠Ë®ÄÁöÑÂá∫Áé∞Â∫îËØ•ÊòØÂ§ßÊ¶ÇÁéá‰∫ã‰ª∂,ÂèØ‰ª•ËØ¥ÊòØÊ≠£ÂêëÊàë‰ª¨ÂÜ≤Êù•ÁöÑÁÅ∞ÁäÄÁâõ,Â¶Ç‰ΩïÂà©Áî®Ëøô‰∏™Ë∂ãÂäø?‚Äù ÂÉèËøôÊ†∑ÁöÑÊÉÖÂÜµÂæàÂ§ö, ‰π¶ÈáåÊèêÂà∞‰∏ÄÁÇπ‰πüÊòØËÆ©ÊàëËßâÂæóÂæàÊúâÊÑèÊÄù: ÂØπÊ∞¥ËµÑÊ∫ê‰øùÊä§ËäÇÁ∫¶Áõ∏ÂΩìÈáçËßÜÁöÑ‰∏ç‰ªÖÊúâÊîøÂ∫úÂíåÂÖ¨ÁõäÁªÑÁªá, ËøòÊúâÂ§ßÂûãÁöÑÈ£üÂìÅÂïÜ‰∏öÂÖ¨Âè∏, Ëøô‰∫õÂÖ≥‰πé‰ªñ‰ª¨ÁöÑÂà©ÁõäÂíåÊàêÊú¨. ÂÖ∂ÂÆûÂ¶ÇÊûú‰ªéÁ±ª‰ººËøôÊ†∑ÁöÑËßíÂ∫¶ÂéªÁúãÂæÖÂç±Êú∫, ÈÇ£‰πàÊàëÁõ∏‰ø°ÂæàÂ§ö‰∫∫ÈÉΩÊÑøÊÑèÂ±ïÂºÄË°åÂä®. ÂîØ‰∏Ä‰∏çÂèòÁöÑÊòØÂèòÂåñ, Êù•~Êã•Êä±‰∏™ÂèòÂåñüòÇ.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[]},{"title":"ÁÆóÊ≥ïËØ¶Ëß£ÔºàÂç∑1Ôºâ‚ÄîÁÆóÊ≥ïÂü∫Á°Ä","slug":"Algorithms Illuminated, Part 1","date":"2020-04-20T15:40:20.000Z","updated":"2022-09-20T15:49:35.487Z","comments":true,"path":"2020/04/20/Algorithms Illuminated, Part 1/","link":"","permalink":"https://unpluggedcoder.me/2020/04/20/Algorithms%20Illuminated,%20Part%201/","excerpt":"Êé®ËçêÂ∫¶: 4.5ÂàÜ ËøôÊú¨‰π¶Âº∫ÁÉàÊé®Ëçê, ËñÑËñÑÁöÑ‰∏ÄÊú¨, ‰∏ìÊ≥®Âú®ÂàÜÊ≤ªÁÆóÊ≥ï‰∏ä. ‰ªéÊï¥Êï∞‰πòÊ≥ïÂà∞ÊéíÂ∫è, ÊÖ¢ÊÖ¢Âú∞ÂºïÂá∫‰∫ÜÂàÜÊ≤ªÁÆóÊ≥ïÁöÑÊ†∏ÂøÉ‰∏ªÊñπÊ≥ï. Á©øÊèíÂú®‰π¶‰∏≠ÁöÑÂ∞èÊÄùËÄÉÈ¢ò‰πüÂæàÁÆÄÂçï. ËæπÂ≠¶ËæπÁªÉ, ÂæàÂÆπÊòìÊää‰∏ªÊñπÊ≥ïÊéåÊè°. ËøôÊâçÁü•ÈÅìÂàÜÊ≤ªÁÆóÊ≥ïÁöÑËØÑ‰º∞ÂéüÊù•ÊúâËøô‰∫õÈó®ÈÅì.","text":"Êé®ËçêÂ∫¶: 4.5ÂàÜ ËøôÊú¨‰π¶Âº∫ÁÉàÊé®Ëçê, ËñÑËñÑÁöÑ‰∏ÄÊú¨, ‰∏ìÊ≥®Âú®ÂàÜÊ≤ªÁÆóÊ≥ï‰∏ä. ‰ªéÊï¥Êï∞‰πòÊ≥ïÂà∞ÊéíÂ∫è, ÊÖ¢ÊÖ¢Âú∞ÂºïÂá∫‰∫ÜÂàÜÊ≤ªÁÆóÊ≥ïÁöÑÊ†∏ÂøÉ‰∏ªÊñπÊ≥ï. Á©øÊèíÂú®‰π¶‰∏≠ÁöÑÂ∞èÊÄùËÄÉÈ¢ò‰πüÂæàÁÆÄÂçï. ËæπÂ≠¶ËæπÁªÉ, ÂæàÂÆπÊòìÊää‰∏ªÊñπÊ≥ïÊéåÊè°. ËøôÊâçÁü•ÈÅìÂàÜÊ≤ªÁÆóÊ≥ïÁöÑËØÑ‰º∞ÂéüÊù•ÊúâËøô‰∫õÈó®ÈÅì. ÊúÄÂêéÂá†Á´†‰ªéQuickSortÂºÄÂßã, Êè≠Á§∫‰∫Ü‰∏∫‰ªÄ‰πàÈöèÊú∫ÂåñQuickSort‰πüÊúâO(nlogn)ÁöÑÊïàÁéá. ÂÜç‰ªéËøôÈáåÂºïÁî≥Âà∞RSelectÂíåDSelectÁÆóÊ≥ï‰∏ä, ÊÑüËßâÈùûÂ∏∏Â∑ßÂ¶ô, Áõ¥ËßÇ‰∏äÊàë‰ª•‰∏∫ÊòØÂÆåÂÖ®‰∏§‰∏™ÁÆóÊ≥ïÈ¢ò(Âè™ËÉΩËØ¥Ëá™Â∑±Â§™Âº±‰∫ÜüòÇ), Ê≤°ÊÉ≥Âà∞QuickSortÁöÑÊÄùÊÉ≥ÂÆåÂÖ®ÂèØ‰ª•‰ΩøÁî®Âú®ÂêéÈù¢ÁöÑ‰∏§‰∏™ÁÆóÊ≥ï‰∏ä. ËÄåDSelectÁöÑÊÄùË∑ØÂæàÂ•Ω, ‰ΩÜ‰ªÖ‰ªÖÂõ†‰∏∫ÈúÄË¶ÅÁÆ°ÁêÜÈ¢ùÂ§ñÁöÑÂÜÖÂ≠òÁ©∫Èó¥, ÂØºËá¥‰∫ÜË¢´ÂºÉÁî®, ÂèØËßÅÁÆóÊ≥ïÂíåÂÆûÈôÖÁöÑÊÄßËÉΩÂ∑•Á®ãËøòÊòØÊúâ‰∏Ä‰∫õÂèñËàçÁöÑ. Ëøô‰∏™Á≥ªÂàóÂéüÂêçÊòØ„Ää Algorithms Illuminated„Äã, ÊÄªÂÖ±Êúâ‰∏âÂç∑, Ê≤°ÁúãÁöÑ‰π¶Â§™Â§ö‰∫Ü, Á≠âÂà∞Âà∑ÂÆå‰∫ÜÊâã‰∏äÁöÑ‰π¶ÂÜçËÄÉËôëÂêéÈù¢‰∏§Âç∑Âêß. ‰π∞‰π¶Â¶ÇÂ±±ÂÄí, ËØª‰π¶Â¶ÇÊäΩ‰∏ùÊòØÁúüÁöÑ.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"ÁÆóÊ≥ï","slug":"ÁÆóÊ≥ï","permalink":"https://unpluggedcoder.me/tags/%E7%AE%97%E6%B3%95/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://unpluggedcoder.me/tags/Algorithm/"}]},{"title":"Rust High Performance","slug":"RustHighPerformance","date":"2020-04-20T14:46:20.000Z","updated":"2022-09-20T15:50:29.756Z","comments":true,"path":"2020/04/20/RustHighPerformance/","link":"","permalink":"https://unpluggedcoder.me/2020/04/20/RustHighPerformance/","excerpt":"","text":"Êé®ËçêÂ∫¶: 2.0ÂàÜ ÊÄé‰πàËØ¥Âë¢? ËøôÊú¨‰π¶Âá†‰πéÂ∞±Ê≤°ÊúâË∞à‰ªª‰ΩïRustÈ´òÊÄßËÉΩÁöÑÁºñÁ®ãÊäÄÂ∑ß, ÂèçËÄåÂ§ßÈÉ®ÂàÜÈÉΩÊòØ‰∏Ä‰∫õRustÊñπÈù¢ÁöÑ‚ÄúÊúÄ‰Ω≥ÂÆûË∑µ‚Äù. ÊØîÂ¶Ç‰ΩøÁî®Clippy„ÄÅCriterion. ÂîØ‰∏Ä‰∏Ä‰∏™Âç∞Ë±°ÊØîËæÉÊ∑±ÂàªÁöÑÂ∞±ÊòØ: ‰∏çË¶ÅÂú®forÂæ™ÁéØ‰∏≠‰ΩøÁî®vec[]‰∏ãÊ†áÁ¥¢ÂºïÁöÑÊñπÂºèËø≠‰ª£ËÆøÈóÆÂÖÉÁ¥†, ËøôÊòØÂÖ∂ÂÆÉËØ≠Ë®ÄÁªèÂ∏∏ÂÅöÁöÑ‰∫ãÊÉÖ, ËÄåÂú®Rust‰∏≠, ‰∏ãÊ†áËÆøÈóÆ‰ºöËøõË°åËøêË°åÊó∂Ê£ÄÊü•, Â¶ÇÊûúË∂äÁïåÂàô‰ºöpanic, ËøôÁßçÊ£ÄÊü•‰ºöÊçüËÄóÊÄßËÉΩ. Êõ¥Â•ΩÁöÑÊñπÂºèÊòØÂ∫îËØ•Áî®Ëø≠‰ª£Âô®ÊñπÊ≥ïiter() Ëøô‰∏™ÁÇπÊòØÂú®‰π¶ÁöÑÂºÄÂ§¥Ââç‰∏§Á´†ÊèêÂà∞ÁöÑ, ÁÑ∂ÂêéÊï¥Êú¨‰π¶Â∞±Ê≤°ÊúâÂÜçË∞à‰ªª‰ΩïÁöÑRustÈ´òÊÄßËÉΩÁºñÁ®ãÊäÄÂ∑ß‰∫Ü. ÂÄí‰∏çÂ¶Ç„ÄäRust Programming„ÄãÊù•ÂæóÂÆûÂú®. ÂÜôËøôÁØáÊñáÁ´†ÁöÑÁõÆÁöÑËÆ©Â§ßÂÆ∂‰∏çË¶ÅË∏©Âùë‰∫Ü.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"}]},{"title":"Â•àÈ£ûÊñáÂåñÊâãÂÜå","slug":"Â•àÈ£ûÊñáÂåñÊâãÂÜå","date":"2020-04-20T14:44:20.000Z","updated":"2022-09-20T15:48:28.611Z","comments":true,"path":"2020/04/20/Â•àÈ£ûÊñáÂåñÊâãÂÜå/","link":"","permalink":"https://unpluggedcoder.me/2020/04/20/%E5%A5%88%E9%A3%9E%E6%96%87%E5%8C%96%E6%89%8B%E5%86%8C/","excerpt":"Êé®ËçêÂ∫¶: 4.0ÂàÜ ËøôÊú¨‰π¶Â∏¶ËØªËÄÖ‰ªé‰∏Ä‰∏™‰∫∫ÂäõËµÑÊ∫êÁöÑËßÜËßíÊù•ÁúãÂ•àÈ£ûÊñáÂåñ. ‰π¶ÁöÑËã±ÊñáÂêçÊòØ„ÄäPowerful: Building a Culture of Freedom and Responsibility„Äã, ‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πà‰∏çÂ•ΩÂ•ΩÁøªËØë.","text":"Êé®ËçêÂ∫¶: 4.0ÂàÜ ËøôÊú¨‰π¶Â∏¶ËØªËÄÖ‰ªé‰∏Ä‰∏™‰∫∫ÂäõËµÑÊ∫êÁöÑËßÜËßíÊù•ÁúãÂ•àÈ£ûÊñáÂåñ. ‰π¶ÁöÑËã±ÊñáÂêçÊòØ„ÄäPowerful: Building a Culture of Freedom and Responsibility„Äã, ‰∏çÁü•ÈÅì‰∏∫‰ªÄ‰πà‰∏çÂ•ΩÂ•ΩÁøªËØë. ![img](images/s29923776.jpg) ËøôÊú¨‰π¶ÁªôÊàë‰∏§‰∏™Âç∞Ë±°ÊØîËæÉÊ∑±ÂàªÁöÑÁÇπ. ‰∏Ä. Âè™ÊãõÊàêÂπ¥‰∫∫. Ëøô‰∏™Áúã‰ººÁÆÄÂçï, ÂÆûÈôÖËØÑ‰ª∑ÁöÑÊ†áÂáÜÂç¥Âõ†‰∫∫ËÄåÂºÇ. Êï¥Êú¨‰π¶ÊèèËø∞ÁöÑÊñáÂåñÂâçÊèêÂ∞±ÊòØÂú®ËøôÊ†∑ÁöÑ‰∏ÄÁæ§‰∫∫‰∏≠ÊâçÂæó‰ª•Êé®ÂπøÁöÑÊñáÂåñ. ËÆ§ÂêåÂÖ¨Âè∏ÁöÑ‰ª∑ÂÄºËßÇ, ËÉΩÂ§üÊúâËá™È©±ÂäõÂéª‰∏∫ÂÖ¨Âè∏ÂÅöÊ≠£Á°ÆÁöÑ‰∫ã. ‰∫å. ËÆ©‰∫∫‰∫ã‰πüÊ∑±ÂÖ•ÁêÜËß£ÂÖ¨Âè∏‰∏öÂä°. Ëøô‰∏™Ê¶ÇÂøµÊòØÊàë‰ª•ÂâçÊ≤°ÊúâÂê¨ËØ¥ËøáÁöÑ, ‰πüËÆ©ÊàëÊÉ≥Ëµ∑Êù•ÊõæÁªèÁúãËøá‰∏Ä‰∏™HR‰∏∫‰∫ÜÊâæÂà∞Â•ΩÁöÑÁ®ãÂ∫èÂëò, ÂàõÂª∫Ëá™Â∑±ÁöÑGitHubË¥¶Âè∑, ÂºÄRepo, ÁîöËá≥ÊúâËá™Â∑±ÁöÑ‰∏™‰∫∫Á´ô. ‰ΩúËÄÖËøôÈáåËØ¥ÁöÑ‰∏ç‰ªÖ‰ªÖÊòØËûçÂÖ•ÊäÄÊúØÊñáÂåñ, ËÄåÊòØÂèÇ‰∏éÂà∞ÂÖ¨Âè∏ÁöÑ‰∏öÂä°‰∏≠Âéª, Ê∑±ÂÖ•‰∫ÜËß£ÂÖ¨Âè∏ÈúÄË¶Å‰ªÄ‰πàÊ†∑ÁöÑ‰∫∫Êâç. Èô§‰∫Ü‰∏äÈù¢‰∏§ÁÇπ‰πãÂ§ñÁöÑÁêÜÂøµÂèØ‰ª•Âú®„ÄäÁ≤æÁõäÂàõ‰∏ö„ÄãÂíå„ÄäÂØå‰∫∫ÊÄùÁª¥„ÄãÈáåÁúãÂà∞‰∏Ä‰∫õÁ±ª‰ººÁöÑËßÇÁÇπ. ÂÖ∂ÂÆûÊúÄÈöæÂÆûË∑µÁöÑÂèØËÉΩÂ∞±ÊòØÈÄèÊòéÂ∫¶‰∫Ü, Âú®ÂõΩÂÜÖËøôÁßçÂÖ¨Âè∏Ê∞õÂõ¥‰∏ã, ‰∏ç996Â∞±ÁÆóÊòØÂπ∏Á¶èÁöÑ‰∫Ü.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[]},{"title":"ÁªüËÆ°ÊÄùÁª¥","slug":"Think Stats","date":"2020-04-20T14:40:20.000Z","updated":"2022-09-15T15:51:05.350Z","comments":true,"path":"2020/04/20/Think Stats/","link":"","permalink":"https://unpluggedcoder.me/2020/04/20/Think%20Stats/","excerpt":"","text":"„ÄäÁªüËÆ°ÊÄùÁª¥‚ÄîÁ®ãÂ∫èÂëòÊï∞Â≠¶‰πãÊ¶ÇÁéáÁªüËÆ°ÔºàÁ¨¨2ÁâàÔºâ„Äã Êé®ËçêÂ∫¶: 4.0ÂàÜ ËøôÊú¨‰π¶Ëã±ÊñáÂêçÊòØ„ÄäThink Stats„Äã, ‰ΩúËÄÖ [[Áæé] Allen B. Downey](https://book.douban.com/search/Allen B. Downey)ËøòÂÜô‰∫Ü‰∏ÄÊú¨ÊòØ„ÄäThink Bayes„Äã. ËøôÊú¨‰π¶ËØªÂÆå‰∏Ä‰∏™Â§öÊúà, Âà∞Áé∞Âú®ÊØîËæÉÊúâÂç∞Ë±°ÁöÑÂ∞±ÊòØÂàÜÂ∏ÉÁ¥ØËÆ°ÂáΩÊï∞(CDF), ‰ªéËøô‰∏™ËßíÂ∫¶ÂèØ‰ª•ÂèëÁé∞Âá∫ÂæàÂ§öÊúâÊÑèÊÄùÁöÑÊ®°Âûã. ÊØîÂ¶Ç, ‰∏Ä‰∏™Á®ãÂ∫èmallocÁöÑsizeÂ§ßÂ∞è, Â∞±ÂæàÂÉèÊåáÊï∞ÂàÜÂ∏ÉÁöÑÁ¥ØÁßØÂàÜÂ∏ÉÂáΩÊï∞(Êàë‰∏ÄÂºÄÂßã‰ª•‰∏∫ÊòØ). ‰ΩÜÂÆûÈôÖ‰∏äÂáÜÁ°ÆËØ¥Â∫îËØ•ÊòØÂèçÂç°ÊñπÂàÜÂ∏ÉÁöÑÁ¥ØÁßØÂàÜÂ∏ÉÂáΩÊï∞. Ëøô‰∏ÄÁÇπÊàë‰πüÊòØÂú®glibcÁöÑbenchtests‰∏≠ÂèëÁé∞ÁöÑ. Ê≠§Â§ñ, ËøòÊúâÂÅáËÆæÊ£ÄÈ™åÁ≠âÁ≠âÊµÅÁ®ã. ËÆ©Á®ãÂ∫èÂëòÂèØ‰ª•Áü•ÈÅìÂ¶Ç‰ΩïÂáÜÁ°ÆÂú∞Ë°®Ëø∞Âá∫‰∏Ä‰∏™Êï∞ÊçÆÊåáÊ†á(ËôΩÁÑ∂ÂÆûÈôÖËøêÁî®‰∏≠‰∏ç‰ºöËøô‰πàÂéªÊ£ÄÈ™å‚Ä¶).","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"ÁªüËÆ°Â≠¶","slug":"ÁªüËÆ°Â≠¶","permalink":"https://unpluggedcoder.me/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"}]},{"title":"ÂõæËØ¥ÈáëËûçÂè≤","slug":"ÂõæËØ¥ÈáëËûçÂè≤","date":"2020-03-16T15:40:20.000Z","updated":"2022-09-20T15:50:47.594Z","comments":true,"path":"2020/03/16/ÂõæËØ¥ÈáëËûçÂè≤/","link":"","permalink":"https://unpluggedcoder.me/2020/03/16/%E5%9B%BE%E8%AF%B4%E9%87%91%E8%9E%8D%E5%8F%B2/","excerpt":"Êé®ËçêÂ∫¶: 3.5ÂàÜ Â¶ÇÊûú‰∏çÁÆóÊó©‰∫õÂπ¥ËØªÁöÑ„ÄäË¥ßÂ∏ÅÊàò‰∫â„Äã, ËøôÂ∫îËØ•ÊòØ‰ªéË±°ÁâôÂ°îÈáåÂá∫Êù•ÂêéËØªÁöÑÁ¨¨‰∏ÄÊú¨ÂéÜÂè≤‰π¶‰∫Ü. Ê≤°ÊúâÁâπÊÑèÊåëÂì™Êú¨‰π¶, ÈöèÊÑèÂú®‰∫öÈ©¨ÈÄä‰∏äÁúãÂà∞Â∞±ËØª‰∫Ü. ÊÑüÂèóËøòÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑ.","text":"Êé®ËçêÂ∫¶: 3.5ÂàÜ Â¶ÇÊûú‰∏çÁÆóÊó©‰∫õÂπ¥ËØªÁöÑ„ÄäË¥ßÂ∏ÅÊàò‰∫â„Äã, ËøôÂ∫îËØ•ÊòØ‰ªéË±°ÁâôÂ°îÈáåÂá∫Êù•ÂêéËØªÁöÑÁ¨¨‰∏ÄÊú¨ÂéÜÂè≤‰π¶‰∫Ü. Ê≤°ÊúâÁâπÊÑèÊåëÂì™Êú¨‰π¶, ÈöèÊÑèÂú®‰∫öÈ©¨ÈÄä‰∏äÁúãÂà∞Â∞±ËØª‰∫Ü. ÊÑüÂèóËøòÊòØ‰∏ç‰∏ÄÊ†∑ÁöÑ. ËøôÊú¨‰π¶ÂâçÂçäÊú¨ÈÉΩÊÑüËßâÈùûÂ∏∏Â•Ω, ‰ªéÈáëËûçËßíÂ∫¶Áúã‰∏ñÁïåÁöÑÂèòÈù©, ÂéªÂØªÊâæ‰∏≠ÂõΩËøë‰ª£Âè≤ÁöÑË£ÇÂèòÁöÑÊ†πÂõ†. Êó∂Èó¥ËΩ¥ÂæàÊ∏ÖÊô∞, Âæ™Â∫èÊ∏êËøõ, ÁúãÂà∞Ëøë‰ª£‰∏≠ÂõΩ‰∏ÄÂá∫‰∏çÂèØÈÅøÂÖçÁöÑÊÇ≤ÂâßÊ≠£‰∏äÊºî. ÂèØËÉΩÂíå‰ΩúËÄÖËÆ∫Êñá‰∏ªÈ¢òÂ∞±ÊòØËøô‰∏™Êó∂‰ª£ÁöÑÂÖ≥Á≥ª, Ëøá‰∫ÜËøô‰∏™Êó∂‰ª£, ‰πüÂ∞±ÊòØ‰∏ãÂçäÊú¨‰π¶ÊÑüËßâ‰∏çÂá∫‰ΩúËÄÖÊÉ≥Ë°®Ëææ‰ªÄ‰πàÊ†∑ÁöÑ‰∏ªÈ¢ò, ‰∏úÊç°‰∏ÄÈÉ®ÂàÜÂéÜÂè≤ËØ¥ËØ¥, Ë•øÊåë‰∏Ä‰∏™‰∫∫Áâ©ËÆ≤ËÆ≤, Êó∂Èó¥Á∫øÊØîËæÉÊ∑∑‰π±. ÂΩìÁÑ∂ÊàëÊú¨Ë∫´ÁöÑÈáëËûçÊ∞¥Âπ≥Âíå‰ΩúËÄÖÁõ∏ÊØîÊúâÂ§©Â£§‰πãÂà´, ÊàñËÆ∏Êó†Ê≥ïÁêÜËß£‰∏Ä‰∫õËøëÁé∞‰ª£ÈáëËûçË°çÁîüÁâ©ÁöÑÊúØËØ≠. Ë±ÜÁì£‰∏äÊúâ‰∫õËØÑËÆ∫ÈíàÂØπ‰ΩúËÄÖÁöÑÂõæÁâáÂºïÁî®, Áî±‰∫éÊú¨Ë∫´ÊòØCSÂá∫Ë∫´ÁöÑÂéüÂõ†, ÁöÑÁ°ÆÂèëÁé∞‰ΩúËÄÖÂºïÁî®ÁöÑÂõæÁâáÂæàÂ∞ëÊúâÁâàÊùÉÂá∫Â§ÑËØ¥Êòé, ‰∏çËøá‰ΩúËÄÖÁöÑÁõÆÁöÑÊòØËææÂà∞‰∫Ü, Áî®ÂæàÂ§öÂõæÁâáËÆ≤Ëø∞‰∫ÜÂéÜÂè≤ÊÄßÁöÑ‰∫ßÁâ©. Êç¢‰∏™ËßíÂ∫¶ÁúãÂéÜÂè≤, ËøôÊâçÊòØÊàëÂéª‰∫ÜËß£ÂéÜÂè≤ÁöÑÊúÄÂ§ßÂä®Âäõ. Â≠¶Ê†°ÈáåÁöÑÂéÜÂè≤ÂÖ®ÈÉ®ÈÉΩÊòØÂõ¥ÁªïÁùÄxxx‰∏ª‰πâÊù•ÊèèËø∞, ËÄåÂ≠¶ÁîüÂÆåÂÖ®‰∏çÁü•ÈÅìËÉåÂêéÁ©∂Á´üÂèëÁîü‰∫Ü‰ªÄ‰πà?ÁúüÊ≠£ÁöÑÂéüÂõ†ÂèàÊòØ‰ªÄ‰πà?ÊâÄÊúâÁöÑÂéÜÂè≤ÂèòÈù©ÈÉΩÈÄÉ‰∏çÂºÄÈáëÈí±ÂíåÊùÉÂäõ, ‰∫¶ÂïÜ‰∫¶ÊîøÈÉΩÂÖ≥‰πéËøô‰∫õ. ÊàëÂ∞ÜÊù•ÁªôÂ≠©Â≠êËÆ≤ÂéÜÂè≤, ‰∏ÄÂÆöÊòØÂõ¥ÁªïÁùÄËøô‰∫õÂÆûÁöÑ‰∏úË•øÂèòÈù©Êù•ÂèôËø∞. ÂéÜÂè≤ÊÄªÊòØÊÉä‰∫∫ÁöÑÁõ∏‰ºº, ÊúâÂ§™Â§öÂèØ‰ª•ÂÄüÈâ¥‰∫Ü, ‰ªéÂéÜÂè≤‰∏≠ÊâæÂà∞ÁªèÈ™åÂíåÁ≠îÊ°àÊù•ÁªôÁé∞‰ª£ÁöÑËá™Â∑±ÈÅøÂùë. Â∞±ÂÉè‰ΩúËÄÖÂâØÊ†áÈ¢òÊâÄËØ¥ÁöÑ:‚ÄúÊ≠£ËßÜÂéÜÂè≤, ÊòØÂØπÊú™Êù•ÊúÄÂ•ΩÁöÑÈ¶àËµ†.‚Äù ÊúÄÂêé, ÊÑüË∞¢‰ΩúËÄÖÊùéÂºòüôè!","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"ÈáëËûçÂ≠¶","slug":"ÈáëËûçÂ≠¶","permalink":"https://unpluggedcoder.me/tags/%E9%87%91%E8%9E%8D%E5%AD%A6/"}]},{"title":"ÈÇ£‰∫õÁî±RustÊâìÈÄ†ÁöÑÈ´òÊïàÁîü‰∫ßÂäõÂ∑•ÂÖ∑(Updated on 2020-2-25)","slug":"RustTools","date":"2020-02-18T14:36:20.000Z","updated":"2022-09-20T15:46:38.322Z","comments":true,"path":"2020/02/18/RustTools/","link":"","permalink":"https://unpluggedcoder.me/2020/02/18/RustTools/","excerpt":"ÊúÄËøëÊ≤âËø∑‰∫é‰∏ÄÊâπRustÁºñÂÜôÁöÑÁîü‰∫ßÂäõÂ∑•ÂÖ∑, ÊØè‰∏™ÈÉΩÊòØblazing-fast, ÊúâÁöÑËøòÂæàÈÖ∑ÁÇ´. Âú®ËøôÈáåÂÅö‰∏™Êî∂ÈõÜÂàÜ‰∫´, ÂÖ∑‰ΩìÂÆâË£Ö„ÄÅÊïôÁ®ãÂ∞±‰∏çÁªÜËØ¥‰∫Ü, Ëá™Ë°åÊü•ÈòÖ.","text":"ÊúÄËøëÊ≤âËø∑‰∫é‰∏ÄÊâπRustÁºñÂÜôÁöÑÁîü‰∫ßÂäõÂ∑•ÂÖ∑, ÊØè‰∏™ÈÉΩÊòØblazing-fast, ÊúâÁöÑËøòÂæàÈÖ∑ÁÇ´. Âú®ËøôÈáåÂÅö‰∏™Êî∂ÈõÜÂàÜ‰∫´, ÂÖ∑‰ΩìÂÆâË£Ö„ÄÅÊïôÁ®ãÂ∞±‰∏çÁªÜËØ¥‰∫Ü, Ëá™Ë°åÊü•ÈòÖ. ripgrepÊúÄÂàÅÁöÑÂ∫îËØ•Â∞±ÊòØripgrep‰∫Ü, ÂêçÁß∞‰πüËµ∑ÂæóÂæàË∞ÉÁöÆ: R.I.P grep, ÊÑèÂõæÂæàÊòéÊòæ‰∫Ü, Â∞±ÊòØÂèñ‰ª£grepÁöÑ, ‰∏îÂÆûÈôÖÊÄßËÉΩÁ¢æÂéãgrep. ‰ΩúËÄÖÂú®‰ªñÁöÑÊñáÁ´†‰∏≠Âàó‰∏æ‰∫ÜÂæàÂ§öbenchmark. Êà™Âèñ‰∏Ä‰∏™ÊÑüÂèó‰∏Ä‰∏ã: Tool Command Line count Time ripgrep rg -L -u -tc -n -w &#39;[A-Z]+_SUSPEND&#39; 404 0.079s ucg ucg --type=cc -w &#39;[A-Z]+_SUSPEND&#39; 390 0.163s GNU grep egrep -R -n --include=&#39;*.c&#39; --include=&#39;*.h&#39; -w &#39;[A-Z]+_SUSPEND&#39; 404 0.611s ‰∏çËøá, ÊàëÁî®ÂæóÊúÄÂ§öÁöÑÂπ∂‰∏çÊòØrgÂëΩ‰ª§, ËÄåÊòØÂú®vim‰∏≠ÁöÑLeaderFÊèí‰ª∂ÁöÑÊ®°Á≥äÂåπÈÖç, ÈÄüÂ∫¶‰πüÊòØË¥ºÂø´. infernoinfernoËøô‰∏™Â∑•ÂÖ∑ÂæàÂ§ö‰∫∫‰∏çÂ∏∏Áî®, ‰ΩÜÊòØÂØπÊàëÁöÑÂ∏ÆÂä©ÊòØÊúÄÂ§ßÁöÑ. Âá†‰πéÁßíÁîüÊàêüî•ÁÅ´ÁÑ∞ÂõæÁöÑÂ∑•ÂÖ∑, ÂíåÂéüÁâàFlameGraphÁõ∏ÊØî, ÈÄüÂ∫¶Âø´‰∫Ü18~20ÂÄç. Ë¥¥‰∏Ä‰∏™‰ΩúËÄÖÁöÑbenchmark: 123456789101112131415collapse/dtrace/1 time: [8.2767 ms 8.2817 ms 8.2878 ms] thrpt: [159.08 MiB/s 159.20 MiB/s 159.29 MiB/s]collapse/dtrace/12 time: [3.8631 ms 3.8819 ms 3.9019 ms] thrpt: [337.89 MiB/s 339.63 MiB/s 341.28 MiB/s]collapse/perf/1 time: [16.386 ms 16.401 ms 16.416 ms] thrpt: [182.37 MiB/s 182.53 MiB/s 182.70 MiB/s]collapse/perf/12 time: [4.8056 ms 4.8254 ms 4.8460 ms] thrpt: [617.78 MiB/s 620.41 MiB/s 622.97 MiB/s]collapse/sample time: [8.9132 ms 8.9196 ms 8.9264 ms] thrpt: [155.49 MiB/s 155.61 MiB/s 155.72 MiB/s]flamegraph time: [16.071 ms 16.118 ms 16.215 ms] thrpt: [38.022 MiB/s 38.250 MiB/s 38.363 MiB/s] ÊÑüÂèó‰∏Ä‰∏ãÂØπÊØî: brootËøòÂú®Áî®treeÂëΩ‰ª§Âêó? ËØïËØïbrootÂêß! ‰∫§‰∫íÂºèÁöÑÊ†ëÂΩ¢ÁªìÊûÑÊü•Êâæ, ‰∏ÄÁõÆ‰∫ÜÁÑ∂, ÂÖ≥ÈîÆÊòØÊØ´ÁßíÁ∫ßÁöÑÊü•ËØ¢ÂìçÂ∫î. dudua-clidua (-&gt; Disk Usage Analyzer) , Á±ª‰ººduÂëΩ‰ª§, ‰ΩÜÊòØÊèê‰æõ‰∫§‰∫íÂºèÁöÑÊü•ÁúãÊñπÂºè. dustdu + rust &#x3D; dust. Êõ¥Áõ¥ËßÇÁöÑÊñπÂºèÊòæÁ§∫duÂëΩ‰ª§. ‰∏çËøá‰∏çÊòØÂ∏∏ËßÑÁöÑÊ†ëÂûãÁªìÊûÑ, ËÄåÊòØÂÄíÊ†ëÂûã. dutreedutree, duÂëΩ‰ª§+treeÂëΩ‰ª§, Êèê‰æõ files-only ÂäüËÉΩ. ‰∏äÈù¢‰∏â‰∏™Â∑•ÂÖ∑, Áî±‰∫édua-cli‰∏çÂåÖÂê´Ê†ëÂûãÁ≠âÂ§çÊùÇÁöÑÂõæÂΩ¢, ÊâÄ‰ª•Âú®ÁªüËÆ°‰∏äÈÄüÂ∫¶ÊúÄÂø´(‰ª•--depth 1ÊµãËØï). ÂêÑÊúâÂçÉÁßã, Â§ßÂÆ∂ÂèØ‰ª•Ëá™ÈÄâ. batËøô‰∏™bat‰∏çÊòØÊàë‰ª¨ÊÉ≥ÁöÑBAT. ÁõÆÁöÑÊòØÂèñ‰ª£cat(cat with wings -&gt; bat). ‰ª•Ââç‰∏ÄÁõ¥ËÆ§‰∏∫catÂ∞±ÊòØÊâìÂç∞Âà∞ÁªàÁ´Ø, Áî®Êù•Êü•ÁúãÊñá‰ª∂ËÄåÂ∑≤, Áõ¥Âà∞ÁúãÂà∞‰∫Übat: Ëá™Âä®Ê†πÊçÆÊñá‰ª∂Á±ªÂûãÂÅöËØ≠Ê≥ïÈ´ò‰∫Æ, Â•ΩÁúãÂ§ö‰∫Ü. ËøòÊúâÂÖ∂ÂÆÉÁöÑÂëΩ‰ª§ÂèÇÊï∞, ÁîöËá≥Êúâ‰∏Ä‰∏™ÂíåripgrepÁªìÂêàÁöÑÂëΩ‰ª§: batgrep, Â∏¶È´ò‰∫ÆÂú∞ÊâìÂç∞ÂâçËÄÖÁöÑËæìÂá∫. hexyl Â¶ÇÊûúË¶ÅÊü•Áúã‰∫åËøõÂà∂Êñá‰ª∂ÂÜÖÂÆπÊÄé‰πàÂäû? batÂè™ËÉΩÊâìÂç∞Âá∫Êù•ÂëäËØâ‰Ω†ÊòØ &lt;BINARY&gt;. ËøôÊó∂ÂÄôÈúÄË¶Åhexyl, ÈùûÂ∏∏ÂèãÂ•ΩÁöÑ‰∫åËøõÂà∂Êü•ÁúãÂ∑•ÂÖ∑, ÊõæÁªèËøòÂú®Ëã¶Ëã¶ÂØªÊâæÂ•ΩÁî®GUIÂ∑•ÂÖ∑. ÂΩìÁÑ∂ËøòÊîØÊåÅÂæàÂ§öÂèÇÊï∞, Ëá™ÂÆö‰πâÊü•ÁúãÊñπÂºè. dtoolÈô§‰∫ÜÊü•ÁúãÊñá‰ª∂ÂÜÖÂÆπÊàñËÄÖ‰∫åËøõÂà∂Êï∞ÊçÆÂ§ñ, Êàë‰ª¨ÈÄöÂ∏∏Ëøò‰ºöËÆ°ÁÆóÊñá‰ª∂ÂìàÂ∏åÂÄºÊàñËÄÖ‰∏Ä‰∫õÂÖ∂ÂÆÉÁöÑÊñá‰ª∂Â∏∏ËßÅÊìç‰Ωú, ËÄådtoolËøô‰∏™Â∑•ÂÖ∑Â∞±ÂÉè‰∏Ä‰∏™ÂºÄÂèëËÄÖÁöÑÂ∞èÂûãÁëûÂ£´ÂÜõÂàÄ, Êèê‰æõ‰∫ÜÂºÄÂèëËÄÖÂæàÂ§öÂ∏∏ËßÅÂëΩ‰ª§Êìç‰Ωú, Â¶ÇËÆ°ÁÆóÂìàÂ∏åÂÄº„ÄÅÁºñÁ†ÅËΩ¨Êç¢Á≠âÁ≠âÂ∏∏ËßÅÊìç‰Ωú. convert a string to base64 12$ echo -n abc | dtool s2h | dtool h2b64YWJj convert a encoded timestamp to date 12$ echo -n 2c28e75d | dtool nd -tu32 | dtool ts2d2019-12-04 11:29:48 convert a jpeg to base64 12$ cat pic.jpg | dtool b2h | dtool h2b64/9j/4AAQSkZJR... calculate file md5 12$ cat pic.jpg | dtool b2h | dtool hash -a md50x1884b72e23b0c93320bac6b050478ff4 ytopÂ∏∏Áî®ÁöÑhtopÂëΩ‰ª§‰πüÊúâ‰∏Ä‰∏™RustÁöÑÁâàÊú¨, Âè´ytop, Ê†∑Â≠ê‰πüÊòØÂæàÈÖ∑ÁÇ´. procsÊõæÁªè‰πüÊòØÂêÑÁßçËÆ∞psÂëΩ‰ª§ÁöÑÂèÇÊï∞, ÂêéÊù•Áî®htop. Áé∞Âú®Êúâ‰∫Üprocs, ÂäüËÉΩ‰∏äËôΩ‰∏çÂ¶Çhtop‰∏∞ÂØå, ‰ΩÜÊòØËÉΩÂ§üÊü•ÁúãdockerÂÆπÂô®ÁöÑÁä∂ÊÄÅ. ÂêéÈù¢ÂÜçÂàÜ‰∫´‰∏§‰∏™ÊØîËæÉfancyÁöÑÂ∑•ÂÖ∑. lsdlsdÁúãÂêçÁß∞Â∞±ÊòØÊõø‰ª£lsÁöÑ, Âä†‰∫ÜÂêÑÁßçiconÂíåÈ´ò‰∫Æ, ÈúÄË¶ÅÂÆâË£ÖnerdÂ≠ó‰Ωì starship ÂÖâÁúãlogoÂíåÂêçÂ≠óÂ∞±Áü•ÈÅìÂæàfancy‰∫Ü, ‰ª•Ê®°ÂùóÁöÑÂì≤Â≠¶Êù•ÂÆö‰πâshellÁªàÁ´ØÂ±ïÁ§∫. ËøòÊúâÂè¶Â§ñ‰∏Ä‰∏™Âè´nushell, Áî®ÁªàÁ´ØÂà∂Ë°®ÁöÑÊñπÂºèÊâìÂç∞ËæìÂá∫, Âíå‰∏äÈù¢Âá†‰∏™Áõ∏ÊØîÂ∞±Ê≤°ÊúâÈ´ò‰∫Æ‰∫Ü. tui-rsÊúÄÂêéÁ•≠Âá∫tui-rs, ÊòØ‰∏Ä‰∏™RustÁöÑÁªàÁ´ØGUI library, Êèê‰æõÂêÑÁßçWidget, ÂèØ‰ª•Áî®Êù•DIYËá™Â∑±ÁöÑÁ•ûÂô®. ÂåÖÊã¨‰∏äÈù¢ÁöÑytop‰πüÊòØÂü∫‰∫étui-rsÂºÄÂèëÁöÑ. ÊÑüË∞¢ÂêÑ‰Ωç‰ΩúËÄÖÂíåRust, ÁªôÂ§ßÂÆ∂Â∏¶Êù•ÁöÑËøô‰∫õÈ´òÊïàÂ∑•ÂÖ∑, Ê¨¢ËøéÊé®Ëçêüëè. ÂºÄ‰∫Ü‰∏Ä‰∏™‰ªìÂ∫ìÁî®Êù•ËÆ∞ÂΩïÂíåÂ≠òÊîæÔºöhttps://github.com/unpluggedcoder/awesome-rust-toolsÔºå‰∏çÂÆöÊúüÊõ¥Êñ∞‰∏≠„ÄÇ","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"Productivity tools","slug":"Productivity-tools","permalink":"https://unpluggedcoder.me/tags/Productivity-tools/"},{"name":"ripgrep","slug":"ripgrep","permalink":"https://unpluggedcoder.me/tags/ripgrep/"},{"name":"lsd","slug":"lsd","permalink":"https://unpluggedcoder.me/tags/lsd/"},{"name":"broot","slug":"broot","permalink":"https://unpluggedcoder.me/tags/broot/"},{"name":"starship","slug":"starship","permalink":"https://unpluggedcoder.me/tags/starship/"},{"name":"procs","slug":"procs","permalink":"https://unpluggedcoder.me/tags/procs/"},{"name":"dua-cli","slug":"dua-cli","permalink":"https://unpluggedcoder.me/tags/dua-cli/"},{"name":"dust","slug":"dust","permalink":"https://unpluggedcoder.me/tags/dust/"},{"name":"dutree","slug":"dutree","permalink":"https://unpluggedcoder.me/tags/dutree/"},{"name":"inferno","slug":"inferno","permalink":"https://unpluggedcoder.me/tags/inferno/"},{"name":"dtool","slug":"dtool","permalink":"https://unpluggedcoder.me/tags/dtool/"},{"name":"ytop","slug":"ytop","permalink":"https://unpluggedcoder.me/tags/ytop/"},{"name":"bat","slug":"bat","permalink":"https://unpluggedcoder.me/tags/bat/"},{"name":"tui-rs","slug":"tui-rs","permalink":"https://unpluggedcoder.me/tags/tui-rs/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãMacros","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãMacros","date":"2020-02-14T16:25:20.000Z","updated":"2022-09-15T15:51:05.348Z","comments":true,"path":"2020/02/15/RustÂÖ•Èó®Â§±Ë¥•‰πãMacros/","link":"","permalink":"https://unpluggedcoder.me/2020/02/15/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BMacros/","excerpt":"","text":"MacroÂíåÂáΩÊï∞ÁöÑÂå∫Âà´ÂèØ‰ª•ÂèÇËÄÉÂÆòÊñπÊñáÊ°£. ÁÆÄÂçïÂú∞ËØ¥MacroÊòØRustÂÖÉÁºñÁ®ãÁöÑÂº∫Â§ßÊ≠¶Âô®, ÂíåC++ÁöÑÊ®°ÊùøÂú®Âêå‰∏Ä‰∏™ÈÄªËæëÂ±ÇÈù¢. ÂíåCËØ≠Ë®ÄÁöÑÂÆèÊúÄÂ§ßÁöÑÂå∫Âà´‰∏çÊòØCËØ≠Ë®ÄÂÆèÁöÑÁÆÄÂçïÊñáÊú¨ÊõøÊç¢, ËÄåÊòØËØ≠Ê≥ïÂ±ÇÈù¢ÁöÑÂ§ÑÁêÜ. MarcosÁöÑÊâ©Â±ïÊó∂Êú∫ÊòØÂú®Á±ªÂûãÊ£ÄÊü•‰πãÂâç, ‰πüËøúÂú®Êú∫Âô®‰ª£Á†ÅÁ†ÅÁîüÊàêÂâç. ÂÆè‰ºöË¢´ÁâπÊç¢ÊàêRust‰ª£Á†Å. Rust MacroÁöÑÂêåÊ†∑‰πüÊòØ‰πãÂâçËØ¥ËøáÁöÑÂü∫‰∫éÊ®°ÂºèÂåπÈÖç, Âõ†Ê≠§‰∏ç‰ºöÂá∫Áé∞ÊèíÂÖ•‰∏çÂØπÁß∞Êã¨Âè∑ÁöÑRust‰ª£Á†ÅÁ≠âËøôÁ±ªÈîôËØØ. RustÂú®Êâ©Â±ïMacroÊó∂ÂøÖÈ°ªË¶ÅÂÖàÂÆö‰πâ, ËøôÂíåÂáΩÊï∞‰∏çÂêå, ÂáΩÊï∞ÁöÑÂÆö‰πâ‰ΩçÁΩÆÈ°∫Â∫èÊ≤°ÊúâË¶ÅÊ±Ç, ËÄåRust‰ª£Á†ÅÂú®ÁºñËØëÊó∂ÈÅáÂà∞MacroÂøÖÈ°ªÂÖàÂ±ïÂºÄ, ËÄå‰∏ç‰ºöÁªßÁª≠Ëµ∞‰∏ãÂéª. MacroÊ®°ÂºèÂåπÈÖçËßÑÂàô ‰ª•assert_eq!‰∏∫‰æã, Êù•Ëß£Èáä‰∏ãMacroÁöÑÊ®°ÂºèÂåπÈÖç: assert_eqÊòØMacroÁöÑÂêçÁß∞, ÂêéÈù¢Á¥ßÈöèÁöÑdelimiterÊ≤°ÊúâÂº∫Âà∂Ë¶ÅÊ±ÇÊòØÂ§ßÊã¨Âè∑, ÁîöËá≥ÂèØ‰ª•ÊòØÂ∞èÊã¨Âè∑ÊàñËÄÖ‰∏≠Êã¨Âè∑. Ë∞ÉÁî®Êó∂‰πüÊòØ‰∏ÄÊ†∑, ‰∏ãÈù¢ÁöÑÈÉΩÊòØÂêàÊ≥ïÁöÑ: 123456assert_eq!(gcd(6, 10), 2);assert_eq![gcd(6, 10), 2];assert_eq!&#123;gcd(6, 10), 2&#125;;let x = vec![1,2,3];let y = vec!&#123;1,2,3&#125;; ‚áíÁ¨¶Âè∑Â∑¶ËæπÁöÑÂè´MacroMatcher, ÁÆÄÂçïÂú∞ËØ¥ÂèØ‰ª•ÁêÜËß£‰∏∫pattern, Âç≥Ê®°ÂºèÂåπÈÖç. ÂÆÉÁöÑÂåπÈÖçËßÑÂàôÊòØ‰ª•token‰∏∫ÂØºÂêëÁöÑ, ËøôÁÇπÂíåÊ≠£ÂàôÂåπÈÖç‰∏çÂêå(‰ª•Â≠óÁ¨¶‰∏∫ÂØºÂêëÁöÑÂåπÈÖç). Âõ†Ê≠§Âú®patternÈáåÂä†ÂÖ•Á©∫Ê†ºÊàñËÄÖÊ≥®ÈáäÈÉΩÊòØÂÖÅËÆ∏ÁöÑ. ÊØè‰∏™patternÁî±‰∏ÄÂØπ$name:designator(‰ª£Âè∑)ÁªÑÊàê, ÂâçËÄÖÊòØ‰ª£Âè∑ÁöÑÂèòÈáèÂêç, ÂêéËÄÖ‰ª£Âè∑ÊåáÁ§∫Ëøô‰∏™ÂèòÈáèÂ∞ÜÊåâÂì™ÁßçÁ±ªÂûãËßÑÂàôÊù•ÂåπÈÖç. Â∏∏ËßÅÁöÑÊúâ: item: an item, such as a function, a struct, a module, etc. block: a block (i.e. a block of statements and&#x2F;or an expression, surrounded by braces) stmt: a statement pat: a pattern expr: an expression ty: a type ident: an identifier path: a path (e.g. foo, ::std::mem::replace, transmute::&lt;_, int&gt;, ‚Ä¶) meta: a meta item; the things that go inside #[...] and #![...] attributes tt: a single token tree ÊØîËæÉÈöæÁêÜËß£ÁöÑÊòØÂ§öÈáçÂåπÈÖç, Ê†ºÂºèÂ¶Ç‰∏ã: ‰∏≠Èó¥ÁöÑÈÉ®ÂàÜÂíåÂçï‰∏™pattern‰∏ÄÊ†∑, ‰∏çÂêåÁöÑÊòØÂ§ö‰∫Ü‰∏ÄÂØπ$() Âíå ,* , *Âè∑‰ª£Ë°®ÂâçÈù¢$(...)ÂÜÖÁöÑÂÜÖÂÆπ‰ºöÂá∫Áé∞0ÊàñÂ§öÊ¨°, ÂíåÊ≠£Âàô‰∏ÄÊ†∑. ËÄåÈÄóÂè∑,Âè™ÊòØ‰∏Ä‰∏™ÂàÜÈöîÁ¨¶, ÁîöËá≥‰∏çË¶ÅÊ±ÇÊòØÈÄóÂè∑. ÁºñËØë(Â±ïÂºÄ)ÂÆèÁöÑÊó∂ÂÄô, ÈáçÂ§çpatternÁöÑÂÜÖÂÆπÁî®Ê≥ï‰πüÂíå‰∏äÈù¢Âü∫Êú¨Á±ª‰ºº, Â§öÁöÑ‰πüÂè™ÊòØ‰∏Ä‰∏™$(...)*Á¨¶Âè∑, Áî®‰∏ãÈù¢ÁöÑÊØîËæÉÂ•ΩÁêÜËß£: ÂØπ‰∫éÊØè‰∏ÄÂØπÂá∫Áé∞ÂØπ$keyÂíå$value, ÈÉΩÂ∞ÜÁî®$(...)*ÂÜÖÁöÑhm.insert(...); ËØ≠Âè•ÊõøÊç¢. MacroË∞ÉËØï ÊúâÁöÑÊó∂ÂÄô‰∏çÁü•ÈÅìËá™Â∑±ÂÜôÁöÑmacroÊúÄÁªàË¢´Êâ©Â±ïÊàê‰ªÄ‰πàÊ†∑Â≠ê, ËøôÊó∂ÂÄôÊúâ‰∏§ÁßçÊñπÊ≥ïÊù•ÊâìÂç∞Âá∫rustcÊâ©Â±ïÂêéÁöÑ‰ª£Á†Å: Áõ¥Êé•Ë∞ÉÁî®rustcÁºñËØëÂô®(ÈúÄË¶ÅnightlyÁâàÊú¨): 1$ cargo +nightly rustc --profile=check -- -Zunstable-options --pretty=expanded Áî®Á¨¨‰∏âÊñπÂ∫ìcargo-expand , ÂÆÉÊúâ‰∏™‰ºòÁÇπÂ∞±ÊòØÊâìÂç∞Âá∫Êù•ÁöÑÊòØÊ†ºÂºèÂåñ‰∏îÂ∏¶ËØ≠Ê≥ïÈ´ò‰∫ÆÁöÑ‰ª£Á†Å, ÂèØËØªÊÄßÈùûÂ∏∏Â•Ω. 12345678910$ cargo expand# or expand a particular test target:$ cargo expand --test test_something# or expand bench target$ cargo expand --bench bench_name# or expand a specific module or type or function only:$ cargo expand path::to::module ÊúÄÂêé, ÂèëÁé∞‰∏ÄÁØáÂØπmacroËß£ÈáäÈùûÂ∏∏Â•ΩÁöÑÊñáÁ´†, ÂèØ‰ª•ÂèÇËÄÉ:A Beginner‚Äôs Guide to Rust Macros ‚ú®","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Pattern","slug":"Pattern","permalink":"https://unpluggedcoder.me/tags/Pattern/"},{"name":"Macros","slug":"Macros","permalink":"https://unpluggedcoder.me/tags/Macros/"}]},{"title":"Ê∑±Â∫¶Â≠¶‰π†ÂÖ•Èó®ÔºöÂü∫‰∫éPythonÁöÑÁêÜËÆ∫‰∏éÂÆûÁé∞","slug":"Ê∑±Â∫¶Â≠¶‰π†ÂÖ•Èó®ÔºöÂü∫‰∫éPythonÁöÑÁêÜËÆ∫‰∏éÂÆûÁé∞","date":"2020-02-01T02:06:20.000Z","updated":"2022-09-20T15:44:50.731Z","comments":true,"path":"2020/02/01/Ê∑±Â∫¶Â≠¶‰π†ÂÖ•Èó®ÔºöÂü∫‰∫éPythonÁöÑÁêÜËÆ∫‰∏éÂÆûÁé∞/","link":"","permalink":"https://unpluggedcoder.me/2020/02/01/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%85%A5%E9%97%A8%EF%BC%9A%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E7%90%86%E8%AE%BA%E4%B8%8E%E5%AE%9E%E7%8E%B0/","excerpt":"","text":"Êé®ËçêÂ∫¶: 4.5ÂàÜ ‰ΩúËÄÖ‰ªéÂü∫Á°ÄÁöÑ‰∏éÊàñÈùûÁü•ËØÜÂºÄÂßãÊôÆÂèäÁ•ûÁªèÁΩëÁªú, ËÄå‰∏î‰∏ªË¶Å‰∏ÄÁÇπÂú®‰∫éÂÖ®‰π¶ÈùûÂ∏∏ÂñÑ‰∫éÁî®Ë®Ä‰πãÊòìÊáÇÁöÑÁ±ªÊØîÊù•‰∏æ‰æãËØ¥Êòé. ‰∏∫ÂàùÂ≠¶ËÄÖ‰∫ÜËß£ËøôÈó®Â≠¶ÁßëËµ∑Âà∞‰∫ÜÂæàÂ•ΩÁöÑÂ∏ÆÂä©. ÂØπÊï∞Â≠¶ÁöÑË¶ÅÊ±ÇÊúÄÂ§öÂ∞±Âà∞ÂÅèÂØºÊï∞ÂíåÁ∫øÊÄß‰ª£Êï∞ÁöÑÁü©Èòµ‰πòÊ≥ï, ËÄåËÉåÂêéÊõ¥Â§öÁöÑÁÆóÊ≥ïÂíåÊï∞Â≠¶ÂéüÁêÜ‰ΩúËÄÖÂπ∂Ê≤°Êúâ‰∏Ä‰∏ÄÂ±ïÂºÄÁªÜËØ¥. ‰ΩÜÊòØÈÄöËøá‰∏äÈù¢‰∏ÄÁÇπ, Â§ßËá¥ÁöÑÈÉΩËÉΩ‰∫ÜËß£Âà∞Ê∑±Â∫¶Â≠¶‰π†‰ºòÂåñÁÆóÊ≥ïÂíåÂèÇÊï∞ËÉåÂêéÁöÑÊÑè‰πâ, ‰∏∫ÊÉ≥Ë¶ÅÊõ¥Âä†Ê∑±ÂÖ•Á†îÁ©∂ÁöÑ‰∫∫Èì∫Âπ≥‰∫ÜÈÅìË∑Ø. Â¶ÇÊûúÈúÄË¶ÅÊäïÂÖ•Âà∞Êú∫Âô®Â≠¶‰π†ÂÆûË∑µ‰∏≠ÁöÑËØù, ËøôÊú¨Áªù‰∏çÊòØÈÇ£ÁßçÁúãËøá‰∏ÄÈÅçÂ∞±Êùü‰πãÈ´òÈòÅÁöÑ‰π¶Á±ç.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"https://unpluggedcoder.me/tags/Deep-Learning/"}]},{"title":"Â∞èÁãóÈí±Èí±","slug":"Â∞èÁãóÈí±Èí±","date":"2020-02-01T01:46:20.000Z","updated":"2022-09-20T15:44:43.736Z","comments":true,"path":"2020/02/01/Â∞èÁãóÈí±Èí±/","link":"","permalink":"https://unpluggedcoder.me/2020/02/01/%E5%B0%8F%E7%8B%97%E9%92%B1%E9%92%B1/","excerpt":"","text":"„ÄäÂ∞èÁãóÈí±Èí±„ÄãÊé®ËçêÂ∫¶: 3.5ÂàÜ ËøôÊòØÁúãÂçöÂ§ö¬∑ËàçË¥πÂ∞îÁöÑÁ¨¨‰∫åÊú¨‰π¶, ËøôÊú¨‰π¶ÂèØ‰ª•ËØ¥ÊòØÊää„ÄäË¥¢Âä°Ëá™Áî±‰πãË∑Ø„ÄãÁöÑÁªèÈ™åÊÄªÁªìÊàê‰∫ÜÈùûÂ∏∏Â•ΩÁêÜËß£ÁöÑÂÑøÁ´•Ë¥¢ÂïÜÂüπÂÖªÊïÖ‰∫ã. „ÄäÂ∞èÁãóÈí±Èí±2„ÄãËøôÊú¨‰π¶Â∞±‰∏çÊé®Ëçê‰∫Ü, ÂâØÊ†áÈ¢òÊòØ‚ÄúÂèëÊéòÂíåÂüπÂÖªÂ≠©Â≠êÁöÑ‰ºòÁßÄÂìÅÊ†º‚Äù. ÊÑüËßâÂÄí‰∏çÂ¶ÇÁî®Ëøô‰∏™ÂÅö‰π¶Âêç. ÈùûÂ∏∏ÁâµÂº∫ÁöÑÊÉÖËäÇ, ‰∏ªÈ¢ò‰∏çÂÜçÊòØÂ∞èÁãó, ‰πü‰∏çÊòØÈí±, Êª°Êª°ÁöÑÈ∏°Ê±§, Âπ≤Â∞±ÂÆå‰∫Ü.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"ËÇ≤ÂÑø","slug":"ËÇ≤ÂÑø","permalink":"https://unpluggedcoder.me/tags/%E8%82%B2%E5%84%BF/"},{"name":"ÁêÜË¥¢","slug":"ÁêÜË¥¢","permalink":"https://unpluggedcoder.me/tags/%E7%90%86%E8%B4%A2/"}]},{"title":"ÂØπÂÜ≤Ôºö‰∏çÁ°ÆÂÆöÊó∂‰ª£Â¶Ç‰ΩïËÅ™ÊòéÂú∞ÂÜíÈô©","slug":"ÂØπÂÜ≤","date":"2020-01-28T13:17:20.000Z","updated":"2022-09-20T15:44:40.508Z","comments":true,"path":"2020/01/28/ÂØπÂÜ≤/","link":"","permalink":"https://unpluggedcoder.me/2020/01/28/%E5%AF%B9%E5%86%B2/","excerpt":"","text":"Êé®ËçêÂàÜÔºö3.5 Ëøô‰π¶ÂêçÊÄé‰πàËØ¥Âë¢ÔºåÂ≠óÈù¢ÁøªËØëËøáÊù•Â∫îËØ•ÊòØ„Ää‰∏Ä‰ΩçËµ∞ËøõÂ¶ìÈô¢ÁöÑÁªèÊµéÂ≠¶ÂÆ∂„ÄãüòÇ ‰ΩúËÄÖÂú®ÂâçÂÖ´Á´†ÈÉΩÊ≤°ÊúâË∞à‚ÄúÂØπÂÜ≤‚ÄùËøô‰∏™ËØçÔºå‰∏ÄÁõ¥Âú®ËÆ®ËÆ∫È£éÈô©Ëøô‰∏™Ê¶ÇÂøµ„ÄÇ‰Ωú‰∏∫‰∏Ä‰ΩçÁªèÊµéÂ≠¶ÂÆ∂ÔºåÂπ∂Ê≤°ÊúâÂ§ßË∞àÈáëËûçÈ¢ÜÂüüÁöÑÂØπÂÜ≤Êìç‰ΩúÔºåËÄåÊòØÂàó‰∏æ‰∫ÜÁîüÊ¥ª‰∏≠ÂæàÂ§öÈ´òÈ£éÈô©ËÅå‰∏öÁÆ°ÁêÜÈ£éÈô©ÁöÑÊñπÊ≥ïÔºåËøõËÄåÂºïÁî≥Âà∞ÈáëËûçÈ¢ÜÂüü„ÄÇÊØîÂ¶ÇÔºå‰π¶Âêç‰∏≠ÁöÑÂ¶ìÈô¢ÔºåËøòÊúâÁãó‰ªîÈòü„ÄÅÁîµÂΩ±Ë°å‰∏ö„ÄÅÁßçÈ©¨„ÄÅÈ≠îÊúØÁ≠â„ÄÇ ‰∏™‰∫∫ÊÑüËßâÂØπÂÜ≤Âπ∂‰∏çÊòØÊï¥Êú¨‰π¶ÁöÑ‰∏ªÈ¢ò„ÄÇÁõ∏ÊØî‰∫éÂØπÂÜ≤Êìç‰ΩúÊú¨Ë∫´ÔºåÊÑüËßâ‰ΩúËÄÖÊõ¥Â∏åÊúõËØªËÄÖÊ∏ÖÊ•öËá™Â∑±ÁöÑÁõÆÊ†á, ‰ª•ÂèäÂ¶Ç‰ΩïÂ§ÑÁêÜÈúÄË¶ÅÈù¢‰∏¥ÁöÑÈ£éÈô©„ÄÇÈ¶ñÂÖàÔºåË¶ÅÊ∏ÖÊ•öËá™Â∑±ÁöÑÁõÆÊ†áÔºå‰∏çË¶ÅÁõ≤ÁõÆÁöÑËøΩÊ±ÇÈ´òÈ£éÈô©ÔºåËøôÂíå„Ää‰ΩéÈ£éÈô©ÔºåÈ´òÂõûÊä•„Äã‰∏Ä‰π¶ÁöÑ‰ΩúËÄÖ‰∏ÄÊ†∑ÔºåÂØπÂ§ßÂ§öÊï∞‰∫∫Êù•ËØ¥ÔºåÈ´òÈ£éÈô©‰∏çÊòØ‰ªÄ‰πàÂ•Ω‰∫ãÔºåÊúâÂæàÂ§ö‰ΩéÈ£éÈô©ÁöÑÈÄâÊã©„ÄÇÂÖ∂Ê¨°ÔºåÈ£éÈô©ÊúâÁ≥ªÁªüÈ£éÈô©ÂíåÁâπÊÆäÈ£éÈô©„ÄÇÂâçËÄÖÊòØÊï¥‰∏™ÁªèÊµéÂèëÂ±ïÁöÑË∂ãÂäøÈ£éÈô©ÔºåÂêéËÄÖÂèØ‰ª•ÁêÜËß£‰∏∫‰∏™‰ΩìÁöÑÈ£éÈô©Âõ†Á¥†„ÄÇ‰∏çÂêåÈ£éÈô©Êúâ‰∏çÂêåÁöÑÁÆ°ÁêÜÁ≠ñÁï•„ÄÇÂÜçÊ¨°ÔºåÈù¢ÂØπÈ£éÈô©ÔºåÁêÜÊÄßÂæàÈáçË¶Å„ÄÇËµåÂæíÂøÉÊÄÅÊòØÂæàÂ§ßÁöÑÂøåËÆ≥„ÄÇ Ëøô‰∫õÊòØÊàëËÆ§‰∏∫‰ΩúËÄÖÊÄªÁªìÂá∫ÁöÑÈù¢ÂØπÈ£éÈô©ÁöÑÂÆèËßÇÂéüÂàôÔºåËÄå‰ΩúËÄÖÂú®‰π¶ÂêéÂçäÈÉ®ÊèêÂà∞ÁöÑÂØπÂÜ≤Âíå‰øùÈô©ÊòØÁÆ°ÁêÜÈ£éÈô©ÁöÑÊâãÊÆµ„ÄÇÁúãÂà∞‰πàÔºåÂØπÂÜ≤Âè™ÊòØÊâãÊÆµ‰πã‰∏ÄÔºåÁõ∏ÊØî‰øùÈô©Ëß£ÂÜ≥‰∏ãË∑åÈ£éÈô©ÁöÑÊâãÊÆµÔºåÂØπÂÜ≤Áº©Â∞è‰∫ÜÈ£éÈô©ÂΩ±ÂìçÁöÑÂêåÊó∂‰πüÂáèÂ∞ë‰∫ÜÊî∂ÁõäÁöÑ‰∏äÈôê(ÂàáÊñ≠‰∫ÜÈ£éÈô©‰∏ä‰∏ãÁ´Ø)„ÄÇÂ∫îËØ•ÂêàÁêÜÁöÑÂà©Áî®ÂØπÂÜ≤ÔºåÊääÂÆÉÂΩìÊàêÈôç‰ΩéÈ£éÈô©ÁöÑÂ∑•ÂÖ∑ÔºåËÄå‰∏çÊòØÂÜíÈô©ËøΩÊ±ÇÈ´òÂõûÊä•ÁöÑÊâãÊÆµ„ÄÇ ÊúÄÂêéÔºå‰ªª‰ΩïÈ£éÈô©ÁÆ°ÁêÜÁ≠ñÁï•ÈÉΩÊó†Ê≥ïÂ∫îÂØπÊâÄÊúâÊÉÖÂÜµÔºåÈù¢ÂØπ‰∏çÁ°ÆÂÆöÊÄß‰∏ç‰ªÖÈúÄË¶ÅÈù†ÁªèÈ™åÊÄªÁªì, ÂøÉÊÄÅÊõ¥ÈáçË¶Å, ËÆ©ÊàëÊÉ≥Ëµ∑:‚ÄúÂîØ‰∏Ä‰∏çÂèòÁöÑÂ∞±ÊòØÂèòÂåñ‚ÄùüòÇ, ÂÉµÂåñÁöÑÊÉØÊÄßÊÄùÁª¥‰ºöËÆ©Ëá™Â∑±Â§Ñ‰∫éË¢´Âä®ÁöÑÁä∂ÊÄÅ. ‰∏ªÂä®ÂéªËøéÊé•Êú™Áü•ÁöÑÊú™Áü•, Èù¢ÂØπÈ£éÈô©ÁöÑÂ•óË∑ØÂßãÁªà‰∏çÂèò: ÂÆö‰πâÁõÆÊ†á, ÊâæÂà∞ÂÆåÊàêÁõÆÊ†áÁöÑÊúÄ‰Ω≥ÊñπÂºè, ÂêåÊó∂ÊúÄÂ∞èÂåñ‰∏ãË∑åÈ£éÈô©.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"È£éÈô©","slug":"È£éÈô©","permalink":"https://unpluggedcoder.me/tags/%E9%A3%8E%E9%99%A9/"},{"name":"ÁªèÊµéÂ≠¶","slug":"ÁªèÊµéÂ≠¶","permalink":"https://unpluggedcoder.me/tags/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"}]},{"title":"Áà±„ÄÅÈáëÈí±ÂíåÂ≠©Â≠êÔºöËÇ≤ÂÑøÁªèÊµéÂ≠¶","slug":"Áà±„ÄÅÈáëÈí±ÂíåÂ≠©Â≠êÔºöËÇ≤ÂÑøÁªèÊµéÂ≠¶","date":"2020-01-20T15:59:20.000Z","updated":"2022-09-20T15:24:01.518Z","comments":true,"path":"2020/01/20/Áà±„ÄÅÈáëÈí±ÂíåÂ≠©Â≠êÔºöËÇ≤ÂÑøÁªèÊµéÂ≠¶/","link":"","permalink":"https://unpluggedcoder.me/2020/01/20/%E7%88%B1%E3%80%81%E9%87%91%E9%92%B1%E5%92%8C%E5%AD%A9%E5%AD%90%EF%BC%9A%E8%82%B2%E5%84%BF%E7%BB%8F%E6%B5%8E%E5%AD%A6/","excerpt":"","text":"Êé®ËçêÂ∫¶: 2.5 ÂΩìÊó∂Âú®Êé®‰∏äÁúãÂà∞ÁöÑËøôÊú¨‰π¶, ‰ªéÊ†áÈ¢ò‰∏äÁúãÂæàÊúâÂê∏ÂºïÂäõ, ‰∏ÄÁõ¥ÊÉ≥Ë¶ÅËØª, ÂêéÊù•‰∫öÈ©¨ÈÄäÊâìÊäò, Âè™Ë¶ÅRMB14.99, Áé∞Âú®ÈïøÊúüÊòØ13.99. ÊàñËÆ∏ÊúüÊúõÂ§™È´ò, ‰πüÊàñËÆ∏‰ª∑Ê†ºÂèçÂ∫îÂá∫‰∫Ü‰ª∑ÂÄº‚Ä¶ ÂÖ∂ÂÆûÂ∫îËØ•ÊääÂâØÊ†áÈ¢òÁøªËØëÂá∫Êù•: Â¶Ç‰ΩïÁî®ÁªèÊµéÂ≠¶Êù•Ëß£ÈáäÊàë‰ª¨ÁöÑËÇ≤ÂÑøÊñπÂºè. Ëøô‰∏™ËßíÂ∫¶ÈùûÂ∏∏ÊúâÊÑèÊÄù, ÊÄïËØªËÄÖ‰ª•‰∏∫ÊòØËÇ≤ÂÑø‰π¶, ‰ΩúËÄÖ‰∏äÊù•Â∞±ËØ¥: Ëøô‰∏çÊòØ‰∏ÄÊú¨Êïô‰Ω†Â¶Ç‰ΩïËÇ≤ÂÑøÁöÑ‰π¶. ÁöÑÁ°Æ, ‰ΩúËÄÖ‰æã‰∏æ‰∫ÜÂæàÂ§öÂÆûÈ™åÊï∞ÊçÆÊù•È™åËØÅ‰∏çÂêåÊïôÂÖªÊñπÂºèËÉåÂêéÁöÑÂä®Êú∫, ÊâÄ‰ª•, ‰∏ÄÈ°µÂ∞±ËÉΩËÆ≤ÊòéÁôΩÁöÑÈÅìÁêÜ, ÊÑ£ÊòØÊëÜ‰∫ãÂÆûËÆ≤ÈÅìÁêÜËØ¥‰∫ÜÂ•ΩÂá†È°µ. ÂõûÂà∞‰π¶ÁöÑÂÜÖÂÆπ‰∏ä, È¶ñÂÖàÊ†πÊçÆÂØπÂ≠©Â≠êÁöÑÂπ≤È¢ÑÁ®ãÂ∫¶‰∏çÂêå, ‰ΩúËÄÖ‰∏Ä‰∏äÊù•ÂÖàÂíåËØªËÄÖÊãâÈÄöÂõõ‰∏™ÊïôÂÖªÊñπÂºèÁöÑÂÖ±ËØÜ. ËøôÂõõÁßçÊïôÂÖªÊñπÂºèÂ§ßËá¥ÊòØ‰∏ãÈù¢ËøôÂá†‰∏™ÊÑèÊÄù: ÂøΩËßÜÂûã: Â®É, ‰Ω†ÊòØË∞Å?‰ªéÂì™ÈáåÊù•?Ë¶ÅÂà∞Âì™ÈáåÂéª? Êîæ‰ªªÂûã: Â®É, ‰Ω†Áà±ÂíãÊª¥ÂíãÊª¥. ‰∏ìÊñ≠Âûã: Â®É, Êâì‰Ω†ÊòØ‰∏∫‰Ω†Â•Ω. ÊùÉÂ®ÅÂûã: Â®É, Âí±‰ª¨ËÆ≤ÈÅìÁêÜ! ÂΩìÁÑ∂, ‰ªé‰∏äÂà∞‰∏ã, Â≠©Â≠êÁöÑÂπ≥ÂùáÊàêÁª©Ë°®Áé∞(Ê≥®ÊÑè, ÊòØÊàêÁª©)ÊòØÈÄêÂ±ÇÈÄíÂ¢û. Âú®Êüê‰∫õÂèëËææÂõΩÂÆ∂ÂøΩËßÜÂûãÁöÑÁà∂ÊØçÂèØËÉΩÂ∑≤ÁªèËß¶ÁäØÊ≥ïÂæã; ËÄåÂ§ßÂ§öÂåóÊ¨ßÂõΩÂÆ∂ÈááÂèñÊîæ‰ªªÂûã; ÊÑèÂ§ßÂà©ÂíåÊüê‰∫õÂÆóÊïôÂõΩÂÅèÂêë‰∏ìÊñ≠Âûã; ‰∏≠ÂõΩ„ÄÅÁæéÂõΩÁà∂ÊØçÂ§ßÂ§öÂΩí‰∏∫ÊùÉÂ®ÅÂûã. ‰ΩúËÄÖ‰ªéÁªèÊµéÂ≠¶ËßíÂ∫¶ÁöÑÂä®Êú∫Êù•ËØ¥ÊòéÁà∂ÊØçÈááÂèñËøô‰∫õ‰∏çÂêåÊïôÂÖªÊñπÂºèËÉåÂêéÁöÑÂä®Êú∫. ÁªìÂêà‰∫Ü‰∏çÂêåÊó∂‰ª£„ÄÅÁ§æ‰ºöÁéØÂ¢É„ÄÅÊïôËÇ≤ÊîøÁ≠ñ„ÄÅÊÄßÂà´„ÄÅÁîüËÇ≤ÊîøÁ≠ñ„ÄÅÂÆóÊïôÁ≠âÁ≠âÂêÑÊñπÈù¢Âõ†Á¥†ÂèçÂ§çËÆ∫ËØÅ. ÂõΩÂ§ñÁöÑ‰ΩúËÄÖÂ§ßÈÉΩÊØîËæÉ‰∏•Ë∞®, ËøôÊú¨‰π¶Âíå„ÄäË¥´Á©∑ÁöÑÊú¨Ë¥®„ÄãÂæàÂÉè, ÈÉΩÊòØÁî®‰∫ÜËÆ∏Â§ö‰∏çÂêåËßíÂ∫¶ÁöÑÈöèÊú∫ÂØπÁÖßÊï∞ÊçÆÊù•ËØ¥ÊòéÈóÆÈ¢ò. ‰∏çËøáËøôÊú¨‰π¶ËÉåÂêéÁöÑÈÅìÁêÜÊØî„ÄäË¥´Á©∑ÁöÑÊú¨Ë¥®„ÄãÊõ¥ÁÆÄÂçï‰∏Ä‰∫õ, ÁÆÄÂçïÂú∞ËØ¥: ÁªùÂ§ßÂ§öÊï∞Áà∂ÊØçÂØπÂ≠©Â≠êÁöÑÊïôÂÖªÊñπÂºèÂ∑ÆÂºÇÁöÑËÉåÂêéÂä®Êú∫ÊòØÂá∫‰∫éÂØπÂ≠©Â≠êÂ∞ÜÊù•ÁöÑÈ°æËôë. Âê¨‰∏äÂéªÂÉèÊòØÂ∫üËØù, ÈÇ£Êç¢‰∏™ÊñπÂºèËØ¥Â∞±ÊòØÊïôËÇ≤ÁöÑÊäïËµÑÂõûÊä•Áéá. Âú®Á§æ‰ºö‰∏çÂπ≥Á≠âÁ®ãÂ∫¶ËæÉ‰ΩéÁöÑÂåóÊ¨ßÂèëËææÂõΩÂÆ∂, Â§ßÈÉ®ÂàÜ‰∫∫Â∞ÜÊù•ÁöÑÂ∞±‰∏öÈÉΩÊØîËæÉÁ®≥ÂÆö, Â≠¶Ê†°‰πüÂü∫Êú¨‰∏çËÄÉÊ†∏, ËÄÅÂ∏àÁöÑÂú∞‰ΩçÂæàÈ´ò(‰ºòÁßÄÁöÑ‰∫∫ÊâçÊõ¥ÊÑøÊÑèÊäïÂÖ•Âà∞ÊïôËÇ≤‰∫ã‰∏ö‰∏≠), Âõ†Ê≠§Áà∂ÊØçÈÉΩÊõ¥Âä†ÈáçËßÜÂ≠©Â≠êÁöÑÂàõÈÄ†Âäõ„ÄÅÁã¨Á´ãÊÄßËÄåÈùûÊàêÁª©. ËÄåÂú®Â∑•‰∏öÊó∂‰ª£, ÂèëËææÂõΩÂÆ∂‰πüÊõæÁªèÁªèÂéÜËøá‰∏ìÊñ≠Âûã, ÈÇ£Êó∂ÂÄôÁ§æ‰ºöÈò∂Â±ÇÂàÜÊòé, ‰∏çÂä™ÂäõÂ∞±Ê≤°ÊúâÂá∫Ë∑Ø, Âõ†Ê≠§Áà∂ÊØçÂØπÂ≠©Â≠ê‰ΩìÁΩö, ÁîöËá≥ËÆ©Â≠©Â≠êÂèÇÂä†Â∑•‰Ωú. Áõ∏ÊØîÊïôËÇ≤ÁöÑÊäïËµÑÂõûÊä•Áéá, Áõ¥Êé•ÂΩìÁ´•Â∑•ÂØπÂÆ∂Â∫≠Êõ¥ÊúâÂà©. ËÄåÁé∞Âú®ÁöÑ‰∏≠ÂõΩÂíåÁæéÂõΩ, ÈÄöËøáÊïôËÇ≤ÂèØ‰ª•ÂæàÂ§ßÁ®ãÂ∫¶‰∏äÊîπÂèò‰∏Ä‰∏™‰∫∫ÁöÑÂëΩËøê, Âõ†Ê≠§ÂÖ¥Ëµ∑‰∫Ü‚ÄúÁõ¥ÂçáÊú∫‚ÄùÁà∂ÊØç. ÁõòÊóãÂú®Â≠©Â≠ê‰∏äÂ§¥, ÂêÑÁßçÊó©Êïô„ÄÅË°•‰π†Áè≠ÈÉΩÊòØ‰∏∫‰∫ÜÂ∞ÜÊù•ÁöÑÊüê‰∏™ËÄÉËØï. Â≠©Â≠êÁöÑÂàõÈÄ†ÂäõÂíåÁã¨Á´ãÊÄßË¢´Â§ßÂ§ßÈôç‰Ωé. ÂõΩÂ§ñÊòØÂê¶ÂÉè‰π¶ÈáåËØ¥ÁöÑÈÇ£Ê†∑Êàë‰πü‰∏çÁü•ÈÅì, ‰ΩÜÊòØÂõΩÂÜÖÁöÑÁ°ÆÂ¶ÇÊ≠§. ÊàëÁöÑÊÑüËßâÊòØÊú™Êù•Â≠©Â≠êÁöÑÊïôËÇ≤ÊñπÂºè‰ªçÁÑ∂‰ºöÂèëÁîüÂèòÂåñ, ÊùÉÂ®ÅÂûãÊïôÂÖª‰πü‰∏çÂÜçÈÄÇÁî®. Âõ†‰∏∫ÂæàÂ§öËÅå‰∏öÂ∞ÜË¢´Êú∫Âô®Âèñ‰ª£, Ââ©‰∏ãÁöÑËÅå‰∏öÂàôÊòØÊõ¥ÂÖ∑ÊúâÂàõÈÄ†ÊÄßÊàñËÄÖÂØπÊïôËÇ≤Ë¶ÅÊ±ÇÈó®ÊßõË∂äÈ´òÁöÑËÅå‰∏ö. ‰∫∫‰ªéÁîüÊù•Â∞±Ë¶Å‰∏çÂÅúÂú∞Â≠¶‰π†, ‰ΩÜÂ≠¶‰π†ÁöÑÁõÆÁöÑ‰∏çÊòØÂ≠¶‰π†Áü•ËØÜ, ËÄåÊòØË¶ÅÂ∞ΩÂø´Â≠¶‰π†ÊÄé‰πàÂÅöËá™Â∑±, ÊÄé‰πàÂú®Á§æ‰ºöÂÅö‰∏Ä‰∏™Ëá™Â∑±ÊÉ≥Êàê‰∏∫ÁöÑ‰∫∫.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"ÁªèÊµéÂ≠¶","slug":"ÁªèÊµéÂ≠¶","permalink":"https://unpluggedcoder.me/tags/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"},{"name":"ËÇ≤ÂÑø","slug":"ËÇ≤ÂÑø","permalink":"https://unpluggedcoder.me/tags/%E8%82%B2%E5%84%BF/"}]},{"title":"Understanding Compression","slug":"Understanding Compression","date":"2020-01-17T15:46:20.000Z","updated":"2022-09-15T15:51:05.350Z","comments":true,"path":"2020/01/17/Understanding Compression/","link":"","permalink":"https://unpluggedcoder.me/2020/01/17/Understanding%20Compression/","excerpt":"","text":"Êé®ËçêÂ∫¶: 4.5ÂàÜ Êé®ËçêÁêÜÁî± Áü≠Áü≠200È°µ, ÊääÂéãÁº©ÁÆóÊ≥ïÁî±ÁÆÄÂÖ•Ê∑±, ÂõæÊñáÂπ∂ËåÇ, ËÆ≤ÂæóÈùûÂ∏∏ÈÄö‰øóÁêÜËß£. Ë∑üÈöèÊï¥‰∏™ÂéãÁº©ÁÆóÊ≥ïÊºîËøõÁöÑÂéÜÂè≤, ÁªìÂêàÈÇ£‰∫õ‰ºüÂ§ßÂéãÁº©ÁÆóÊ≥ïËÉåÂêéÁöÑ‰∫∫ÂíåÊïÖ‰∫ã, ÂÜçÂä†‰∏ä‰ΩúËÄÖÁöÑÂπΩÈªòÊÑü, ÂèØ‰ª•ËØ¥Êï¥Êú¨‰π¶ËØªËµ∑Êù•ÂÖ®Á®ãÊó†Â∞øÁÇπ. ÂØπÂºÄÂèëËÄÖ(ÂÉèÊàëËøôÊ†∑Êï∞Â≠¶Ê∞¥Âπ≥Â∑ÆÁöÑÁ†ÅÂÜú)ÈùûÂ∏∏ÂèãÂ•Ω, ‰∏çÈúÄË¶ÅÂ§™Â§öÊï∞Â≠¶Áü•ËØÜ. Ê≤°ÊúâÁî®‰ªª‰Ωï‰∏ÄË°å‰ª£Á†Å, ‰ΩÜÊòØÁúãÂÆåËøôÊú¨‰π¶ÂÜçÂéªÁúãÈÇ£‰∫õÂéãÁº©ÁÆóÊ≥ï‰ª£Á†ÅÂ∞±Êúâ‰∏ÄÁßç‰∫ÜÁÑ∂‰∫éËÉ∏ÁöÑÊÑüËßâ, Â∞§ÂÖ∂ÊòØÂØπÊØèÁ±ªÁÆóÊ≥ïÁâπÊÄßÂíåÂéÜÂè≤ËÉåÊôØÊúâ‰∫ÜÂÆèËßÇ‰∏äÁöÑÊ∑±ÂàªÁêÜËß£. ‰ΩúËÄÖÁöÑÁõÆÁöÑÊòØËÆ©Áé∞‰ª£Á®ãÂ∫èÂëòÂØπÂêÑÁ±ªÂéãÁº©ÁÆóÊ≥ïÁöÑÁâπÊÄßÊúâ‰∏Ä‰∏™ÂÖ®Â±ÄÁöÑÁêÜËß£, Âπ∂‰∏îÂ∏åÊúõÁ®ãÂ∫èÂëòÂú®ÂºÄÂèëËøáÁ®ã‰∏≠ËÉΩÂ§üÂæàÂ•ΩÁöÑÁêÜËß£Ëá™Â∑±Â§ÑÁêÜÁöÑÊï∞ÊçÆÁâπÊÄß, ‰ªéËÄå‰ΩøÁî®ÊúÄÂêàÈÄÇÁöÑÂéãÁº©ÁÆóÊ≥ïÊù•ÊèêÈ´òÊÄßËÉΩ.","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"Algorithm","slug":"Algorithm","permalink":"https://unpluggedcoder.me/tags/Algorithm/"},{"name":"Compression","slug":"Compression","permalink":"https://unpluggedcoder.me/tags/Compression/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãConcurrency","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãConcurrency","date":"2019-12-24T15:52:20.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/12/24/RustÂÖ•Èó®Â§±Ë¥•‰πãConcurrency/","link":"","permalink":"https://unpluggedcoder.me/2019/12/24/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BConcurrency/","excerpt":"","text":"Thread mainÂáΩÊï∞ÁªìÊùü, ÂàôÁ®ãÂ∫èÈÄÄÂá∫, Âç≥‰Ωø‰ªçÁÑ∂ÊúâÁ∫øÁ®ãÂú®ËøêË°å; Áî®spawnËøîÂõûÁöÑhandle.join()Êù•Á≠âÂæÖÁ∫øÁ®ãÁªìÊùü, ‰ΩÜÊòØÊúâ‰∏ÄÁÇπ‰∏ç‰∏ÄÊ†∑, RustÁ∫øÁ®ãÂ¥©Ê∫É(panic)‰∏ç‰ºöÂΩ±ÂìçÂà∞ÂÖ∂ÂÆÉÁ∫øÁ®ã, Âõ†Ê≠§Á®ãÂ∫èÂèØ‰ª•ÂæàÂÆπÊòì‰ªéÊüê‰∏™ÈîôËØØÁä∂ÊÄÅ‰∏ãÊÅ¢Â§ç. ÂΩìÈúÄË¶ÅÂú®Á∫øÁ®ãÈó¥ÂÖ±‰∫´immutableÊï∞ÊçÆÊó∂, ‰ΩøÁî®std::sync::ArcÊô∫ËÉΩÊåáÈíà, Âπ∂Ë∞ÉÁî®ÂÆÉÁöÑclone()ÊñπÊ≥ï. Channel std::sync::mpsc::channel()ËøîÂõû‰∏Ä‰∏™SenderÂíåReceiver, ÂàÜÂà´Ë∞ÉÁî®send(item) Âíå recv()ÊñπÊ≥ïÂèëÈÄÅÂíåÊé•Êî∂Êï∞ÊçÆ, ÂêéËÄÖ‰ºöblock‰ΩèÁ∫øÁ®ã. Rust‰ºöÊ†πÊçÆ‰∏ä‰∏ãÊñáÊé®Êñ≠ChannelÊìç‰ΩúÁöÑÊï∞ÊçÆÁ±ªÂûã. RustÁöÑChannelÊØîUnixÁöÑpipeÊú∫Âà∂Êõ¥Âø´, Êï∞ÊçÆÁßªÂä®ËÄåÈùûÊã∑Ë¥ù. ‰æãÂ¶ÇÂèëÈÄÅ‰∏Ä‰∏™String, ÂÆûÈôÖÊàêÊú¨Âè™ÂèëÈÄÅ‰∫Ü‰∏â‰∏™Êú∫Âô®Â≠ó(machine word): length, capacity and pointer. sendÂíårecv‰∏§‰∏™Ë∞ÉÁî®Âè™‰ºöÂú®Âè¶‰∏Ä‰∏™Ë¢´droppedÁöÑÊó∂ÂÄôÂ§±Ë¥•. Êç¢Âè•ËØùËØ¥Â∞±ÊòØÂ¶ÇÊûúReceiverË¢´drop‰∫Ü, ÈÇ£send‰ºöÂ§±Ë¥•, Âèç‰πã‰∫¶ÁÑ∂. Âõ†Ê≠§, Â¶ÇÊûúÂ≠òÂú®‰∏Ä‰∏™Sender, ÈÇ£‰πà‰∏ãÈù¢Ëøô‰∏™Âæ™ÁéØrecvÂ∞±‰ºöÂú®SenderÈîÄÊØÅÊó∂Ê≠£Â∏∏ÁªàÊ≠¢ÁªìÊùü: 123while let Ok(text) = receiver.recv() &#123; do_something_with(text);&#125; ReceiverÊîØÊåÅËø≠‰ª£, Âõ†Ê≠§Êõ¥‰ºòÈõÖÁöÑÂÜôÊ≥ïÊòØ(‰∫åËÄÖÁ≠â‰ª∑): 123for text in receiver &#123; do_something_with(text);&#125; ChannelÊòØstd::sync::mpscÊ®°ÂùóÈáåÁöÑ, ÂÖ®Áß∞ÊòØmulti-producer, single-consumer. ËøôÁßçÊìç‰ΩúÂú®ÁºñÁ®ã‰∏≠ÂæàÂ∏∏ËßÅ. Âõ†Ê≠§Sender&lt;T&gt;ÂÆûÁé∞ÈáåClone trait. ÂèØ‰ª•Êã∑Ë¥ùÂá∫Â§ö‰∏™, ÁÑ∂ÂêéÂú®‰∏çÂêåÁöÑÁ∫øÁ®ãÈáåsend. ÂΩìÁÑ∂, Áî±‰∫éÊòØsingle-consumer, Receiver&lt;T&gt;‰∏çËÉΩclone. Rust ChannelÈ´òÊÄßËÉΩÁöÑÂéüÂõ†Âú®‰∫éÊúâÂá†Áßç‰∏çÂêåÁöÑÂÆûÁé∞: Â¶ÇÊûúÂè™ÂèëÈÄÅ‰∏Ä‰∏™object, ÈÇ£‰πàRustÂÜÖÈÉ®Êúâ‰∏Ä‰∏™ÁâπÊÆäÁöÑ‚Äúone-shot‚ÄùÈòüÂàó‰ΩøÂæóÂèëÈÄÅ‰∏Ä‰∏™ÁöÑÊàêÊú¨ÊúÄÂ∞èÂåñ. ‰ΩÜÊòØÂΩì‰Ω†ÂèëÈÄÅÁ¨¨‰∫å‰∏™objectÁöÑÊó∂ÂÄô, Rust‰ºöÂàáÊç¢Âà∞Âè¶‰∏ÄÁßçÈòüÂàóÂÆûÁé∞. Ëøô‰∏™ÈòüÂàó‰∏ìÈó®‰∏∫ÂÆûÁé∞Â§ßÈáèÊï∞ÊçÆ‰º†ËæìÂÅö‰∫Ü‰ºòÂåñ, Â∞ΩÂèØËÉΩÈôç‰Ωé‰º†ËæìÂ§ßÂºÄÈîÄ. ‰ΩÜÊòØÂ¶ÇÊûú‰Ω†Clone‰∫ÜSender, ÈÇ£‰πàRustÂèà‰ºö‰ΩøÁî®Âè¶‰∏ÄÁßçÁ∫øÁ®ãÂÆâÂÖ®ÁöÑÈòüÂàóÁâàÊú¨. Áõ∏ÊØî‰∫éÂâç‰∏§ÁßçÂÆûÁé∞, Ëøô‰∏™ÁöÑÊÄßËÉΩËá™ÁÑ∂ÊòØÊúÄÊÖ¢ÁöÑ, ‰ΩÜÊòØÂç≥‰æøÊúÄÊÖ¢, ÂÆÉÁöÑoverhead‰πüÂæà‰Ωé.ÂÆÉÁöÑÈòüÂàóÈááÁî®‰∫Ü‰∏Ä‰∏™Êó†ÈîÅÁöÑÈòüÂàó. Âõ†Ê≠§, ÂèëÈÄÅÂíåÊé•Êî∂Êó∂Èô§‰∫Ümove‰πãÂ§ñ, ‰ªÖÊúâ‰∏Ä‰∫õÂ†Ü‰∏äÂÜÖÂ≠òÂàÜÈÖçÁöÑÂéüÂ≠êÊìç‰Ωú. ËÄå‰∏îÂè™ÊúâÂú®ReceiverÈúÄË¶ÅsleepÊó∂Êâç‰ºöÁî®Âà∞Á≥ªÁªüË∞ÉÁî®, Âõ†Ê≠§Âü∫Êú¨‰∏äÂØπÂêûÂêêÈáèÊ≤°Êúâ‰ªª‰ΩïËÆæÈôê. Áî±‰∫éRust ChannelÁöÑÈ´òÊÄßËÉΩ, ÈÄöÂ∏∏‰ºöÂºïËµ∑ÈóÆÈ¢òÁöÑÂ∞±ÊòØÂèëÈÄÅÊï∞ÊçÆÁöÑÈÄüÂ∫¶Â§ß‰∫éReceiverÂ§ÑÁêÜÁöÑÈÄüÂ∫¶. ÂèØ‰ª•‰ΩøÁî®sync_channel, ÂΩìÂèëÈÄÅÁöÑÈòüÂàóËææÂà∞ÊåáÂÆöÊï∞ÈáèÂêé, sendÊìç‰Ωú‰ºöË¢´ÈòªÂ°û. 123use std::sync::mpsc::sync_channel;let (sender, receiver) = sync_channel(1000); Thread Safety: Send and Sync‰∏äÈù¢Ë∞àÂà∞ÁöÑÂú®Á∫øÁ®ãÈó¥‰º†ÈÄíÂíåÂÖ±‰∫´Êï∞ÊçÆÁöÑËÉΩÂäõÊù•Ëá™‰∫é‰∏§‰∏™trait: std::marker::Send Âíå std::marker::Sync ÂÆûÁé∞‰∫ÜSendÁöÑÁ±ªÂûãÂèØ‰ª•ÂÆâÂÖ®Âú∞moveÁªôÂÖ∂ÂÆÉÁ∫øÁ®ã. ÂÆûÁé∞‰∫ÜSyncÁöÑÁ±ªÂûãÂèØ‰ª•Âú®Á∫øÁ®ãÈó¥ËøõË°ånon-mut referenceÂÖ±‰∫´, ÂêåÊó∂Ë¶ÅÊ±ÇËØ•Á±ªÂûãÁöÑÂºïÁî®Á±ªÂûã&amp;TÂÆûÁé∞Send trait. Â¶Ç‰∏ãÂõæ: ÂèØ‰ª•ÁúãÂà∞Êúâ‰∏ÄÁßçÁ±ªÂûãÊòØ‰∏çËÉΩSendÁöÑ, Rc&lt;String&gt;, ÂÅö‰∏∫‰∏Ä‰∏™Â∏¶ÂºïÁî®ËÆ°Êï∞ÁöÑÊô∫ËÉΩÊåáÈíà, ÂΩì‰∏§‰∏™Á∫øÁ®ãÈÉΩÊã•ÊúâÂÆÉÊó∂, ÂêåÊó∂ÂØπÂºïÁî®ËÆ°Êï∞Êìç‰ΩúÂ∞±‰ºöÂºïËµ∑data race. Mutex&lt;T&gt; Â§ßÈÉ®ÂàÜÂèØ‰ª•ÁúãÊñáÊ°£, ÂíåÂÖ∂ÂÆÉËØ≠Ë®ÄÁöÑ‰∫íÊñ•ÈîÅÁ±ª‰ºº. Êúâ‰∏Ä‰∏™ÁªÜËäÇÂÄºÂæóÊ≥®ÊÑè: 1234567891011121314151617181920212223/// All threads have shared access to this big context struct.struct FernEmpireApp &#123; ... waiting_list: Mutex&lt;WaitingList&gt;, ...&#125;impl FernEmpireApp &#123; /// Add a player to the waiting list for the next game. /// Start a new game immediately if enough players are waiting. fn join_waiting_list(&amp;self, player: PlayerId) &#123; // Lock the mutex and gain access to the data inside. // The scope of `guard` is a critical section. let mut guard = self.waiting_list.lock().unwrap(); // Now do the game logic. guard.push(player); if guard.len() == GAME_SIZE &#123; let players = guard.split_off(0); self.start_game(players); &#125; &#125;&#125; Ëøô‰∏™ÂáΩÊï∞ÂØπwaiting_listËøõË°å‰∫Ü‰øÆÊîπ, ËÄåÂáΩÊï∞Á≠æÂêçÊòØimmutable ÁöÑ &amp;self. ÂÖ∂ÂÆûËøôÈáåÈúÄË¶ÅÈáçÊñ∞ÁêÜËß£Rust‰∏≠ÁöÑmutÂè¶‰∏ÄÂ±ÇÂê´‰πâ. Âú®Rust‰∏≠mutÊÑèÂë≥ÁùÄÊéí‰ªñÊÄßËÆøÈóÆ(exclusive access); Non-mutÊÑèÂë≥ÁùÄÂÖ±‰∫´ËÆøÈóÆ(shared access); ËøôÈáåÁöÑMutex.lock()ÂèØ‰ª•‰øùËØÅ‰∏ç‰ºöÊúâÁ´û‰∫â, Âõ†Ê≠§ÂÖÅËÆ∏Âú®Âç≥‰ΩøMutexÊãøÂà∞ÁöÑÊòØshared(non-mut)ÊÉÖÂÜµ‰∏ãÂÅöexclusive(mut)Êìç‰Ωú. Âè¶Â§ñ‰∏ÄÁÇπ, RustÁöÑMutexÊòØ‰∏çÂèØÈáçÂÖ•ÁöÑ, Âêå‰∏Ä‰∏™Á∫øÁ®ãËøûÁª≠‰∏§Ê¨°Ë∞ÉÁî®lock‰ºöÂºïËµ∑Ê≠ªÈîÅ. Poisoned Mutex(ÂêçÂ≠óÊúâ‰∫õÂ§∏Âº†, ‰∏≠ÊØíÈîÅ), ÊòØÂú®ÊåÅÊúâÈîÅÁöÑÁ∫øÁ®ãÂ¥©Ê∫ÉÂêé, Rust‰ºöÂ∞ÜËøô‰∏™ÈîÅÊ†áËÆ∞‰∏∫‰∏≠ÊØíÊ±°ÊüìÁä∂ÊÄÅ. ÂêéÁª≠ÂÖ∂ÂÆÉÁ∫øÁ®ãÂØπÂÆÉÁöÑlockËØ∑Ê±ÇÈÉΩ‰ºöËøîÂõû‰∏Ä‰∏™PoisonError. Âõ†Ê≠§Áî®lock().unwrap()‰ºöÊääpanic‰º†Êí≠Âà∞Âè¶‰∏Ä‰∏™Á∫øÁ®ã. Condvar Condvar::notify_all() Âíå Condvar::wait() ‰∏§‰∏™Êìç‰Ωú; ‰∏çÂêåÁöÑÊòØwaitÊìç‰ΩúÊúâ‰∫õ‰∏çÂØªÂ∏∏ 123while !guard.has_data() &#123; guard = self.has_data_condvar.wait(guard).unwrap();&#125; wait(guard), Êé•Êî∂‰∏Ä‰∏™MutexGuardÁöÑÊâÄÊúâÊùÉ, Âπ∂ËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑMutexGuard. Â¶ÇÊûúÁî®ËøápthreadÊé•Âè£ÁöÑËØùÂ∞±‰∏ç‰ºöÂØπËøô‰∏™ÊÑüÂà∞ÈôåÁîü. Á±ª‰ººpthread_cond_waitÂáΩÊï∞, Âú®waitÂâçÈúÄË¶ÅÂÖàÈáäÊîæËøô‰∏™mutex, ÁÑ∂ÂêéÂú®ËøîÂõûÂâçÈáçÊñ∞Ëé∑Âèñ, ÂèØ‰ª•ÁêÜËß£‰∏∫MutexÊéàÊùÉÁªôwaitÊìç‰ΩúÂÆÉ. Atomics ‰∏çÂêå‰∫éMutex&lt;T&gt;, AtomicsÊã•ÊúâÊúÄÂ∞èÂåñÂºÄÈîÄ, ÊÄßËÉΩÊàêÊú¨ÊûÅ‰Ωé, ÈÄöÂ∏∏Â∞±ÊòØ‰∏ÄÊù°loadÊàñstoreÊåá‰ª§. Ê≤°Êúâ‰ªª‰ΩïÁ≥ªÁªüË∞ÉÁî®. All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote in the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Concurrency","slug":"Concurrency","permalink":"https://unpluggedcoder.me/tags/Concurrency/"},{"name":"Mutex","slug":"Mutex","permalink":"https://unpluggedcoder.me/tags/Mutex/"},{"name":"Channel","slug":"Channel","permalink":"https://unpluggedcoder.me/tags/Channel/"},{"name":"Sync","slug":"Sync","permalink":"https://unpluggedcoder.me/tags/Sync/"},{"name":"Send","slug":"Send","permalink":"https://unpluggedcoder.me/tags/Send/"},{"name":"Atmoic","slug":"Atmoic","permalink":"https://unpluggedcoder.me/tags/Atmoic/"},{"name":"Condvar","slug":"Condvar","permalink":"https://unpluggedcoder.me/tags/Condvar/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãRead&Write","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãRead&Write","date":"2019-12-10T17:00:20.000Z","updated":"2022-09-15T15:51:05.349Z","comments":true,"path":"2019/12/11/RustÂÖ•Èó®Â§±Ë¥•‰πãRead&Write/","link":"","permalink":"https://unpluggedcoder.me/2019/12/11/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BRead&Write/","excerpt":"","text":"Rust std::ioÁöÑÊ†∏ÂøÉÊòØReadÂíåWrite‰∏§‰∏™trait. Readers std::io::ReadÁöÑÊâÄÊúâÊñπÊ≥ïÈÉΩÊòØ&amp;mut self, ‰πüÂ∞±ÊòØÂøÖÈ°ªÊã•ÊúâÂØπË±°ÁöÑmut reference. readÊñπÊ≥ï, ÂáΩÊï∞ÂéüÂûã: 1fn read(&amp;mut self, buf: &amp;mut [u8]) -&gt; Result&lt;usize&gt; ‰ªéÂØπË±°ÈáåËØªÂèñÊúÄÈïø‰∏çË∂ÖËøábuf.len()ÈïøÂ∫¶ÁöÑÂ≠óËäÇÊï∞ÊçÆ. Â¶ÇÊûúËøîÂõû0, Êúâ‰∏§ÁßçÂèØËÉΩ: ‰∏ÄÊòØÂèØËÉΩÂà∞Ëææ‰∫ÜEOF(End Of File), Ëøô‰∏™ÂØπË±°‰∏ç‰ºöÂÜçÊúâ‰ªª‰ΩïÊï∞ÊçÆÂèØËØª; ‰∫åÊòØbufÈïøÂ∫¶‰∏∫0. Ëøô‰∏™ÂáΩÊï∞‰∏çËÉΩ‰æùËµñbuf‰∏≠‰ªª‰ΩïÂéüÊúâÁöÑÊï∞ÊçÆ, ‰ΩÜ‰πü‰∏ç‰øùËØÅÂáΩÊï∞Ë∞ÉÁî®ÂêébufÁöÑÂÜÖÂÆπ‰ºöÊòØ‰ªÄ‰πà. ÂÆûÁé∞Êó∂Âª∫ËÆÆÊ≠£Â∏∏ÁÇπ, ÂÜôÂÖ•bufÂ∞±Â•Ω. bufÈúÄË¶ÅÊèêÂâçÂàùÂßãÂåñ, Âê¶Âàôundefined behavior. ËøòÊúâÂÖ∂ÂÆÉÁöÑ‰∏Ä‰∫õreadÂáΩÊï∞: read_to_end: ‰∏ÄÁõ¥ËØªÂà∞EOF‰∏∫Ê≠¢, ÊúÄÂ•Ω‰∏çË¶ÅË∞ÉÁî®‰∏ç‰ø°‰ªªÁöÑReaderÁöÑËøô‰∏™ÊñπÊ≥ï, ÊØîÂ¶ÇÁΩëÁªúÊï∞ÊçÆ. read_to_string: ËØªÂà∞&amp;mut stringÂèÇÊï∞‰∏≠, ÂâçÊèêÊù°‰ª∂Ë¶ÅÊòØÊúâÊïàÁöÑUTF-8Â≠óÁ¨¶, Âê¶Âàô‰ºöÊä•Èîô. read_exact: ËØªÊåáÂÆöÈïøÂ∫¶, Â¶ÇÊûúÊï∞ÊçÆÊèêÂâçÁªìÂ∞æ, ÈÇ£‰πà‰ºöÊä•Èîô. BufReadÊòØÂ∏¶ÁºìÂÜ≤Âå∫ÁöÑReader, Á±ª‰ººfread(fread‰∏ÄÊ¨°‰ºöÈ¢ÑËØª‰∏Ä‰∏™blocksizeÂ§ßÂ∞èÁöÑÊï∞ÊçÆÂùó). BufRead‰πüÊòØÁ±ª‰ºº, ÂÆÉÊèê‰æõ‰∫Ü‰∏Ä‰∏™read_lineÂáΩÊï∞, ËØªÂèñ‰∏ÄË°å, ËÄåÂÆûÈôÖÂÜÖÈÉ®Ë∞ÉÁî®‰∫Üread, ÂèØËÉΩÈ¢ÑËØª‰∫Ü8kÁöÑÂ§ßÂ∞è, Ë∂≥Â§üÊª°Ë∂≥ÂêéÈù¢Âá†ÁôæÊ¨°ÁöÑread_lineË∞ÉÁî®ËØ∑Ê±Ç. ‰ªéstdinËØªÂèñ. Âú®C‰∏≠, Â¶ÇÊûúÂ§ö‰∏™Á∫øÁ®ãÂêåÊó∂‰ªéstdin‰∏≠ËØªÊï∞ÊçÆ‰ºöÈÄ†ÊàêÊú™ÂÆö‰πâÁöÑË°å‰∏∫. Ê†áÂáÜÁöÑÂÅöÊ≥ïÊòØÂä†ÈîÅ. Rust‰πüÊòØ‰∏ÄÊ†∑, ÂîØ‰∏ÄÁöÑÂå∫Âà´ÊòØÂä†ÈîÅËøô‰∏™Âä®‰ΩúÊòØRust APIËá™Â∏¶Êèê‰æõÁöÑ. 123456use std::io;let stdin = io::stdin();for line in stdin.lock().lines() &#123; println!(&quot;&#123;&#125;&quot;, line);&#125; ‰ªéÊñá‰ª∂ËØªÂèñ. File::openÈªòËÆ§ËøîÂõûÁöÑFileÂØπË±°Âè™ÂÆûÁé∞‰∫ÜRead trait, ‰∏çÂ∏¶BufRead trait. Âõ†Ê≠§ÈúÄË¶ÅÊâãÂä®ÂàõÂª∫‰∏Ä‰∏™BufReader struct. 1234567use std::io::BufReader;use std::fs::File;let f = File::open(&quot;log.txt&quot;)?;let reader = BufReader::new(f);// Or with_capacity// let reader = BufReader::with_capacity(10, f); Writers ÂíåReadÁ±ª‰ºº, ÂÆûÁé∞Write trait, Êúâ‰∏â‰∏™‰∏ªË¶ÅÁöÑÊñπÊ≥ï: write, write_all, flush. ÂêåÊ†∑‰πüÊúâBufWriter, Â¶ÇÊûúBufWriterÂØπË±°Ë¢´drop, ÈÇ£‰πàÁºìÂÜ≤Âå∫ÂÜÖÊâÄÊúâÁöÑÊï∞ÊçÆ‰ºöË¢´ÂÜôÂÖ•Â∫ïÂ±ÇÁöÑwriter‰∏≠. Â¶ÇÊûúËøôÊó∂ÂÄôÂÜôÂÖ•ÊúâÈîôËØØÁöÑËØù‰ºöË¢´ÂøΩÁï•.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Read","slug":"Read","permalink":"https://unpluggedcoder.me/tags/Read/"},{"name":"BufRead","slug":"BufRead","permalink":"https://unpluggedcoder.me/tags/BufRead/"},{"name":"Write","slug":"Write","permalink":"https://unpluggedcoder.me/tags/Write/"},{"name":"BufWrite","slug":"BufWrite","permalink":"https://unpluggedcoder.me/tags/BufWrite/"}]},{"title":"2018-2019","slug":"2018-2019","date":"2019-11-20T17:29:03.000Z","updated":"2022-09-15T15:51:05.341Z","comments":true,"path":"2019/11/21/2018-2019/","link":"","permalink":"https://unpluggedcoder.me/2019/11/21/2018-2019/","excerpt":"2018Âπ¥11ÊúàÂà∞2019Âπ¥11Êúà, ÂàöÂ•Ω‰∏ÄÂπ¥‰∫Ü. Ëøô‰∏ÄÂπ¥ÂèòÂåñÂæàÂ§ß, ÂêÑÁßçÂèòÂåñ. ‰ª•Ëá≥‰∫éÊÉ≥ÂÜô‰∏Ä‰∫õËá™Â∑±ÁöÑÊÄùËÄÉ. 15Âπ¥Âà∞18Âπ¥ËøôÂõõÂπ¥ÁöÑÊñáÁ´†Êï∞ÈáèÂæàÂ∞ë, ‰∏îÂëàÈÄêÂπ¥ÈÄíÂáèË∂ãÂäø. ‰ΩÜËøôÂõõÂπ¥ÈáåÂèëÁîü‰∫ÜÂæàÂ§ö. ÂêéÈù¢ÂÅö‰∫Ü‰∏ÄÊÆµÊó∂Èó¥PythonÁöÑÂ∑•‰Ωú, Â≠¶‰∫ÜÂæàÂ§öPythonÁöÑfancy stuffs. ÂΩìÊó∂ÁöÑÊÑüËßâÂèØ‰ª•Áî®‰∏ãÈù¢ÁöÑÊº´ÁîªÊèèËø∞:","text":"2018Âπ¥11ÊúàÂà∞2019Âπ¥11Êúà, ÂàöÂ•Ω‰∏ÄÂπ¥‰∫Ü. Ëøô‰∏ÄÂπ¥ÂèòÂåñÂæàÂ§ß, ÂêÑÁßçÂèòÂåñ. ‰ª•Ëá≥‰∫éÊÉ≥ÂÜô‰∏Ä‰∫õËá™Â∑±ÁöÑÊÄùËÄÉ. 15Âπ¥Âà∞18Âπ¥ËøôÂõõÂπ¥ÁöÑÊñáÁ´†Êï∞ÈáèÂæàÂ∞ë, ‰∏îÂëàÈÄêÂπ¥ÈÄíÂáèË∂ãÂäø. ‰ΩÜËøôÂõõÂπ¥ÈáåÂèëÁîü‰∫ÜÂæàÂ§ö. ÂêéÈù¢ÂÅö‰∫Ü‰∏ÄÊÆµÊó∂Èó¥PythonÁöÑÂ∑•‰Ωú, Â≠¶‰∫ÜÂæàÂ§öPythonÁöÑfancy stuffs. ÂΩìÊó∂ÁöÑÊÑüËßâÂèØ‰ª•Áî®‰∏ãÈù¢ÁöÑÊº´ÁîªÊèèËø∞: Ê≤°Èîô, Â∞±ÊòØÈ£ûËµ∑Êù•ÁöÑÊÑüËßâ. ÂÅö‰∏∫‰∏Ä‰∏™Â§öÂπ¥ÁöÑC&#x2F;C++ÂºÄÂèëËÄÖ, ÂÆåÂÖ®Ë¢´PythonËß£Êîæ‰∫Ü‰ººÁöÑ. ÁúãÂÆå‰∫ÜÂá†Êú¨Python‰π¶ÂíåÈ≤∂È±º‰π¶„ÄäLearning Spark: Lightning-Fast Big Data Analysis„ÄãÂêé, ÂÅöÂ§ßÊï∞ÊçÆÂ§ÑÁêÜ„ÄÅÂèØËßÜÂåñ„ÄÅWebÁ≠âÁ≠âÂêÑÁßçÂú∫ÊôØÂº†ÊâãÂ∞±Êù•, ÊÑüËßâPythonË¶ÅÁÅ´. ÊåâÁé∞Âú®ÂõΩÂÜÖÁöÑPythonÁä∂ÂÜµ, ÁÆóÊòØÁåú‰∏≠‰∫Ü‰∏ÄÂçä. Â§ßÂÆ∂ÈÉΩËØ¥ËøôÂá†Âπ¥PythonÁÅ´‰∏ªË¶ÅÊòØÂõ†‰∏∫Êú∫Âô®Â≠¶‰π†Â∏¶Ëµ∑‰∫ÜËäÇÂ•è, ÊàëËßâÂæó‰º∞ËÆ°ËøòÊòØË¶ÅÂΩíÂäü‰∫é‚ÄúÊàëÈù†ËøôÈó®Â§ßÊï∞ÊçÆÊ∂®Ëñ™ËØæÂπ¥ÂÖ•Áôæ‰∏á‚ÄùÁöÑËê•ÈîÄÊâãÊÆµ, ÊúâÁÇπÊâØËøú‰∫Ü. ËøôÂõõÂπ¥ÈáåËøòÂ≠¶‰∫ÜAngular„ÄÅTypeScript„ÄÅJavaScript, ËøôÈáåÁöÑÂ≠¶‰∏çÊòØÁúãÁúãÊïôÁ®ã, ËÄåÊòØÊØèÁßçËØ≠Ë®ÄÈÉΩÁúã‰∫Ü‰∏ÄÊú¨‰π¶. ‰ΩÜÊòØÂèàÊÑüËßâ‰ªÄ‰πàÈÉΩÊ≤°Â≠¶Âà∞. ‰∏çÊòØÂâçÁ´ØÁöÑÊñô. ‰∏ç‰ªÖÂ¶ÇÊ≠§, ÊÄªÊÑüËßâÂ∞ë‰∫ÜÁÇπ‰ªÄ‰πà, Âè™ÊÑüËßâÂà∞‰∏Ä‰∏™Â≠ó: ÊùÇ. ‰∏ÄÂπ¥ÂâçÁöÑËøôÊó∂ÂÄôÊÉ≥ÊòéÁôΩ‰∫Ü: Â∞ë‰∫ÜÊ≤âÊ∑Ä. ‰∏ÄÂπ¥ÂâçÂºÄÂßãËøõÂÖ•995ÁöÑÁîüÊ¥ª. Âíå‰πãÂâçÁöÑËäÇÂ•èÂÆåÂÖ®ÊòØ‰ªéÂ§©‰∏äÂà∞Âú∞‰∏ã, Êï¥‰∏™‰ΩéËêΩÁöÑÁä∂ÊÄÅÊåÅÁª≠‰∫Ü‰∏Ä‰∏™Â§öÊúàÂêß. Áî±‰∫éËá™Â∑±‰πãÂâçÊúâÁöÑÂÅ•Ë∫´‰π†ÊÉØ, ÊâÄ‰ª•ËßâÂæóÂ∞±ÁÆóÂÜçÊ≤°Êó∂Èó¥, ‰πü‰∏çËÉΩÊîæÂºÉÂÅ•Ë∫´. ‰∏çËÉΩËÆ©Ëá™Â∑±ÁîüÊ¥ª‰∏≠‰∏∫Êï∞‰∏çÂ§öÁöÑÂ§öÂ∑¥ËÉ∫Ê∂àÂ§±. Ê∏êÊ∏êÂú∞ÂºÄÂßãÊâæÂà∞Ëá™Â∑±ÁöÑËäÇÂ•è, ÂºÄÂßãÁÆ°ÁêÜËá™Â∑±ÁöÑÊó∂Èó¥, ÂºÄÂßãÁúã‰π¶. ü§≠Êàê‰∏∫Êõ¥Â•ΩÁöÑËá™Â∑±‚Ä¶‚Ä¶ ËØ¥Êù•‰πüÊúâÁÇπ‰∏çÂèØÊÄùËÆÆ, ‰∏ÄÂπ¥Áúã‰∫Ü20Âá†Êú¨‰π¶, ÊØîÂõõÂπ¥ÂâçÁöÑÁä∂ÊÄÅËøòÂ§ö. Âè™‰∏çËøáÂõõÂπ¥ÂâçÁúãÁöÑÂü∫Êú¨ÂÖ®ÊòØÊäÄÊúØÁ±ª‰π¶Á±ç. ËÄåÁé∞Âú®ÂÆåÂÖ®‰∏ç‰∏ÄÊ†∑. Â¶Ç‰Ωï‰øùÊåÅÁã¨Á´ãÊÄùËÄÉ? Â¶Ç‰ΩïÂùöÊåÅÂ≠¶‰π†? ÊòØÂê¶Ê∏ÖÊ•öËá™Â∑±ÊÉ≥Ë¶Å‰ªÄ‰πà? ÂæàÂèØÊÉúËøô‰∫õÈóÆÈ¢òÂú®ÊàëËøô‰πàÂ§öÂπ¥ÁöÑÂèóÊïôËÇ≤ÁîüÊ∂Ø‰∏≠Ê≤°ÊúâÊÇüÂá∫Êù•. ‰∏äÈù¢ÊòØËøô‰∏ÄÂπ¥ÁúãÁöÑ‰π¶Âçï. ‰∏ªË¶ÅÂàÜ‰∏∫Âá†Á±ª: ÈáëËûçÁ±ª‰π¶Á±ç: ÊàñËÆ∏ÂØπËøôÁ±ª‰π¶Á±çÁöÑÂ•ΩÂ•áÂèØ‰ª•‰ªé‰π¶ÂçïÁöÑÊ†áÈ¢òÈáåÊâæÂà∞Á≠îÊ°à. ÊàëÂØπËøô‰∏™ÊéßÂà∂‰∫ÜÁ§æ‰ºöÂêÑ‰∏™ÊñπÈù¢ÁöÑ‰∏ì‰∏öÂá†‰πé‰∏ÄÊó†ÊâÄÁü•. ËØ¥Êù•‰πüÂ∑ß, ÊàëÊâÄÂ§ÑÁöÑÂêåÊ†∑‰πüÊòØÂÖÖÊñ•Âú®Áé∞‰ª£Á§æ‰ºöÂêÑ‰∏™ËßíËêΩÈáåÁöÑ‰∏Ä‰∏™‰∏ì‰∏ö: IT‰ø°ÊÅØË°å‰∏ö. Âõ†Ê≠§ÊàëËßâÂæóÊúâÂøÖË¶ÅÂ•ΩÂ•Ω‰∫ÜËß£‰∏Ä‰∏ãËøô‰∏™‚ÄúÂêåÁ±ª‚Äù, ÊØïÁ´üÂÆÉÁöÑÂéÜÂè≤ÊØî‰∫åËøõÂà∂bitÁöÑÂéÜÂè≤Ë¶Å‰πÖÂæóÂ§ö. Êúâ‰∏ÄÊ¨°ÈÄõ‰π¶Âüé, ÁúãÂà∞Êé®Ëçê‰π¶Êû∂‰∏ä„ÄäÊàòËÉú‰∏ÄÂàáÂ∏ÇÂú∫ÁöÑ‰∫∫„ÄãÂíå„ÄäÂéüÂàô„Äã‰∏§Êú¨ÊîæÂú®‰∏ÄËµ∑, ÊâçÂèëÁé∞, ÊàëÊßΩ, Ëøô‰∏§Êú¨‰π¶ÂéüÊù•Ëøô‰πàÂéö. ËÇ≤ÂÑøÁ±ª‰π¶Á±ç: „ÄäÂ§èÂ±±Â≠¶Ê†°„Äã„ÄÅ„ÄäÈùûÊö¥ÂäõÊ≤üÈÄö„ÄãÂíå„ÄäÊ∏∏ÊàèÂäõ„ÄãËøô‰∏âÊú¨ÊàëËßâÂæóÈÉΩÂæàÂ•Ω, ÁªôÊàëÁöÑÊÑüÂèóÈÉΩÂæàÂº∫ÁÉà. Á¨¨‰∏ÄÊ¨°ÂΩìÁà∂ÊØç, ‰∏çÊáÇÂæóÊÄé‰πàÂéª‰Ωì‰ºöÂ≠©Â≠êÁöÑÈúÄÊ±Ç, ‰∏çÊáÇÂæóÊÄé‰πàÂéªÂ§ÑÁêÜÂ§çÊùÇÁöÑÊÉÖÂÜµ, Êõ¥‰∏çÊáÇÊÄé‰πàÂéªÁÆ°ÁêÜËá™Â∑±ÁöÑÊÉÖÁª™, Âç¥ÊÉ≥ÊéßÂà∂Â≠©Â≠êÁöÑÊÉÖÁª™. ÊØïÁ´üÂΩìÁà∂ÊØçÈÉΩ‰∏çÈúÄË¶ÅËÄÉËØï‚Ä¶‚Ä¶ ÊäÄÊúØÁ±ª‰π¶Á±ç: ÂºÄÂßãÂÖ•ÂùëRust, ÂÖ•Èó®Â§±Ë¥•‰∏ÄÊ¨°‰∫Ü. Ëá≥‰∫é‰∏ì‰∏öÁöÑÊñπÂêë, Âú®Ê≤°Ê≤âÊ∑Ä‰πãÂâçËøòÊòØ‰∏çÁ´ãflag‰∫Ü, ÁúÅÂéª‰∫ÜÂ∞ÜÊù•Ë¢´ÂÜçÊ¨°ÊâìËÑ∏ÁöÑÂèØËÉΩ. Âè¶Â§ñ, ÁõÆÂâçÂú®ÂÅöÊÄßËÉΩÂ∑•Á®ã(Performance Engineering)ÊñπÈù¢ÁöÑÂ∑•‰Ωú, ÊòØËá™Â∑±ÈíüÊÑèÁöÑ‰∏Ä‰∏™Âùë.","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Talk","slug":"Talk","permalink":"https://unpluggedcoder.me/tags/Talk/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãString and str","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãString and str","date":"2019-11-12T16:20:30.000Z","updated":"2022-09-15T15:51:05.349Z","comments":true,"path":"2019/11/13/RustÂÖ•Èó®Â§±Ë¥•‰πãString and str/","link":"","permalink":"https://unpluggedcoder.me/2019/11/13/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BString%20and%20str/","excerpt":"","text":"ÊâÄÊúâStringÂíåstrÁ±ªÂûãÈÉΩ‰øùËØÅÂÜÖÈÉ®ÊåÅÊúâÊ≠£Á°ÆÁöÑUTF-8Ê†ºÂºèÂ≠óÁ¨¶‰∏≤. ÊâÄÊúâÁöÑsafeÊìç‰ΩúÈÉΩ‰øùËØÅËøô‰∏ÄÁÇπ, Âç≥‰∏ç‰ºöÂºïÂÖ•ÈîôËØØÊ†ºÂºèÁöÑUTF-8 StringÁöÑÂÜÖÈÉ®ÂÆûÁé∞ÂÖ∂ÂÆûÂ∞±ÊòØVec&lt;u8&gt; strÂàôÊòØborrowÁöÑStringÂºïÁî®. &amp;str‰∏çËÉΩClone, Âõ†‰∏∫clone(&amp;T)ÊñπÊ≥ïÈúÄË¶Å‰∏Ä‰∏™ËøîÂõûTÂØπË±°, ËÄåstrÂèàÊòØunsizedÁöÑ. ÂèØ‰ª•ÈÄöËøáslice.to_owned()Ëé∑Âèñ‰∏Ä‰ªΩÈáçÊñ∞ÂàÜÈÖçÁöÑÊã∑Ë¥ù. String::new()ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™Á©∫ÁöÑÂ≠óÁ¨¶‰∏≤, ËøòÊ≤°ÊúâÂàÜÈÖç‰ªª‰ΩïÂ†Ü‰∏äÁöÑÂÜÖÂ≠ò. ‰∏çËÉΩÈÄöËøáÂçï‰∏™‰∏ãÊ†áËÆøÈóÆsliceÁöÑÊüê‰∏™Â≠óÁ¨¶(slice[i]), Âõ†‰∏∫UTF-8ÁöÑÂ≠óÁ¨¶ÊòØ‰∏çÂÆöÈïøÁöÑ. ÂèØ‰ª•ÈÄöËøáchars()ÊñπÊ≥ïËøîÂõûÂ≠óÁ¨¶ÁöÑËø≠‰ª£Âô®: 12 let parenthesized = &quot;Rust (È•Ç)&quot;;assert_eq!(parenthesized[6..].chars().next(), Some(&#x27;È•Ç&#x27;)); StringÂÆûÁé∞‰∫ÜAdd&lt;&amp;str&gt; Âíå AddAssign&lt;&amp;str&gt;ÁöÑTrait, Âõ†Ê≠§ÂèØ‰ª•ÂæàËá™ÁÑ∂Âú∞Áî®+ÊãºÊé•Â≠óÁ¨¶‰∏≤. ‰ΩÜÊòØÊúâ‰∏§ÁÇπË¶ÅÊ≥®ÊÑè: Â∑¶ËæπÁöÑÊìç‰ΩúÁ¨¶‰∏çËÉΩÊòØ&amp;str, ‰∏ÄÂÆöË¶ÅÊòØ‰∏Ä‰∏™StringÂØπË±°. Âõ†‰∏∫‰ºöconsumeËøô‰∏™ÂØπË±°, Ëé∑ÂèñÂÖ∂ÊâÄÊúâÊùÉ, ‰∏î‰ºöÈáçÂ§çÂà©Áî®ÂÆÉÁöÑbuffer, Â¶ÇÊûúcapacityË∂≥Â§üÂ§ß, Â∞±‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂÜçÂºÄËæüÂÜÖÂ≠ò. 12345let string = &quot;partners&quot;.to_string();// ‰∏çËÉΩËøôÊ†∑ÂÜôlet parenthetical = &quot;(&quot; + string + &quot;)&quot;;// ÈúÄË¶ÅËΩ¨‰∏∫Stringlet parenthetical = &quot;(&quot;.to_string() + string + &quot;)&quot;; ÂØπÂè≥ËæπÁöÑÊìç‰ΩúÁ¨¶Âè™ÊòØborrow, ‰πüÂ∞±ÊÑèÂë≥ÁùÄÂÆÉÁöÑÂÜÖÂÆπ‰ºöË¢´Êã∑Ë¥ùÂà∞ÂâçËÄÖÁöÑbufferÊú´Â∞æ. StringËΩ¨ÊàêÂÖ∂ÂÆÉÁ±ªÂûãÈúÄË¶ÅÂÆûÁé∞std::str::FromStr Trait. ÊâÄÊúâÁöÑÂü∫Á°ÄÁ±ªÂûãÈÉΩÂÆûÁé∞‰∫ÜËøô‰∏™Trait. ÂÖ∂ÂÆÉÁ±ªÂûãËΩ¨ÊàêStringÊúâ‰∏âÁßçÊñπÊ≥ï: ÂÆûÁé∞std::fmt::Display trait. ÊâÄÊúâÁöÑÊú∫Âô®Êï∞Â≠óÁ±ªÂûãÈÉΩÂÆûÁé∞‰∫ÜËøô‰∏™trait, ÂèØ‰ª•Áõ¥Êé•ÊòæÁ§∫. ËÄåÂÉèBox&lt;T&gt;, Rc&lt;T&gt;, Arc&lt;T&gt; ËøôÁ±ªÊô∫ËÉΩÊåáÈíàÁ±ªÂûã, Âè™ÊúâTÂÆûÁé∞‰∫ÜDisplay trait, Ëøô‰∏™Á±ªÂûãÊâçËÉΩDispaly. ÂÆûÁé∞std::str::ToString trait.Â¶ÇÊûúÂÆûÁé∞‰∫Ü‰∏äÈù¢ÁöÑDisplay trait, ÈÇ£‰πàRustËá™Âä®Â∏ÆÊàë‰ª¨ÂÆûÁé∞Ëøô‰∏™trait. ÂÆûÁé∞std::fmt::Debug trait. ÊâÄÊúâÊ†áÂáÜÂ∫ìÂèØËÆøÈóÆÁöÑpub Á±ªÂûãÈÉΩÂÆûÁé∞‰∫ÜËøô‰∏™ÊñπÊ≥ï. ÈÄöÂ∏∏Â¶ÇÊûúÊàë‰ª¨ÊòØÂ∫ìÁöÑÂºÄÂèëËÄÖ, ÂØπÂ§ñÈÉ®ÂºÄÊîæÁöÑÁ±ªÂûã‰πüÈÉΩÂ∫îËØ•ÂÆûÁé∞Ëøô‰∏™trait, Êñπ‰æø‰ªñ‰∫∫ÊâìÂç∞Ë∞ÉËØï. Â¶ÇÊûúÂÅöÊï∞ÊçÆÂéãÁº©‰πãÁ±ªÁöÑ, ÈúÄË¶ÅËÆøÈóÆÂ≠óÁ¨¶‰∏≤ÂÜÖÈÉ®Â≠óËäÇÊï∞ÊçÆÊúâ‰∏§ÁßçÊñπÊ≥ï: slice.as_bytes(): borrowÂÖ∂ÂÜÖÈÉ®ÁöÑVec, ËøîÂõû&amp;[u8]. immutable, ‰∏îÈúÄË¶ÅÊ≥®ÊÑèÁîüÂëΩÂë®Êúü. string.into_bytes(): Ëøô‰∏™ÊàêÊú¨ÊØîËæÉ‰Ωé, Áõ¥Êé•consumeËøô‰∏™StringÂØπË±°, ÊääÂÜÖÈÉ®ÁöÑVec&lt;u8&gt;‰∫§Âá∫Êù•ËøîÂõû, Ê≤°Êúâ‰ªª‰ΩïÂ§ö‰ΩôÁöÑÊàêÊú¨. 123pub fn into_bytes(self) -&gt; Vec&lt;u8&gt; &#123; self.vec&#125; ÂêåÊ†∑‰ªéÂéüÂßãÁöÑÂ≠óËäÇ‰πüÂèØ‰ª•ÊûÑÈÄ†String, Êúâ‰∏ãÈù¢Âá†ÁßçÊñπÊ≥ï, ‰ΩÜÊòØÈÉΩË¶ÅÊ≥®ÊÑèÈîôËØØÊ£ÄÊü•: std::str::from_utf8(v: &amp;[u8]) -&gt; Result&lt;&amp;str, Utf8Error&gt;: ‰ªéËøôÈáåÂèØ‰ª•ÁúãÂà∞, ‰∏ÄÊòØ‰ºöÂÅöÈîôËØØÊ£ÄÊü•, Â¶ÇÊûú‰∏çÊòØÊúâÊïàÁöÑUTF-8Ê†ºÂºèÂ≠óËäÇ, Âàô‰ºöËøîÂõûErr; ‰∫åÊòØ, ËøîÂõûÁöÑ&amp;strÂíå&amp;[u8]ÊúâÂêåÊ†∑ÁöÑÁîüÂëΩÂë®Êúü. String::from_utf8(vec: Vec&lt;u8&gt;) -&gt; Result: ‰∏Ä, ÂêåÊ†∑ÂÅöÈîôËØØÊ£ÄÊü•; ‰∫å, ÂèÇÊï∞Áõ¥Êé•ÊçïËé∑VecÊâÄÊúâÊùÉ, Âπ∂ÊääÂÆÉÁöÑbufferÂÅö‰∏∫StringÂÜÖÈÉ®buffer, ÁúÅÂéª‰∫ÜÂºÄËæü, ÈùûÂ∏∏È´òÊïà;","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"String","slug":"String","permalink":"https://unpluggedcoder.me/tags/String/"},{"name":"str","slug":"str","permalink":"https://unpluggedcoder.me/tags/str/"},{"name":"slice","slug":"slice","permalink":"https://unpluggedcoder.me/tags/slice/"},{"name":"FromStr","slug":"FromStr","permalink":"https://unpluggedcoder.me/tags/FromStr/"},{"name":"ToString","slug":"ToString","permalink":"https://unpluggedcoder.me/tags/ToString/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãCollections","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãCollections","date":"2019-11-08T16:50:30.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/11/09/RustÂÖ•Èó®Â§±Ë¥•‰πãCollections/","link":"","permalink":"https://unpluggedcoder.me/2019/11/09/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BCollections/","excerpt":"","text":"RustÂÆπÂô®ÂíåÂÖ∂ÂÆÉËØ≠Ë®Ä‰∏çÂêå‰πãÂ§Ñ: Âà∞Â§ÑÈÉΩÊòØmoveÂíåborrow, RustÁî®moveÊù•ÈÅøÂÖçÊ∑±Êã∑Ë¥ù. ‰πüÂ∞±ÊòØËØ¥ÂØπ‰∏çËÉΩÂÆûÁé∞CopyÁöÑÁ±ªÂûã(ÁÆ°ÁêÜÂ†ÜÊàñÂÖ∂ÂÆÉÈ¢ùÂ§ñËµÑÊ∫êÁöÑÁ±ªÂûã)RustÊèíÂÖ•Âà∞ÂÆπÂô®ÈáåÊòØÈùûÂ∏∏Âø´ÁöÑ. RustÂÆπÂô®Èáå‰∏çÂ≠òÂú®Êó†ÊïàÂÄºÈîôËØØ(invalidation error). RustÊ≤°ÊúânullÁ±ªÂûã Vec&lt;T&gt; ÂåÖÂê´ÈïøÂ∫¶(length), ÂÆπÈáè(capacity)Âíå‰∏Ä‰∏™ÊåáÂêëÂ†Ü‰∏äÂàÜÈÖçÁöÑÂÜÖÂ≠òÁöÑÊåáÈíà(buffer). ‰æãÂ¶Ç‰∏ãÈù¢‰ª£Á†Å: 123456// Create an empty vectorlet mut numbers: Vec&lt;i32&gt; = vec![];// Create a vector with given contentslet words = vec![&quot;step&quot;, &quot;on&quot;, &quot;no&quot;, &quot;pets&quot;];let mut buffer = vec![0u8; 1024]; // 1024 zeroed-out bytes ‰∏äÈù¢ÁöÑ‰∏â‰∏™VecÂú®ÂÜÖÂ≠òÈáåÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: Â§ßÈÉ®ÂàÜÊìç‰ΩúÈÉΩËøîÂõûÁöÑÊòØreference, Âõ†‰∏∫Â¶ÇÊûúËøîÂõûÁ±ª‰ººÊòØTÊÑèÂë≥ÁùÄmoveÊâÄÊúâÊùÉ. ‰ΩÜÊòØ, Êúâ‰∏Ä‰∏™‰æãÂ§ñ: Â∞±ÊòØÂ¶ÇÊûúÊâÄÊúâÂÖÉÁ¥†ÈÉΩÂèØ‰ª•CopyÁöÑËØù, ÈÇ£‰πàËøô‰∫õÂáΩÊï∞ËøîÂõûÁöÑÊòØ‰∏Ä‰ªΩÊ†à‰∏äÁöÑÊã∑Ë¥ù, ÊØîÂ¶ÇÊï¥Âûã. ËÄåto_vec()Ëøô‰∏™ÊñπÊ≥ï‰πüÂè™ËÉΩ‰ΩúÁî®Âú®TÂèØ‰ª•CopyÁöÑÊï∞ÁªÑ‰∏ä. 12345let v = [1, 2, 3, 4, 5, 6, 7, 8, 9];assert_eq!(v.to_vec(), vec![1, 2, 3, 4, 5, 6, 7, 8, 9]);assert_eq!(v[0..6].to_vec(), vec![1, 2, 3, 4, 5, 6]); Vec&lt;T&gt;ÁöÑËØ¶ÁªÜÊñπÊ≥ï‰ª•ÂèäÂÖ∂ÂÆÉÂÆπÂô®ÁöÑ‰ΩøÁî®ËØ¥ÊòéËøôÈáåÂ∞±‰∏çËøáÂ§ö‰ªãÁªç, ÂèØ‰ª•ÂèÇËÄÉÂÆòÁΩë. ËøôÈáåÂÜçËØ¥ËØ¥‰∏Ä‰∫õÂÆπÂô®ÁöÑÊÄßËÉΩÊñπÈù¢ÈÄâÊã©. Performance of Collections Â¶ÇÊûúÈÅçÂéÜVecÂÆπÂô®, ‰ªéC++Â∞§ÂÖ∂ÊòØCËØ≠Ë®ÄËΩ¨ËøáÊù•ÁöÑÂºÄÂèëËÄÖ‰ºöÂÅèÂêë‰ΩøÁî®‰∏ãÊ†áÁöÑÂΩ¢ÂºèËÆøÈóÆÂÖÉÁ¥†ÂÜÖÂÆπ: 12345let arr = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;];for i in 0..arr.len() &#123; println!(&quot;&#123;&#125;&quot;, arr[i]);&#125; Ëøô‰πàÂπ≤Êúâ‰∏§ÁÇπÈóÆÈ¢ò: ËøôÊ†∑Âú®ÁÉ≠ÁÇπ‰ª£Á†Å‰∏≠Âæà‰º§ÂÆ≥ÊÄßËÉΩ, Âõ†‰∏∫RustÂØπVecÁöÑ‰∏ãÊ†áËÆøÈóÆÈÉΩË¶ÅÂÅöÊúâÊïàÊÄßÂà§Êñ≠. Â¶ÇÊûúËøô‰∏™ÊâãÂÜô‰∏ãÊ†áiË∂ÖÂá∫ËåÉÂõ¥, ÈÇ£‰πàRustÁ®ãÂ∫èÂ∞±Áõ¥Êé•panicÂ¥©‰∫Ü. Êé®ËçêÁöÑÂÅöÊ≥ïÊòØÁî®‰πãÂâçÂ∞ÜÁöÑIterator. ËøôÊ†∑Rust‰ºöË∞ÉÁî®nextÊñπÊ≥ï‰∏ÄÁõ¥Ë∑ë‰∏ãÂéª, Áõ¥Âà∞ËøîÂõûNone. Âπ∂‰∏îRust‰ºöÂ∞ÜËøô‰∏™‰ª£Á†ÅËΩ¨Êç¢ÊàêÂíåÊâãÂÜôC&#x2F;C++ÂêåÊ†∑ÊÄßËÉΩÁöÑ‰ª£Á†Å, Ê≤°ÊúâÈ¢ùÂ§ñÊàêÊú¨. 12345let arr = [&#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27;, &#x27;d&#x27;, &#x27;e&#x27;, &#x27;f&#x27;];for c in &amp;arr &#123; println!(&quot;&#123;&#125;&quot;, c);&#125; ÂíåC&#x2F;C++‰∏ÄÊ†∑, ÈÅçÂéÜ‰∏äVec&lt;T&gt;ÊÄßËÉΩÊúÄÂø´, ÂÖÖÂàÜÂà©Áî®Cache-line. LinkedList&lt;T&gt;ÊòØÂèåÁ´ØÂàóË°®, Â§¥Â∞æÊèíÂÖ•„ÄÅÂà†Èô§Âø´, ‰ΩÜÊòØËÆøÈóÆÊÖ¢, Â¶ÇÊûúÂè™ÂÖ≥ÂøÉÂ§¥Â∞æËÆøÈóÆÈÄüÂ∫¶Â∫îËØ•ÈÄâÊã©VecDeque&lt;T&gt;, ÂíåVec&lt;T&gt;‰∏ÄÊ†∑ÁöÑÂÆûÁé∞ÁöÑÂèåÁ´ØÈòüÂàó. Áõ∏ÊØî‰πã‰∏ã, LinkedList&lt;T&gt;ÂîØ‰∏ÄÁöÑ‰ºòÂäøÂ∞±ÊòØÂêàÂπ∂‰∏§‰∏™ListÁöÑÊó∂ÂÄôÈÄüÂ∫¶ÂæàÂø´. MapÊñπÈù¢ÊúâHashMap&lt;K, V&gt;ÂíåBTreeMap&lt;K, V&gt;. ÂâçËÄÖÈááÁî®SipHash 1-3Êï£ÂàóÁÆóÊ≥ï(ÊàëÂΩìÂâçÁâàÊú¨Rust1.38), ‰∏ªË¶ÅÈ¢ÑÈò≤*HashDoS attacks*, ‰ΩÜÂìàÂ∏åË°®ÁöÑÂÆûÁé∞ÈááÁî®ÁöÑÊòØGoogleÁöÑSwissTable, ÈÄüÂ∫¶ÂàÅÂàÅÁöÑ, Êü•ÊâæÂ§çÊùÇÂ∫¶O(1). ÂêéËÄÖÂÖÉÁ¥†ÊúâÂ∫è, ÈááÁî®B-Tree, Áõ∏ÊØîÂπ≥Ë°°‰∫åÂèâÊ†ëÊúâÊõ¥Â•ΩÁöÑÂ±ÄÈÉ®ÊÄß(locality), CacheÂèãÂ•Ω, ÈÄüÂ∫¶Âø´. Êü•ÊâæÂ§çÊùÇÂ∫¶O(lgN). SetÊñπÈù¢‰πüÊúâÂØπÂ∫îÁöÑHashSet&lt;T&gt;ÂíåBTreeSet&lt;T&gt;. Áî®Vec, HashMapÂíåHashSetË∂≥‰ª•coverÁªùÂ§ßÈÉ®ÂàÜÂú∫ÊôØÊÄßËÉΩ. All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote in the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Collections","slug":"Collections","permalink":"https://unpluggedcoder.me/tags/Collections/"},{"name":"Vec","slug":"Vec","permalink":"https://unpluggedcoder.me/tags/Vec/"},{"name":"VecDeque","slug":"VecDeque","permalink":"https://unpluggedcoder.me/tags/VecDeque/"},{"name":"HashMap","slug":"HashMap","permalink":"https://unpluggedcoder.me/tags/HashMap/"},{"name":"HashSet","slug":"HashSet","permalink":"https://unpluggedcoder.me/tags/HashSet/"},{"name":"BTreeMap","slug":"BTreeMap","permalink":"https://unpluggedcoder.me/tags/BTreeMap/"},{"name":"BTreeSet","slug":"BTreeSet","permalink":"https://unpluggedcoder.me/tags/BTreeSet/"},{"name":"Performance","slug":"Performance","permalink":"https://unpluggedcoder.me/tags/Performance/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Adapters","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Adapters","date":"2019-11-04T17:56:30.000Z","updated":"2022-09-15T15:51:05.348Z","comments":true,"path":"2019/11/05/RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Adapters/","link":"","permalink":"https://unpluggedcoder.me/2019/11/05/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BIterator%20Adapters/","excerpt":"","text":"Êúâ‰∏Ä‰∏™ÊúàÊ≤°Êõ¥Êñ∞‰∫Ü, Ëá™‰∏äÊ¨°9ÊúàÂ∫ïÊõ¥Êñ∞ÂêéÂ∞±ÂéªÊóÖÊ∏∏‰∫Ü. ÊóÖÊ∏∏ÂõûÊù•Êé•ÁùÄÂõΩÂ∫Ü, 10Êúà‰ªΩÊÉ≥ÁùÄÊää„ÄäProgramming Rust„ÄãËøôÊú¨‰∏ÄËµ∑ÁúãÂÆåÂêéÂÜçÁª≠ÂÜôËøôÁØáRustÂÖ•Èó®Â§±Ë¥•Á≥ªÂàó(ÂÖ∂ÂÆûÂ∞±ÊòØÊääÂÅöÁöÑËØª‰π¶Á¨îËÆ∞ÈáçÊñ∞ÊëòÊäÑÂá∫Êù•, Êää‰π¶ËØªËñÑÊíí), ÊâÄ‰ª•Â∞±‰∏ÄÁõ¥Ê≤°Êõ¥Êñ∞. ÂΩìÁÑ∂, ‰πüÁúãÂÆå‰∫Ü. ËΩ¨ÁúºÂä†Áè≠‰∏ÄÂπ¥‰∫Ü, Ëøô‰∏ÄÂπ¥ÂèçËÄåÁúã‰∫Ü20Âá†Êú¨‰π¶, ÊØîÂâçÂá†Âπ¥ÈÉΩÂ§ö. ÂÖ∂‰∏≠‰∏§Êú¨Rust, ÊúüÈó¥ÂèàÂú®ÊüêÂÆù‰∏ä‰π∞‰∫ÜÂç∞Âà∑Áâà„ÄäRust Hight Performance„ÄãÂíå„ÄäHands‚ÄëOn Microservices with Rust„Äã, Ëøô‰∏§Êú¨ËÅä‰∏Ä‰∫õRustÊúÄ‰Ω≥ÂÆûË∑µÁöÑ‰π¶, ‰ª∑Ê†ºÁõ∏ÂØπ‰æøÂÆú. ÂõΩÂÜÖÂºïËøõÁöÑRust‰π¶ÂÆûÂú®Â∞ë, Ê≤°ÂäûÊ≥ïÊîØÊåÅËøô‰πàÂ§öË∂ÖÁ∫ßË¥µÁöÑÂéüÁâà‰π¶. ËØªÂÆå‰∫ÜÂü∫Á°ÄÁü•ËØÜ, ÂÅöÂÆå‰∫ÜRustÂÆòÊñπÁªÉ‰π†, ÊúÄËøëÂú®Áúã„ÄäRust Hight Performance„Äã, ‰∏ÄÁõ¥ÊâãÁóíÊÉ≥ÂÜô‰∫õ‰∏úË•ø. ÊâÄ‰ª•Ëøô‰∏™ÂÖ•Èó®Â§±Ë¥•Á≥ªÂàó‰∏çËÉΩ‰øùËØÅÂÆåÁæéÊî∂ÂÆò. ÂóØ, ‰∏çËÉΩÁ´ãflag. Â∫üËØù‰∏çÂ§öËØ¥‰∫Ü, ÁªßÁª≠ËÅäËÅäRustÁöÑËø≠‰ª£Âô®. Iterator AdapterËø≠‰ª£Âô®ÈÄÇÈÖçÂô®ÊòØËø≠‰ª£Âô®(Iterator)‰∏ä‰∏ÄÁ≥ªÂàó‰ΩøÁî®(consume)ÂÖ∂Ëá™Ë∫´ItemsÁöÑÈÄÇÈÖçÊñπÊ≥ï(Adapters), Ëøô‰∫õÊñπÊ≥ïËøîÂõû‰∏Ä‰∏™ÂÖ∑ÊúâÊñ∞ÂäüËÉΩÁöÑËø≠‰ª£Âô®. Â∏∏ËßÅÁöÑÊúâmap, filterÁ≠â. ËøôÁ±ªÊñπÊ≥ïÈÄöÂ∏∏ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™ÂÆûÁé∞‰∫ÜIterator traitÁöÑÁªìÊûÑ‰Ωì. 1234567891011121314// Iteratorfn map&lt;B, F&gt;(self, f: F) -&gt; Map&lt;Self, F&gt;where F: FnMut(Self::Item) -&gt; B&#123; ... &#125;// Mappub struct Map&lt;I, F&gt; &#123; /* fields omitted */ &#125;impl&lt;B, I, F&gt; Iterator for Map&lt;I, F&gt;where F: FnMut(&lt;I as Iterator&gt;::Item) -&gt; B, I: Iterator&#123; ... &#125; ËøôÁ±ªÈÄÇÈÖçÂô®ÊñπÊ≥ïÈÄöÂ∏∏‰ºöÊé•Âèó‰∏Ä‰∏™Èó≠ÂåÖ. Ê†πÊçÆÈÄÇÈÖçÂô®ÁöÑÁî®ÈÄî‰∏çÂêå, Èó≠ÂåÖÁöÑÂèÇÊï∞‰πü‰∏çÂêå. ÊØîÂ¶Ç‰∏äÈù¢ÁöÑmapÈÄÇÈÖçÂô®, ÂÖ∂Êé•ÂèóÁöÑÈó≠ÂåÖÂèÇÊï∞Á±ªÂûãÊòØSelf::Item, ‰πüÂ∞±ÊòØ‰ºöÊääÊØè‰∏™ÂÖÉÁ¥†ÁöÑÊâÄÊúâÊùÉËΩ¨‰∫§ÁªôÈó≠ÂåÖÂÜçËΩ¨‰∫§ÁªôËøîÂõûÁöÑ‰∏ã‰∏Ä‰∏™Ëø≠‰ª£Âô®. ÂΩìÁÑ∂, Á±ª‰ººfilterÁöÑÈÄÇÈÖçÊñπÊ≥ï‰∏ç‰ºöÊçïËé∑ÂÖÉÁ¥†ÁöÑÊâÄÊúâÊùÉ, Âõ†Ê≠§ÂÆÉ‰ª¨ÁöÑÈó≠ÂåÖÂèÇÊï∞Â∞±ÊòØItemÁöÑÂºïÁî®Á±ªÂûã. 1234fn filter&lt;P&gt;(self, predicate: P) -&gt; Filter&lt;Self, P&gt;where P: FnMut(&amp;Self::Item) -&gt; bool,&#123; ... &#125; ÂØπ‰∫éËø≠‰ª£Âô®ÈÄÇÈÖçÂô®(Iterator Adapter)ÊúâÂæàÈáçË¶ÅÁöÑ‰∏§ÁÇπÈúÄË¶ÅËÆ∞‰Ωè: ÂçïÁ∫ØË∞ÉÁî®ÈÄÇÈÖçÂô®ÊñπÊ≥ïÂπ∂‰∏ç‰ºöÊâßË°å‰ªª‰ΩïÂÖÉÁ¥†‰∏äÁöÑËø≠‰ª£(cousmue). Áõ¥Âà∞Ë¶ÅÊ±Ç‰ΩøÁî®ÊúÄÁªàËøîÂõûÁöÑÂÖÉÁ¥†Êó∂(‰æãÂ¶ÇcollectÊñπÊ≥ï), Êï¥‰∏™Ëø≠‰ª£ËøáÁ®ãÊâç‰ºöË¢´ÊâßË°å. ËøôÂæàÂ•ΩÁêÜËß£, LazyË°å‰∏∫. Ëøô‰∫õËø≠‰ª£Âô®ÁöÑÊó∂ÂÄôÈÉΩÊòØÈõ∂ÊàêÊú¨ÊäΩË±°(zero-overhead abstraction). Âú®‰ª£Á†ÅÈáå‰ªéË∞ÉÁî®map, filterËøô‰∫õËø≠‰ª£Âô®ÈÄÇÈÖçÊñπÊ≥ïÂà∞ÂÆÉ‰ª¨ËøîÂõûÁöÑÁ±ªÂûãÈÉΩÊòØÊ≥õÂûã(generic)ÁöÑ, ‰∏îRustÊúâË∂≥Â§üÁöÑ‰ø°ÊÅØÂú®ÁºñËØëÊó∂ÊúüÈÄöËøáÁ±ªÂûãÊé®ÂØºÁîüÊàêÊ≥õÂûãÁâπÂåñÁöÑÈÄÇÈÖçÂô®ÊñπÊ≥ïÂπ∂‰∏îÊääÂÆÉ‰ª¨ÁöÑnextÊñπÊ≥ïÂÖßËÅî(inline). ‰πüÂ∞±ÊòØËØ¥Âú®ËøêË°åÊó∂ÁöÑÊïàÁéáÂíåÊâãÂÜôËøôÁ±ªÈÄÇÈÖçÊñπÊ≥ïÊòØ‰∏ÄÊ†∑ÁöÑ. ÊØîÂ¶Ç‰∏ãÈù¢ÁöÑË∞ÉÁî®, ‰∏§ËÄÖÂú®ËøêË°å‰∏äÁöÑÊïàÁéáÊòØÁ≠â‰ª∑ÁöÑ. 123456789101112131415let text = &quot; ponies \\n giraffes\\niguanas \\nsquid&quot;.to_string(); // Use Iterator Adapters let v: Vec&lt;&amp;str&gt; = text.lines() .map(str::trim) .filter(|s| *s != &quot;iguanas&quot;) // s is a shared reference .collect(); assert_eq!(v, [&quot;ponies&quot;, &quot;giraffes&quot;, &quot;squid&quot;]); // Probably write by hand for line in text.lines() &#123; let line = line.trim(); if line != &quot;iguanas&quot; &#123; v.push(line); &#125; &#125; ÂÆòÊñπÊñáÊ°£ÊúâÂæàÂ§öÈÄÇÈÖçÂô®ÊñπÊ≥ï, ËøôÈáåÂ∞±‰∏ç‰∏Ä‰∏ÄËµòËø∞, ÂèÇËÄÉÊñáÊ°£Âç≥ÂèØ.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Iterator","slug":"Iterator","permalink":"https://unpluggedcoder.me/tags/Iterator/"},{"name":"Adapter","slug":"Adapter","permalink":"https://unpluggedcoder.me/tags/Adapter/"},{"name":"map","slug":"map","permalink":"https://unpluggedcoder.me/tags/map/"},{"name":"filter","slug":"filter","permalink":"https://unpluggedcoder.me/tags/filter/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Basic","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Basic","date":"2019-09-25T16:25:30.000Z","updated":"2022-09-15T15:51:05.348Z","comments":true,"path":"2019/09/26/RustÂÖ•Èó®Â§±Ë¥•‰πãIterator Basic/","link":"","permalink":"https://unpluggedcoder.me/2019/09/26/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BIterator%20Basic/","excerpt":"","text":"Iterator IteratorÂÆûÁé∞‰∫Üstd::iter::Iteratortrait, ÂåÖÂê´nextÁ≠âÊñπÊ≥ï. 12345trait Iterator &#123; type Item; fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;; ... // many default methods&#125; iterÂíåiter_mut‰∏§‰∏™ÊñπÊ≥ïÁîüÊàêÊØè‰∏™ItemÁöÑsharedÊàñmutable reference, Ëøô‰∏§‰∏™ÊñπÊ≥ïÊòØÂ§ßÂ§öÊï∞ÂÆπÂô®Êèê‰æõÁöÑÊñπÊ≥ï, ËÄåÈùûIteratorÊñπÊ≥ï. IntoIterator *iterable*ÊòØÊåáÂÆûÁé∞‰∫Üstd::iter::IntoIteratortraitÁöÑÂÄº, ÂåÖÂê´into_iterÊñπÊ≥ï, ‰πüÊòØforÂæ™ÁéØË∞ÉÁî®ÁöÑÊñπÊ≥ï. 12345trait IntoIterator where Self::IntoIter::Item == Self::Item &#123; type Item; type IntoIter: Iterator; fn into_iter(self) -&gt; Self::IntoIter;&#125; ÂæàÂ§öÂÆπÂô®‰πüÂÆûÁé∞‰∫ÜIntoIteratortrait, ‰ΩÜÊòØÊ†πÊçÆËá™Ë∫´‰∏çÂêåÁöÑÂú∫ÊôØ, Êúâ‰∏çÂêåÁöÑÂÆûÁé∞: shared referenceÁöÑcollection, into_iter()ËøîÂõûÁöÑÊòØitemsÁöÑshared reference. *mutable reference*ÁöÑcollectionÂêåÁêÜ. ÊåâÂÄº‰º†ÈÄíÁöÑcollection(passed collection by value)‰ºöÂèñÂæócollectionÁöÑÊâÄÊúâÊùÉ, into_iter()ËøîÂõûÁöÑ‰πüÊòØÂèñÂá∫Item‚Äôs ownershipÁöÑiterator. ÂΩìËøô‰∏™iteratorÈîÄÊØÅÊó∂, Êï¥‰∏™collection‰πüÈîÄÊØÅ. 12345678910use std::collections::BTreeSet;let mut favorites = BTreeSet::new();favorite.insert(&quot;Game of Thrones&quot;.to_string());favorite.insert(&quot;Breaking Bad&quot;.to_string());let mut it = favorites.into_iter(); // Take ownership of favoritesassert_eq!(it.next(), Some(&quot;Game of Thrones&quot;.to_string()));assert_eq!(it.next(), &quot;Breaking Bad&quot;.to_string());assert_eq!(it.next(), None); // favorites now empty. ÂØπÂ∫îÁöÑ‰∏âÁßçforÂæ™ÁéØÂ¶Ç‰∏ã: 123for element in &amp;collection &#123;...&#125;for element in &amp;mut collection &#123;...&#125;for element in collection &#123;...&#125; Âπ∂‰∏çÊòØÊâÄÊúâÁöÑÂÆπÂô®ÈÉΩÂÆûÁé∞‰∫ÜËøô‰∏âÁßç: ÂÉèHashMap, BTreeMapËøôÁ±ªÂÆπÂô®ËøîÂõûÁöÑÊòØvalueÁöÑmutable reference, keyÁöÑshared reference. Âõ†‰∏∫keyÁöÑhashÂÄº‰∏çËÉΩÂèò. ËÄåHashSet, BTreeSetËøôÁ±ªÊ≤°ÊúâÂÆûÁé∞ËøîÂõû*mutable reference,*ÂêåÊ†∑Âõ†‰∏∫ÂÆÉÁöÑÂÄºÂØπÂÆπÂô®ÊúâÁâπÊÆäÊÑè‰πâ, ‰∏çËÉΩÂèò. SlicesÊ≤°ÊúâÂÆûÁé∞Á¨¨‰∏âÁßçby value, Âõ†‰∏∫ÂÆÉÂπ∂‰∏çÊã•ÊúâitemÁöÑÊâÄÊúâÊùÉ. ÂΩìÂØπIntoIteratorËøîÂõûÁöÑiteratorÊúâÁ±ªÂûãË¶ÅÊ±ÇÊó∂(‰æãÂ¶ÇforÂæ™ÁéØ), ÂèØ‰ª•Áî®IntoIterator&lt;Item=xxx&gt;Ê≥õÂûãÊù•ÊåáÂÆö: 12345678910use std::fmt::Debug;fn dump&lt;T, U&gt;(t: T) where T: IntoIterator&lt;Item=U&gt;, U: Debug&#123; for u in t &#123; println!(&quot;&#123;:?&#125;&quot;, u); &#125;&#125; Â§ßÈÉ®ÂàÜÂÆπÂô®Êèê‰æõ‰∏Ä‰∏™drainÊñπÊ≥ï, ËØ•ÊñπÊ≥ï‰∏çÂ±û‰∫éIntoIterator, ÂÆÉÂíåIntoIteratorÁöÑinto_iterÊñπÊ≥ï‰∏çÂêåÁöÑÊòØÂÆÉ‰∏ç‰ºöÊ∂àË¥πcollectionÁöÑÊâÄÊúâÊùÉ, ËÄåÊòØËé∑ÂèñcollectionÁöÑ‰∏Ä‰∏™mutable reference, Âπ∂ËøîÂõû‰∏Ä‰∏™Ëé∑ÂèñÊØè‰∏™ÂÖÉÁ¥†ÊâÄÊúâÊùÉ(passes ownership of each element to the consumer)ÁöÑiterator. 1234567use std::iter::FromIterator;let mut outer = &quot;Earth&quot;.to_string();let inner = String::from_iter(outer.drain(1..4));assert_eq!(outer, &quot;Eh&quot;);assert_eq!(inner, &quot;art&quot;);","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Iterator","slug":"Iterator","permalink":"https://unpluggedcoder.me/tags/Iterator/"},{"name":"IntoIterator","slug":"IntoIterator","permalink":"https://unpluggedcoder.me/tags/IntoIterator/"},{"name":"into_iter","slug":"into-iter","permalink":"https://unpluggedcoder.me/tags/into-iter/"},{"name":"drain","slug":"drain","permalink":"https://unpluggedcoder.me/tags/drain/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãClosure","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãClosure","date":"2019-09-04T16:45:30.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/09/05/RustÂÖ•Èó®Â§±Ë¥•‰πãClosure/","link":"","permalink":"https://unpluggedcoder.me/2019/09/05/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BClosure/","excerpt":"","text":"RustÈó≠ÂåÖ(Closure)Êúâ‰∏§ÁßçÊçïËé∑ÂèòÈáèÁöÑÊñπÂºè: Borrow: ÂÆûÈôÖÂ∞±ÊòØ‰∏Ä‰∏™ÂºïÁî®. Èó≠ÂåÖÁöÑÁîüÂ≠òÂë®Êúü‰∏ç‰ºöË∂ÖËøáÊçïËé∑ÁöÑÂèòÈáèÁîüÂ≠òÂë®ÊúüÊó∂, ÈááÁî®ËøôÁßçÊñπÂºè: 123fn sort_by_statistic(cities: &amp;mut Vec&lt;City&gt;, stat: Statistic) &#123; cities.sort_by_key(|city| -city.get_satistic(stat));&#125; Steal(move): ÂΩìÈó≠ÂåÖÁöÑÁîüÂ≠òÂë®ÊúüË∂ÖËøáÊçïËé∑ÂèòÈáèÊó∂, ÈúÄË¶ÅÁî®ÂÖ≥ÈîÆÂ≠ómoveÂëäËØâRustË¶ÅÊää‰ΩøÁî®ÁöÑÂèòÈáèÊçïËé∑Âà∞Èó≠ÂåÖ‰∏≠. moveÁöÑÊñπÂºèÊúâ‰∏âÁßç: Â¶ÇÊûúÂèòÈáèÊòØCopyableÁ±ªÂûã(Â¶Çi32), ÈÇ£‰πàÈó≠ÂåÖ‰ºö‰ΩøÁî®ÂèòÈáèÁöÑ‰∏Ä‰ªΩÊã∑Ë¥ùÂâØÊú¨. ËÄåÂú®Èó≠ÂåÖ‰πãÂêé, ‰ªçÁÑ∂ÂèØ‰ª•‰ΩøÁî®Ëøô‰∏™CopyableÂèòÈáè. Â¶ÇÊûúÂèòÈáèÊòØNonCopyable(Â¶ÇVec&lt;City&gt;), ÈÇ£‰πàÈó≠ÂåÖ‰ºöÊî´Âèñ(steal)ÂèòÈáèÁöÑÊâÄÊúâÊùÉ, ÁúüÊ≠£ÊÑè‰πâ‰∏äÁöÑmoveÂà∞Èó≠ÂåÖ‰∏≠. Èó≠ÂåÖ‰πãÂêé‰πü‰∏çËÉΩÂÜç‰ΩøÁî®ËØ•ÂèòÈáè. Â¶ÇÊûúÈó≠ÂåÖÂêé‰ªçÁÑ∂Ë¶Å‰ΩøÁî®NonCopyableÁöÑÂèòÈáè, ÈÇ£‰πàÂèØ‰ª•‰ΩøÁî®cloneÊñπÊ≥ï, Ê∑±Êã∑Ë¥ùÂá∫‰∏Ä‰ªΩÂâØÊú¨‰æõÈó≠ÂåÖ‰ΩøÁî®. Function &amp; Closure Types ÂíåC&#x2F;C++‰∏ÄÊ†∑, ÂáΩÊï∞ÂêçÂ∞±ÂÉè‰∏Ä‰∏™ÂáΩÊï∞ÊåáÈíà, ÊåáÂêëÂáΩÊï∞ÁöÑÊú∫Âô®Á†Å. Èó≠ÂåÖÂíåÂáΩÊï∞ÁöÑÁ±ªÂûã‰∏çÂêå fntypeÁöÑÂèÇÊï∞Âè™ËÉΩÊé•ÂèóÂáΩÊï∞ÊåáÈíà FntraitÊó¢ÂèØ‰ª•Êé•ÂèóÂáΩÊï∞ÊåáÈíà, ‰πüËÉΩÊé•ÂèóÈó≠ÂåÖ. ÂÆûÈôÖ‰∏äÊØè‰∏™Èó≠ÂåÖÈÉΩÂÆûÁé∞‰∫ÜFntrait(Ê≥õÊåá‰∏ãÈù¢ÁöÑFn/FnOnce/FnMut‰πã‰∏Ä). 12345678// Âè™ËÉΩÊé•ÂèóÂáΩÊï∞ÊåáÈíàfn count_selected_cities(cities: &amp;Vec&lt;City&gt;, test_fn: fn(&amp;City) -&gt; bool) -&gt; usize &#123; ...&#125;// Êó¢ËÉΩÊé•ÂèóÂáΩÊï∞ÊåáÈíà, ‰πüËÉΩÊé•ÂèóÈó≠ÂåÖfn count_selected_cities(cities: &amp;Vec&lt;City&gt;, test_fn: F) -&gt; usize where F: Fn(&amp;City) -&gt; bool &#123; ... &#125; ÊØè‰∏™Èó≠ÂåÖÈÉΩÊúâËá™Â∑±‰∏¥Êó∂ÁöÑÂîØ‰∏ÄÁ±ªÂûã, Ê≤°Êúâ‰ªªÊÑè‰∏§‰∏™Èó≠ÂåÖ‰ºöÊúâÁõ∏ÂêåÁöÑType ClosureÊÄßËÉΩ Â§ßÈÉ®ÂàÜËØ≠Ë®ÄÊääÈó≠ÂåÖÂàõÂª∫Âú®Â†Ü‰∏ä(Áî±GCÂõûÊî∂), Ë∞ÉÁî®ÁöÑÊó∂ÂÄôÊúâ‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÊàêÊú¨, Êõ¥ÈáçË¶ÅÁöÑÊòØ: ËøôÊ†∑ÂÆåÂÖ®Êó†Ê≥ïÂà©Áî®inlineÊèêÂçáÊÄßËÉΩ. RustÊ≤°ÊúâËøôÊñπÈù¢ÁöÑÂ¶•Âçè. Èô§ÈùûÊòæÂºèÁöÑÊääÈó≠ÂåÖÂàõÂª∫Âú®Box, VecÊàñÂÖ∂ÂÆÉÂÆπÂô®‰∏≠, Rust‰∏ç‰ºöÊääÈó≠ÂåÖÊîæÂú®Â†Ü‰∏ä. ËÄå‰∏îÂõ†‰∏∫ÊØè‰∏™Èó≠ÂåÖÈÉΩÊúâÂÆÉËá™Â∑±ÁöÑÁ±ªÂûã, Rust‰πüËÉΩÈÄöËøáÊçïËé∑ÁöÑÊñπÂºèÁü•ÈÅìÈúÄË¶ÅÂºÄËæüÂ§öÂ§ßÁöÑÁ©∫Èó¥ÁªôÂèòÈáè, ‰ªéËÄåÂèØ‰ª•ÊääÈó≠ÂåÖÂÅöinline‰ºòÂåñ. Â¶Ç‰∏ãÂõæ: ![Closure Memory Model](&#x2F;images&#x2F;Screen Shot 2019-09-04 at 01.08.26.png) (a): ÊåâÂºïÁî®ÊçïËé∑(Borrow), ÂÆûÈôÖÂè™ÈúÄË¶Å‰∏§‰∏™ÊåáÈíàÂ§ßÂ∞èÊåáÂêëÂèòÈáè. (b): ‰ª•moveÁöÑÊñπÂºèÊî´Âèñ(Steal)ÂèòÈáè, Â≠òÊîæ‰∏§‰∏™Êã∑Ë¥ù. (c): ‰∏çÈúÄË¶ÅÊçïËé∑‰ªª‰ΩïÂèòÈáè, 0ÊàêÊú¨! Êó†ËÆ∫Âì™ÁßçÂΩ¢ÂºèÁöÑÈó≠ÂåÖ, Ê≤°ÊúâÂ§ö‰ΩôÁöÑÂºÄÈîÄ, Ëøû‰∏Ä‰∏™ÊåáÂêëÈó≠ÂåÖÁöÑÊåáÈíàÈÉΩÊ≤°Êúâ! Âç≥‰ΩøÂú®Â†ÜÊ†à‰∏äÁöÑÈó≠ÂåÖ(‰∏ãÈù¢‰ºöËØ¥), ÂÖ∂Ë∞ÉÁî®ÊÄßËÉΩ‰πüÂíåTraitÈáåÁöÑÊñπÊ≥ïË∞ÉÁî®ÊÄßËÉΩÂ∑Æ‰∏çÂ§ö. ÊÑèÊÄùÂ∞±ÊòØÊØîC++ÁöÑËôöÂáΩÊï∞ÊåáÈíàÂø´. Fn, FnMut &amp; FnOnce Èó≠ÂåÖÂÜÖ‰ºöÈîÄÊØÅ(drop)BorrowÂèòÈáèÁöÑ‰∏çËÉΩ‰∫åÊ¨°Ë∞ÉÁî®, Âê¶ÂàôÂºïÂèëÂ§öÊ¨°ÈîÄÊØÅ, Rust‰ºöÂú®ÁºñËØëÊó∂ÊúüÊ£ÄÊµãÂà∞ËøôÁÇπ. 12345let my_str = &quot;hello&quot;.to_string();let f = || drop(my_str);f(); // okf(); // error: use of moved value ÈíàÂØπ‰∏äÈù¢ÁöÑÊÉÖÂÜµ, ‰∏ãÈù¢ÁöÑ‰ª£Á†Å‰πü‰ºöÊä•Èîô: 123456789fn call_twice&lt;F&gt;(closure: F) where F: Fn() &#123; closure(); closure();&#125;let my_str = &quot;hello&quot;.to_string();let f = || drop(my_str);call_twice(f); // expoected a closure that implements the `Fn` trait, // but this closure only implements `FnOnce` ÁºñËØëÂô®ÊèêÁ§∫fËøô‰∏™Èó≠ÂåÖÂØπË±°ÂÆûÈôÖ‰∏äÊòØ‰∏™FnOnce, ÂÆÉÂíåFn‰ª•ÂèäFnMutÁöÑÂ£∞ÊòéÂ¶Ç‰∏ã: 123456789101112pub trait FnOnce&lt;Args&gt; &#123; type Output; extern &quot;rust-call&quot; fn call_once(self, args: Args) -&gt; Self::Output;&#125;pub trait FnMut&lt;Args&gt;: FnOnce&lt;Args&gt; &#123; extern &quot;rust-call&quot; fn call_mut(&amp;mut self, args: Args) -&gt; Self::Output;&#125;pub trait Fn&lt;Args&gt;: FnMut&lt;Args&gt; &#123; extern &quot;rust-call&quot; fn call(&amp;self, args: Args) -&gt; Self::Output;&#125; ÂèØ‰ª•ÁúãÂà∞Ëøô‰∏â‰∏™Á±ªÂûãÁöÑÁà∂Â≠êtraitÂÖ≥Á≥ª. Âú®call_twiceËøô‰∏™ÂáΩÊï∞ÂÜÖ, closureÂÖ∂ÂÆû‰ºöË¢´Êâ©Â±ïÊàê: closure.call(), ‰ΩÜÊòØÁªôÂÆöÁöÑfÂè™ÂÖÅËÆ∏closure.call_once(), Êó†Ê≥ïÂú®ÁºñËØëÊó∂ÊúüÊâ©Â±ïËøô‰∏™generic, ÊâÄ‰ª•Êä•Èîô. FnOnceÁöÑÂèÇÊï∞ÊòØself, ÊâÄ‰ª•Ë∞ÉÁî®call_onceÂêé, Ëøô‰∏™Èó≠ÂåÖ‰πüÂ∞±Áî®Â∞ΩÈîÄÊØÅ‰∫Ü(used up). Ë¶ÅÈÅøÂÖçËøô‰∏™ÈóÆÈ¢òÁöÑËØùÂèØ‰ª•Êîπ‰∏∫ÊçïËé∑ÂèòÈáèÁöÑÂºïÁî®(Ëøô‰πàÊîπÂêéÂ∞±Ë¶ÅÊ≥®ÊÑè‰øùËØÅÂºïÁî®ÂèòÈáèÁöÑÁîüÂëΩÂë®Êúü‰∫Ü): 123456let dict = produce_dict();let debug_dum_dict = || &#123; for (key, value) in &amp;dict &#123; // does not use up dict println!(&quot;&#123;:?&#125; - &#123;:?&#125;&quot;, key, value); &#125;&#125;; FnMutÁöÑÂèÇÊï∞ÊòØ&amp;mut self, ÊâÄ‰ª•ÂÖÅËÆ∏‰ª•mut referenceÁöÑÂΩ¢ÂºèÊçïËé∑Âπ∂‰øÆÊîπÂèòÈáè. Êàê‰∏∫FnMutÊúâ‰∏§‰∏™ÂøÖË¶ÅÊù°‰ª∂: mut access a value doesn‚Äôt drop any value CallbackÊàë‰ª¨ÈÄöÂ∏∏‰ºöÊääÈó≠ÂåÖÂÅö‰∏∫ÂõûË∞É‰øùÂ≠òËµ∑Êù•, Á≠âÂà∞Ëß¶ÂèëÁöÑÊó∂ÂÄôË∞ÉÁî®, ÊØîÂ¶Ç: 12345678910111213141516171819struct BasicRouter&lt;C&gt; where C: Fn(&amp;Request) -&gt; Response &#123; routes: HashMap&lt;String, C&gt;&#125;impl&lt;C&gt; BasicRouter&lt;C&gt; where C: Fn(&amp;Request) -&gt; Response &#123; /// Create an empty router. fn new() -&gt; BasicRouter&lt;C&gt; &#123; BasicRouter &#123; routes: HashMap::new() &#125; &#125; fn add_route(&amp;mut self, url: &amp;str, callback: C) &#123; self.routes.insert(url.to_string(), callback); &#125;&#125;let mut router = BasicRouter::new();router.add_route(&quot;/&quot;, |_| get_form_response());// mismatched type// note: no two closures, even if identical, have the same type ËøôÈáåÊä•Èîô, Âõ†‰∏∫Ê≤°ÊúâÊØè‰∏™Èó≠ÂåÖÈÉΩÊúâËá™Â∑±ÂîØ‰∏ÄÁöÑÁ±ªÂûã, ÊâÄ‰ª•Ëøô‰∏™HashMapÊó†Ê≥ïÊâ©Â±ï. Ëß£ÂÜ≥ÊñπÊ≥ï, Áî®BoxÂéªÂ∞ÅË£Ö‰∏ÄÊ¨°, ‰ΩøBox&lt;Fn(&amp;Request)&gt;Êàê‰∏∫‰∏Ä‰∏™ÊåáÂêëÂ†Ü‰∏äÁöÑÈó≠ÂåÖÁöÑÊåáÈíà, ‰πüÂ∞±ÊòØÂÖ∂ÂÆÉËØ≠Ë®Ä‰∏≠Â∏∏ËØ¥ÁöÑÂõûË∞É. 123456789101112131415161718type BoxedCallback = Box&lt;Fn(&amp;Request) -&gt; Response&gt;;struct BasicRouter &#123; routes: HashMap&lt;String, BoxedCallback&gt;&#125;impl BasicRouter &#123; /// Create an empty router. fn new() &#123; BasicRouter &#123; routes: HashMap::new() &#125; &#125; fn add_route&lt;C&gt;(&amp;mut self, url: &amp;str, callback: C) where C: Fn(&amp;Request) -&gt; Response + &#x27;static &#123; self.routes.insert(url.to_string(), callback); &#125;&#125; ËøôÈáåÂä†&#39;staticÊòØ‰∏∫‰∫Ü‰øùËØÅÈó≠ÂåÖBorrowÁöÑÂèòÈáèÂºïÁî®Âú®Á¶ªÂºÄscopeÂêé‰ªçÁÑ∂ÂÆâÂÖ®.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Closure","slug":"Closure","permalink":"https://unpluggedcoder.me/tags/Closure/"},{"name":"Fn","slug":"Fn","permalink":"https://unpluggedcoder.me/tags/Fn/"},{"name":"FnMut","slug":"FnMut","permalink":"https://unpluggedcoder.me/tags/FnMut/"},{"name":"FnOnce","slug":"FnOnce","permalink":"https://unpluggedcoder.me/tags/FnOnce/"},{"name":"Callback","slug":"Callback","permalink":"https://unpluggedcoder.me/tags/Callback/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãUtility Traits","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãUtility Traits","date":"2019-09-01T10:58:30.000Z","updated":"2022-09-15T15:51:05.350Z","comments":true,"path":"2019/09/01/RustÂÖ•Èó®Â§±Ë¥•‰πãUtility Traits/","link":"","permalink":"https://unpluggedcoder.me/2019/09/01/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BUtility%20Traits/","excerpt":"","text":"Drop Ëá™ÂÆö‰πâdropÊñπÊ≥ïÂú®ÈªòËÆ§ÈîÄÊØÅÂâçË∞ÉÁî®ÊâßË°å Â¶ÇÊûúÂÆûÁé∞‰∫ÜDrop Trait, Âàô‰∏çËÉΩÂÆûÁé∞Copy Trait. Â¶ÇÊûúÂÆûÁé∞‰∫ÜCopy Trait, ÂàôÊÑèÂë≥Ëøô‰∏™Á±ªÂûãÂèØ‰ª•ÈÄöËøábyte-for-byteÂ§çÂà∂Ëé∑Âæó‰∏Ä‰ªΩÁã¨Á´ãÁöÑÊï∞ÊçÆÊã∑Ë¥ù, ÈÇ£‰πàdrop‰∏§‰ªΩÁõ∏ÂêåÁöÑÊï∞ÊçÆÈÄöÂ∏∏ÊòØ‰∏Ä‰∏™ÈîôËØØ. stdÊúâ‰∏Ä‰∏™ÂÖ®Â±ÄÁöÑdropÊñπÊ≥ï, ÊØîËæÉfancy: ÈÄöËøáÂèÇÊï∞Ëé∑ÂæóÊâÄÊúâÊùÉ, ÁÑ∂ÂêéÁõ¥Êé•ÊòØ‰∏™Á©∫ÂáΩÊï∞, ÂáΩÊï∞ËøîÂõûÂ∞±ÈáäÊîæ‰∫ÜÂÆûÂèÇÁöÑÂèòÈáè. 1fn drop&lt;T&gt;(_x: T) &#123; &#125; Sized Rust‰∏çËÉΩÂú®ÂèòÈáèÈáå‰øùÂ≠òunsizedÁöÑÂÄº, ‰πü‰∏çËÉΩÊääunsizeÁöÑÂÄº‰Ωú‰∏∫ÂèÇÊï∞. ÊâÄÊúâÂõ∫ÂÆöÂ§ßÂ∞èÁöÑÁ±ªÂûãÈÉΩÂÆûÁé∞Èáåstd::marker::Sizedtrait, Ëøô‰∏™traitÊ≤°Êúâ‰ªª‰ΩïÊñπÊ≥ïÂíåËÅîÂêàÁ±ªÂûã(associated type) ‰∏çËÉΩÂÆûÁé∞Ëá™ÂÆö‰πâÁöÑSized trait. Sized traitÂè™ËÉΩÁî®‰∫éÁªëÂÆöÂà∞Á±ªÂûãÂèÇÊï∞, ‰πüÂ∞±ÊòØÁî®‰∫éÂèÇÊï∞ÁöÑÁ±ªÂûãÂ£∞Êòé(ÂèäÊ£ÄÊü•), ‰æãÂ¶Ç T: Sized‰∏çËÉΩÁî®‰∫éÂÖ∂ÂÆÉÁî®ÈÄî, ËøôÁßçtrait Âè´ marker trait ?SizedÂè´ questionably sized, ÂÖÅËÆ∏Âõ∫ÂÆöÂ§ßÂ∞è, ‰πüÂÖÅËÆ∏ÈùûÂõ∫ÂÆöÂ§ßÂ∞èÁ±ªÂûã. structÁöÑÊúÄÂêé‰∏Ä‰∏™Â≠óÊÆµÂÖÅËÆ∏ÊòØ?SizedÁ±ªÂûã, ‰ΩÜÂ¶ÇÊûúËøôÊ†∑, structÊú¨Ë∫´Â∞±Âèò‰∏∫‰∫Üunsized. ‰ΩÜÂ¶ÇÊûúÂÜôÊàêÊ≥õÂûã, Âπ∂‰º†ÂÖ•‰∏Ä‰∏™SizedÁ±ªÂûã, ÈÇ£‰πàËøô‰∏™Á±ªÂûãÁöÑstruct‰ªçÁÑ∂ÊòØSized. Â§ßÂ∞èÂèñÂÜ≥‰∫éÊ≥õÂûãÁöÑÂèÇÊï∞Á±ªÂûã: 1234567891011121314struct RcBox&lt;T: ?Sized&gt; &#123; rec_count: usize, value: T,&#125;// Sized typelet boxed_lunch: RcBox&lt;String&gt; = RcBox &#123; ref_count: 1, value: &quot;lunch&quot;.to_string()&#125;use std::fmt::Display;// UnSized typelet boxed_displayable: &amp;RcBox&lt;Display&gt; = &amp;boxed_lunch; Clone cloneÊñπÊ≥ïÂøÖÈ°ªËøîÂõûÂíåselfÁã¨Á´ãÊó†ÂÖ≥ÁöÑ‰∏Ä‰ªΩÊã∑Ë¥ù. ClonetraitÊòØSizedÁöÑsub-trait, ÊâÄ‰ª•SelfÁ±ªÂûãÂøÖÈ°ªÊòØSized 123456trait Clone: Sized &#123; fn clone(&amp;self) -&gt; Self; fn clone_from(&amp;mut self, source: &amp;Self) &#123; *self = source.clone() &#125;&#125; ÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãcloneÁöÑÊàêÊú¨ÊØîËæÉÈ´ò, ‰ΩÜÊòØÂØπ‰∫éRc&lt;T&gt;ÂíåArc&lt;T&gt;ËøôÁ±ªÁöÑÁ±ªÂûã, RustÁöÑÂØπÂÆÉ‰ª¨ÁöÑcloneÂè™ÊòØÁÆÄÂçïÁöÑÂ¢ûÂä†ËÆ°Êï∞. ÈÄöÂ∏∏Â∞ΩÂèØËÉΩ‰ΩøÁî®clone_fromÊù•ÂáèÂ∞ëcloneÂºÄÈîÄ, Ëøô‰ºöÂÖÅËÆ∏‰∏Ä‰∫õ‰ºòÂåñ. ‰æãÂ¶Ç, StringÁöÑclone, Ë¢´ËµãÂÄºÁöÑStringÂ¶ÇÊûúcapacityÂ§üÂ§ß, ÂèØ‰ª•‰∏çÈúÄË¶ÅÈáäÊîæÂÜÖÂ≠ò, Áõ¥Êé•ÊääÊ∫êÁöÑÂÜÖÂÆπÊã∑Ë¥ùËøáÊù•. Â¶ÇÊûúÊâÄÊúâÁöÑÂ≠óÊÆµÈÉΩÂÆûÁé∞‰∫ÜClone, ÈÇ£‰πàstructÂèØ‰ª•Âä†‰∏äÂ±ûÊÄß: #[derive(Clone)]Ëá™Âä®ÂÆûÁé∞Clone trait cloneÊñπÊ≥ï‰∏çËÉΩÂ§±Ë¥•(infallible), ÂØπ‰∫éstd::fs::FileËøôÊ†∑ÁöÑÁ±ªÂûã, Êúâtry_cloneÊñπÊ≥ï, ËøîÂõûstd::io::Result&lt;File&gt; Copy ‰πãÂâçÊñáÁ´†Êúâ‰ªãÁªçËøá, Â¶ÇÊûúÊï∞ÊçÆÁ±ªÂûãÊåÅÊúâ‰∏Ä‰∫õÈúÄË¶ÅÈîÄÊØÅÁöÑËµÑÊ∫ê(Êñá‰ª∂Âè•ÊüÑ„ÄÅÂ†Ü‰∏äÊï∞ÊçÆÁ≠â), Âàô‰∏çÂÖÅËÆ∏ÂÆûÁé∞Copy trait. 1trait Copy: Clone &#123; &#125; RustÂØπ‰∫éÂÆûÁé∞‰∫ÜCopy traitÁöÑÁ±ªÂûãËøõË°åËµãÂÄº, ‰∏ç‰ºöMoveÂéüÂèòÈáèÁöÑÊï∞ÊçÆ(ÊâÄÊúâÊùÉ), ËÄåÊòØÂ∞ÜÂéüÂØπË±°ÂÅöÊµÖÊã∑Ë¥ù‰∏Ä‰ªΩÁªôÁõÆÊ†áÂèòÈáè. ‰æãÂ¶ÇÁÆÄÂçïÁöÑÊï∞ÊçÆÁ±ªÂûã i32Á≠â. AsRef&lt;T&gt; &amp; Borrow&lt;T&gt; AsRef&lt;T&gt;Âíå Borrow&lt;T‰∏ÄÊ†∑, ËøîÂõûÁöÑÈÉΩÊòØÂºïÁî®, ‰ΩÜÊòØÊúâ‰∏Ä‰∏™Âå∫Âà´: Borrow‰øùËØÅÂØπÂêå‰∏ÄÊï∞ÊçÆÁ±ªÂûãBorrowÂá∫‰∏çÂêåÁöÑTÈÉΩÊúâÁõ∏ÂêåÂìàÂ∏åÂÄº, ËÄåAsRefÊ≤°ÊúâËøôÁ±ª‰øùËØÅ, ‰πüÂ∞±ÊòØËØ¥ÂØπ‰∫é‰∏Ä‰∏™String, ‰∏ãÈù¢‰∏â‰∏™AsRefËøîÂõûÁöÑÊòØ‰∏â‰∏™ÂìàÂ∏åÂÄº‰∏çÂêåÁöÑÂºïÁî®: 1234let s = String::from(&quot;/usr/bin/bash&quot;);let ref1: &amp;Path = s.as_ref();let ref2: &amp;[u8] = s.as_ref();let ref3: &amp;str = s.as_ref(); From and Into FromÂíå IntoÈÉΩ‰ºöËé∑ÂèñÂéüÂèòÈáèÁöÑÊâÄÊúâÊùÉ, ËΩ¨Êç¢ÂêéËøîÂõûÁªôË∞ÉÁî®ËÄÖ. ‰∫åËÄÖÊòØÁõ∏ÂèçÁöÑËøáÁ®ã, ‰∏î‰πüÊòØSizedÁöÑsub-trait: 1234567trait Into&lt;T&gt;: Sized &#123; fn into(self) -&gt; T;&#125;trait From&lt;T&gt;: Sized &#123; fn from(T) -&gt; Self; // ÈùôÊÄÅÊñπÊ≥ï&#125; Â¶ÇÊûúËá™ÂÆö‰πâÁ±ªÂûãÁöÑÊûÑÈÄ†Âè™Êúâ‰∏Ä‰∏™ÂèÇÊï∞, ÈÇ£‰πàÂèØ‰ª•ÂÜô‰∏Ä‰∏™fromÊñπÊ≥ïÂÆûÁé∞From, ÁÑ∂ÂêéRust‰ºöËá™Âä®Â∏Æ‰Ω†ÂÆûÁé∞‰∏Ä‰∏™Into trait. Ëøô‰∏™TraitÊúâ‰∏™Â•ΩÂ§ÑÂèØ‰ª•ËÆøÈóÆÂà∞‰∏Ä‰∫õÁ±ªÂûãÁöÑÂÜÖÈÉ®Êï∞ÊçÆ, ËÄåÂèà‰∏çÁ†¥ÂùèÊï∞ÊçÆÂéüÊúâÂÜÖÂÆπ. ‰æãÂ¶Ç: StringÁ±ªÂûã‰∏çÂÖÅËÆ∏Áõ¥Êé•‰øÆÊîπÂÜÖÈÉ®ÁöÑUTF-8Â≠óËäÇ, ‰ΩÜÊòØÈÄöËøáInto&lt;Vec&lt;u8&gt;&gt;, Êàë‰ª¨ÂèØ‰ª•ÂØπStringÊï∞ÊçÆËøõË°åÂÖ∂ÂÆÉÊìç‰Ωú, Â¶ÇÊûúÂéãÁº©Á≠âÁ≠â. ToOwned Â¶ÇÊûúÊãøÂà∞‰∏Ä‰∏™Á±ªÂûãÂºïÁî®(ÂÅáËÆæËøô‰∏™Á±ªÂûãÂÆûÁé∞‰∫ÜClone Trait), ÊÉ≥ÂØπÂÆÉËøõË°åClone, ËÄåÂú®ÂºïÁî®Á±ªÂûã‰∏äÊó†Ê≥ïË∞ÉÁî®clone, ‰æãÂ¶Ç &amp;str‰∏äÊó†Ê≥ïË∞ÉÁî®clone, Âõ†‰∏∫ËøîÂõûÁöÑstr‰∏çÊòØSizedÁ±ªÂûã. Âõ†Ê≠§ÈúÄË¶ÅÊúâ‰∏™ÊñπÊ≥ïËé∑ËΩ¨Êç¢Âà∞ÂéüÁ±ªÂûãÊï∞ÊçÆÊã∑Ë¥ù, ‰ªéËÄåËé∑ÂèñÂà∞ÊâÄÊúâÊùÉ(Ê≥®ÊÑè‚ö†Ô∏è, Ë¶ÅÊ±ÇÂéüÁ±ªÂûãÂÆûÁé∞Clone Trait, ËøîÂõûÁöÑÊòØcloneÂá∫Êù•ÁöÑÊï∞ÊçÆ, ÊòØÂéüÊï∞ÊçÆÁöÑ‰∏Ä‰ªΩÊã∑Ë¥ù, ÂíåÂéüÊï∞ÊçÆÊ≤°ÊúâÂçäÊØõÈí±ÂÖ≥Á≥ª‰∫Ü). 1234trait ToOwned &#123; type Owned: Borrow&lt;Self&gt;; fn to_owned(&amp;self) -&gt; Self::Owned;&#125; ËøîÂõûÁöÑÊòØÂÆûÁé∞‰∫ÜBorrow&lt;Self&gt;ÁöÑÁ±ªÂûã. ÂèØ‰ª•Ëøô‰πàÁêÜËß£, ÂèØ‰ª•‰ªéÂÆûÁé∞‰∫ÜBorrow&lt;Self&gt;ÁöÑÁ±ªÂûã‰∏äborrowÂà∞&amp;Self, ÈÇ£‰πàÂèçËøáÊù•ÂèØ‰ª•‰ªé&amp;self‰∏äËé∑ÂæóÂà∞ÂéüÁ±ªÂûãÊï∞ÊçÆ. ‰æãÂ¶Ç: Vec&lt;T&gt;ÂÆûÁé∞‰∫ÜBorrow&lt;[T]&gt;ÁöÑtrait, ÂèØ‰ª•borrowÂà∞&amp;[T], ÈÇ£‰πàÂèçËøáÊù•ÂèØ‰ª•‰ªé&amp;[T]ÁöÑÂÆû‰æãËé∑ÂèñÂà∞‰∏Ä‰ªΩVec&lt;T&gt;Á±ªÂûãÁöÑÊã∑Ë¥ù. SelfÊòØ[T], OwnedÁ±ªÂûãÊòØVec&lt;T&gt; 12let s: &amp;str = &quot;a&quot;;let ss: String = s.to_owned(); // ss is a new String clone from s(&amp;str) ÈÄöÂ∏∏ÂÆûÁé∞ToOwnedtraitÁöÑÈÉΩÊòØ‰∏Ä‰∫õborrowÂá∫ÁöÑÂºïÁî®Á±ªÂûã, Â¶Çstr, Êàñ[T]. ËÄåÂÆÉÁöÑËÅîÂêàÁ±ªÂûãOwnedÈÄöÂ∏∏ÊòØÂèØ‰ª•ËΩ¨Êç¢‰∏∫ÂÆÉÁöÑÁ±ªÂûã, Â¶ÇString, Vec&lt;T&gt;. Cow ‰∏äÈù¢ÁöÑToOwnedÊòØÁ´ãÂç≥ÊääborrowÊù•ÁöÑÂºïÁî®ËΩ¨Êç¢ÁîüÊàê‰∏Ä‰ªΩOwnedÁöÑÊã∑Ë¥ù. cloneÊòØÊúâÂºÄÈîÄÁöÑ, ÊúâÊó∂Êó†Ê≥ïÁ°ÆÂÆöÊòØË¶ÅÂ§ÑÁêÜÂºïÁî®ËøòÊòØËé∑ÂèñÊâÄÊúâÊùÉ. Âè¶‰∏ÄÊñπÈù¢, CowÂÆûÈôÖÂ∞±ÊòØ‰∏Ä‰∏™Êô∫ËÉΩÊåáÈíà, ÂÆûÁé∞‰∫ÜÂÜôÊó∂Â§çÂà∂(C*opy-On-Write)*ÁöÑÂäüËÉΩ. 123456enum Cow&lt;&#x27;a, B: ?Sized + &#x27;a&gt;where B: ToOwned&#123; Borrow(&amp;&#x27;a B), Owned(&lt;B as ToOwned&gt;::Owned),&#125; CowÊúâ‰∏™fromÊñπÊ≥ï, Â¶ÇÊûúCowÊãøÂà∞ÊòØ‰∏Ä‰∏™ÊôÆÈÄöÁöÑÂÖ±‰∫´ÂºïÁî®Á±ªÂûã, ÈÇ£‰πàCowÊûö‰∏æÂΩìÂâçÂÄºÂ∞±ÊòØBorrow. ‰æãÂ¶Ç, ‰º†ÂÖ•&amp;[T], ÈÇ£ËæπB Â∞±ÊòØ[T]. Cow‰∏ç‰ºöËá™Âä®ËΩ¨‰∏∫OwnedÁ±ªÂûã. ‰πüÂ∞±ÊòØ‰∏ç‰ºöÊääÂºïÁî®B (strÊàñ[T]‰πãÁ±ª)Ëá™Âä®Â§çÂà∂Âá∫‰∏Ä‰ªΩ. Èô§ÈùûÊòæÂºèË∞ÉÁî®ÂÆÉÁöÑ‰∏§‰∏™ÊñπÊ≥ï: to_mut(): ‰ºöË∞ÉÁî®B ÁöÑto_ownedÊñπÊ≥ï, ÁîüÊàê‰∏Ä‰ªΩÊã∑Ë¥ù, Êûö‰∏æÂÄºËΩ¨‰∏∫Owned. into_owned(): ÊèêÂèñÂá∫‰∏Ä‰ªΩOwnedÊï∞ÊçÆ, Â¶ÇÊûúÂΩìÂâçÊòØBorrow‰πü‰ºöË∞ÉÁî®to_ownedËΩ¨Êç¢. ÊèêÂèñÊÑèÂë≥ÁùÄËøô‰∏™CowÂèòÈáèË∞ÉÁî®Âêé‰∏çÂÜçÂèØÁî®. ‰∏ãÈù¢ÂÆòÊñπÁöÑ‰æãÂ≠êÂæàÂ•ΩËß£ÈáäËøô‰∏ÄÁÇπ: 12345678910111213141516171819202122232425use std::borrow::Cow;fn abs_all(input: &amp;mut Cow&lt;i32&gt;) &#123; for i in 0..input.len() &#123; let v = input[i]; if v &lt; 0 &#123; // Clone into vector if not alread owned. input.to_mut()[i] = -v; &#125; &#125;&#125;// No clone occurs because `input` doesn&#x27;t need to be mutated.let slice = [0, 1, 2];let mut input = Cow::from(&amp;slice[..]);abs_all(&amp;mut input);// Clone occurs because `input` needs to be mutated.let slice = [-1, 0, 1];let mut input = Cow::from(&amp;slice[..]);abs_all(&amp;mut input);// No clone occurs because `input` is already owned.let mut input = Cow::from(vec![-1, 0, 1]);abs_all(&amp;mut input);","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Trait","slug":"Trait","permalink":"https://unpluggedcoder.me/tags/Trait/"},{"name":"Copy","slug":"Copy","permalink":"https://unpluggedcoder.me/tags/Copy/"},{"name":"Clone","slug":"Clone","permalink":"https://unpluggedcoder.me/tags/Clone/"},{"name":"Drop","slug":"Drop","permalink":"https://unpluggedcoder.me/tags/Drop/"},{"name":"Sized","slug":"Sized","permalink":"https://unpluggedcoder.me/tags/Sized/"},{"name":"AsRef","slug":"AsRef","permalink":"https://unpluggedcoder.me/tags/AsRef/"},{"name":"Borrow","slug":"Borrow","permalink":"https://unpluggedcoder.me/tags/Borrow/"},{"name":"ToOwned","slug":"ToOwned","permalink":"https://unpluggedcoder.me/tags/ToOwned/"},{"name":"Cow","slug":"Cow","permalink":"https://unpluggedcoder.me/tags/Cow/"},{"name":"From","slug":"From","permalink":"https://unpluggedcoder.me/tags/From/"},{"name":"Into","slug":"Into","permalink":"https://unpluggedcoder.me/tags/Into/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãTraits&Generics","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãTraits&Generics","date":"2019-08-30T17:17:30.000Z","updated":"2022-09-15T15:51:05.349Z","comments":true,"path":"2019/08/31/RustÂÖ•Èó®Â§±Ë¥•‰πãTraits&Generics/","link":"","permalink":"https://unpluggedcoder.me/2019/08/31/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BTraits&Generics/","excerpt":"","text":"Trait TraitÊúâscopeÁöÑÊ¶ÇÂøµ, ÂøÖÈ°ªÂ£∞ÊòéÂèØËßÅÂêéÊâçËÉΩ‰ΩøÁî®. ËøôÊ†∑ÂèØ‰ª•ÈÅøÂÖçÂêçÁß∞ÂÜ≤Á™Å, ÂêåÊó∂‰πüÂèØ‰ª•ÁÅµÊ¥ªÂú∞Ëá™ÂÆö‰πâÂÆûÁé∞Trait Á±ª‰ººC&#x2F;C++ÁöÑËôöÂü∫Á±ªÊé•Âè£ÂÆö‰πâ, ‰ΩÜÊòØÊúÄÊòéÊòæÁöÑÂ∑ÆÂà´ÊòØ: C&#x2F;C++ÁöÑËôöÂü∫Á±ªÁªßÊâø‰ºöË¶ÅÊ±ÇÂú®Â≠êÁ±ªÊØè‰∏™ÂÆû‰æãÁöÑÂÜÖÂ≠òÊ®°Âûã‰∏≠ÁîüÊàêËôöÂáΩÊï∞Ë°®, Âç†Áî®ÂØπË±°ÂÜÖÂ≠ò. ËÄå‰∏∫‰∏Ä‰∏™structÂÆûÁé∞‰∏Ä‰∏™TraitÂØπstructÂÆû‰æãÊú¨Ë∫´Ê≤°Êúâ‰ªª‰ΩïÂÜÖÂ≠òÂºÄÈîÄ. TraitÊú¨Ë∫´Âπ∂Ê≤°ÊúâÂõ∫ÂÆöÁöÑÂ§ßÂ∞è(Âè™ÊúâÂºïÁî®Êüê‰∏™ÂÆûÁé∞ËØ•TraitÁ±ªÂûãÁöÑÂÆû‰æãÂêéÊâçÊúâÂç†Áî®Â§ßÂ∞è‰∏ÄËØ¥), Âõ†Ê≠§‰∏çËÉΩÁõ¥Êé•Â£∞ÊòéÂíå‰ΩøÁî®TraitÁ±ªÂûãÁöÑÂèòÈáè. ÂØπÊüê‰∏™ÂÆûÁé∞ËØ•TraitÁ±ªÂûãÁöÑÂÆû‰æãÁöÑÊúâÊïàÂºïÁî®Áß∞‰∏∫Trait Object 12345use std::io::Write;let mut buf: Vec&lt;u8&gt; = vec![];let writter: Wirte = buf; // error: `Write` does not have a constant sizelet writter: &amp;mut Write = &amp;mut buf; // Ok, writter is a Trait Object Trait ObjectÂÆûÈôÖÊòØ‰∏Ä‰∏™fat pointer, Âç†Áî®‰∏§‰∏™Êú∫Âô®Â≠óÂ≠óËäÇ, ‰∏Ä‰∏™ÊåáÂêëÂÆûÈôÖÁöÑÂÆû‰æãÂØπË±°, ‰∏Ä‰∏™ÊåáÂêëËôöÂü∫Ë°®vtable. Ê≥®ÊÑè, Ëøô‰∏™vtableÊú¨Ë∫´‰∏çÂ±û‰∫éÂÆû‰æã, ËÄåÊòØÂΩì‰Ωú‰∏∫‰∏Ä‰∏™Trait ObjectËøõË°åÂºïÁî®Êó∂ÈôÑÂä†ÁªôËøô‰∏™ÂºïÁî®ÁöÑfat pointer, ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: ÈªòËÆ§ÊñπÊ≥ï(Default method), ÂèØ‰ª•Âú®traitÁöÑÂ£∞Êòé‰∏≠ÂÆö‰πâÈªòËÆ§ÊñπÊ≥ï. 123456789trait Write &#123; fn write(&amp;mut self, buf: &amp;[u8]) -&gt; Result&lt;usize&gt;; fn write_all(&amp;mut self, buf: &amp;[u8]) -&gt; Result&lt;()&gt; &#123; let mut bytes_written = 0; while bytes_written &lt; buf.len() &#123; bytes_written += self.write(&amp;buf[bytes_written...])?; &#125; Ok(())&#125; Êâ©Â±ïtrait(extension trait), ÂèØ‰ª•‰∏∫ÂÖ∂ÂÆÉtraitÁ±ªÂûãÊâ©Â±ïÂá∫Ëá™ÂÆö‰πâtraitÁöÑÊé•Âè£. 12345678910trait WriteHtml &#123; fn write_html(&amp;mut self, html: &amp;HtmlDocument) -&gt; io::Result&lt;()&gt;;&#125;// For every type W that implements Write, here&#x27;s an implementation for WriteHtml for Wimpl&lt;W: Write&gt; WriteHtml for W &#123; fn write_html(&amp;mut self, html: &amp;HtmlDocument) -&gt; io::Result&lt;()&gt; &#123; ... &#125;&#125; SelfÂÖ≥ÈîÆÂ≠ó(not self), Áî®Êù•‰Ωú‰∏∫Âà´Âêç, Â£∞Êòé‰∏∫ÂÆûÁé∞ËØ•TraitÁöÑÂÖ∑‰ΩìÁ±ªÂûã. 123pub trait Clone &#123; fn clone(&amp;self) -&gt; Self;&#125; Subtrait, Á±ª‰ººÊé•Âè£ÁªßÊâø. ÂèØ‰ª•Ëøô‰πàÁêÜËß£: Âá°ÊòØÂÆûÁé∞‰∫ÜSubtrait(Creature)ÁöÑÁ±ªÂûã, ‰πüÂøÖÈ°ªÂÆûÁé∞Áà∂Trait(Visible)ÁöÑÊâÄÊúâÊñπÊ≥ï., ÊúâÁöÑÂú∞ÊñπÂèàÂè´Extend trait. 1234// Every type that implements Creature must also implement the Visible trait.trait Creature: Visible &#123; fn ...;&#125; Static Methods, Á±ª‰ººÊé•Âè£ÁöÑÈùôÊÄÅÊñπÊ≥ï, Ê≤°ÊúâselfÂèÇÊï∞, ÈÄöÂ∏∏Áî®‰ΩúÂ∑•ÂéÇÊ®°Âºè. 1234trait StringSet &#123; fn new() -&gt; Self; fn from_slice(strings: &amp;[&amp;str]) -&gt; Self;&#125; Ë∞ÉÁî®ÊñπÂºèÊòØÂÆûÁé∞ËØ•traitÁöÑÁ±ªÂûãÂêçÁß∞Âä†‰∏ä::, Â¶ÇÊûúÊòØÊ≥õÂûã(‰∏ãÈù¢‰ºö‰ªãÁªç), ÂàôÁî®Ê≥õÂûãÂèòÈáè. 1234567// SortedStringSet impl the StringSet traitlet set1 = SortedStringSet::new();fn func&lt;S: StringSet&gt;() -&gt; S &#123; let mut set2 = S::new(); ...&#125; Generic Ê≥õÂûãGenericÁî®&lt;&gt;Êù•Ë°®Á§∫, ÈÄöÂ∏∏Áî®ÂÖ®Â§ßÂÜôÂèòÈáèË°®Á§∫Ê≥õÂûãÂèÇÊï∞. 12fn hello(out: &amp;mut Write)&#123;&#125;fn hello&lt;W: Write&gt;(out: &amp;mut W)&#123;&#125; ÁºñËØëÊó∂Rust‰ºö‰∏∫‰ΩøÁî®Ê≥õÂûãÁöÑÊØè‰∏™Á±ªÂûãÁîüÊàê‰∏ÄÂ•óÊú∫Âô®‰ª£Á†Å, Ê≤°ÊúâËøêË°åÊó∂ÂºÄÈîÄ, ‰ΩÜÊòØ‰ºöÁîüÊàêÈ¢ùÂ§ñÁöÑÊú∫Âô®Á†Å, Â¢ûÂä†‰∫åËøõÂà∂Â§ßÂ∞è. ÂèØ‰ª•‰ΩøÁî®Ê≥õÂûãÁöÑÂú∫ÊôØ: ÂáΩÊï∞ enum„ÄÅstructÂèäÂÖ∂method Á±ªÂûãÂà´Âêç(type aliases): type PancakeResult&lt;T&gt; = Result&lt;T, PancakeError&gt;; ÂáΩÊï∞ÁöÑwhereËØ≠Âè• Difference between Trait &amp; Generic GenericÊ≤°ÊúâËøêË°åÊó∂ÂºÄÈîÄ, ÈÄüÂ∫¶Êõ¥Âø´, ËÄåTraitÈúÄË¶ÅËøêË°åÊó∂ÊâçËÉΩÁü•ÈÅìÂÆûÈôÖÁ±ªÂûã(‰πüÂ∞±ÊòØÊâßË°åÊó∂Ê†πÊçÆTrait ObjectÊù•Êü•ÊâævtableÊñπÊ≥ï). Â¶ÇÊûúÈúÄË¶ÅÂ§ÑÁêÜÂ§ßÈáèÂêÑÁßç‰∏çÂêåÁ±ªÂûãÂØπË±°ÁöÑÁâπÊÄß‰∏îÂØπ‰∫åËøõÂà∂Â§ßÂ∞èÊúâË¶ÅÊ±Ç, ÂèØ‰ª•Áî®Trait. Âê¶ÂàôÂª∫ËÆÆ‰ΩøÁî®Generic. Not every trait can support trait objects. Âπ∂‰∏çÊòØÊâÄÊúâÁöÑTraitÈÉΩÊîØÊåÅTrait ObjectÊñπÂºè‰ΩøÁî®. ÂåÖÂê´ÈùôÊÄÅÊñπÊ≥ïÁöÑTrait, Áî±‰∫éÊ≤°ÊúâselfÂèÇÊï∞, Âú®Ê≥õÂûãÂáΩÊï∞‰∏≠ÂÖ∂ÈùôÊÄÅÊñπÊ≥ï‰∏çËÉΩÈÄöËøáTrait ObjectÊù•Ë∞ÉÁî®. ‰æãÂ¶Ç‰∏ãÈù¢(‰ªçÁÑ∂‰ª•‰∏äÈù¢ÈùôÊÄÅÊñπÊ≥ï‰ª£Á†Å‰∏∫‰æã): 1234567891011// Return the set of words in `document` that aren&#x27;t in `wordlist`.fn unknown_words&lt;S: StringSet&gt;(document: &amp;Vec&lt;String&gt;, wordlist: &amp;S) -&gt; S &#123; // ‰∏çËÉΩÈÄöËøáTrait Object wordlist Ë∞ÉÁî®new, Âè™ËÉΩÈÄöËøáÊ≥õÂûãÂèòÈáèS:: let mut unknowns = S::new(); for word in document &#123; if !wordlist.contains(word) &#123; unknowns.add(word); &#125; &#125; unknowns&#125;","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Trait","slug":"Trait","permalink":"https://unpluggedcoder.me/tags/Trait/"},{"name":"Generics","slug":"Generics","permalink":"https://unpluggedcoder.me/tags/Generics/"},{"name":"ÁâπË¥®","slug":"ÁâπË¥®","permalink":"https://unpluggedcoder.me/tags/%E7%89%B9%E8%B4%A8/"},{"name":"Ê≥õÂûã","slug":"Ê≥õÂûã","permalink":"https://unpluggedcoder.me/tags/%E6%B3%9B%E5%9E%8B/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãEnum&Patterns","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãEnum&Patterns","date":"2019-08-28T16:19:30.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/08/29/RustÂÖ•Èó®Â§±Ë¥•‰πãEnum&Patterns/","link":"","permalink":"https://unpluggedcoder.me/2019/08/29/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BEnum&Patterns/","excerpt":"","text":"Enum ÊàêÂëòÂèØ‰ª•ÊòØ‰ªªÊÑèÊï∞ÊçÆÁ±ªÂûã(with data or without data): 1234567891011enum Pet &#123; // without data Orca, // Starting at 0 by default Giraffe&#125;#[derive(Copy, Clone, Debug, PartialEq)]enum RoughTime &#123; // with data InThePast(TimeUnit, u32), JustNow, InTheFuture(TimeUnit, u32)&#125; ÂèØ‰ª•ËåÉÂûã, ÊúÄÂ∏∏ËßÅÁöÑÂ∞±ÊòØOption&lt;T&gt;ÂíåResult&lt;T, E&gt;: 123456789enum Option&lt;T&gt; &#123; None, Some(T)&#125;enum Result&lt;T, E&gt; &#123; Ok(T), Err(E)&#125; ÊâÄÊúâÊàêÂëòÂ§ßÂ∞èÂøÖÈ°ªÂõ∫ÂÆö, ÂèØ‰ª•Âú®ÁºñËØëÊúüÁ°ÆÂÆö. Â¶ÇÊûúÂä®ÊÄÅÂ§ßÂ∞è, ÈúÄË¶ÅÁî®Box&lt;T&gt;Á≠âÊô∫ËÉΩÊåáÈíàÂ∞ÅË£Ö. ‰∏äÈù¢ÁöÑOption&lt;T&gt;‰∏≠, Â¶ÇÊûúTÊòØBoxÁ≠âÊô∫ËÉΩÊåáÈíàÁ±ªÂûã, ÈÇ£‰πàÊï¥‰∏™Option&lt;T&gt;Â§ßÂ∞èÂèØËÉΩÂ∞±ÊòØ‰∏Ä‰∏™Êú∫Âô®Â≠ó(machine word), 0‰ª£Ë°®None, Èùû0‰ª£Ë°®BoxedÊåáÈíàÂÄº, Ê≤°ÊúâtagÂ≠óÊÆµ(‰∏ãÈù¢ËÆ≤Âà∞). ÂÜÖÂ≠òÂ∏ÉÂ±Ä Rust‰∏∫‰∫ÜÂ∞ÜÊù•ÁöÑ‰ºòÂåñËÄÉËôë, Ê≤°ÊúâÂº∫Âà∂ËßÑÂÆöenumÁöÑÂÜÖÂ≠òÂ∏ÉÂ±Ä, ‰ΩÜÂêå‰∏ÄÁ±ªÂûãÁöÑÊûö‰∏æÂÄºÂ§ßÂ∞è‰∏ÄËá¥. ÈÄöÂ∏∏ÈÉΩ‰∏∫ÊØè‰∏™Êûö‰∏æÂÄºÂàÜÈÖç‰∫ÜÈÄÇÂêàÁöÑsmall intgerÁ±ªÂûãÂ≠òÊîæÂÖ∂Êûö‰∏æ*tag* 12345678910111213141516enum Ordering &#123; Less, Equal, Greater&#125;enum HttpStatus &#123; Ok = 200, NotModified = 304, NotFound = 404, ...&#125;use std::mem::size_of;assert_eq!(size_of::&lt;Ordering&gt;(), 1);assert_eq!(size_of::&lt;HttpStatus&gt;(), 2); // 404 doesn&#x27;t fit in a u8 ÂØπ‰∫éÂåÖÂê´Êï∞ÊçÆÁöÑenum, ÂÜÖÂ≠òÂ∏ÉÂ±ÄÊúâÁÇπÁ±ª‰ººC&#x2F;C++ÁöÑunionÁ±ªÂûã, Èô§‰∫ÜtagÂ≠óÊÆµÂ§ñ‰ºöÁî®ÈÄâÊã©ÂêàÈÄÇÁöÑÂ≠óËäÇÊù•Â≠òÊîæÂèØ‰ª•ÂÆπÁ∫≥ÊâÄÊúâÊï∞ÊçÆÂ§ßÂ∞èÁöÑÂÜÖÂ≠òÂ∏ÉÂ±Ä. ‰æãÂ¶Ç: 12345678enum Json &#123; Null, Boolean(bool), Number(f64), String(String), Array(Vec&lt;Json&gt;), Object(Box&lt;HashMap&lt;String, Json&gt;&gt;)&#125; ÂÆÉÁöÑÂÜÖÂ≠òÂ∏ÉÂ±ÄÈÄöÂ∏∏ÂèØËÉΩÂ¶Ç‰∏ã(‰∏äÈù¢Áü≠Áü≠ÁöÑ8Ë°å‰ª£Á†Å, Â¶ÇÊûúÁî®C&#x2F;C++Êù•ÂÆûÁé∞, Â∞±ÈùûÂ∏∏Â§çÊùÇ‰∫Ü): ![Enum Memory Model](&#x2F;images&#x2F;Screen Shot 2019-08-29 at 00.39.13.png) Patterns Ê®°ÂºèÂåπÈÖçÊ®°ÂºèÂåπÈÖçÈÄöÂ∏∏‰ºöÂíåenumÁ±ªÂûã‰∏ÄËµ∑‰ΩøÁî®, ÊâÄ‰ª•ÊîæÂà∞‰∏ÄËµ∑ËÆ≤. ÂåπÈÖçÊòØ‰ªéÂ∑¶Âà∞Âè≥Ê£ÄÊü•PatternÊòØÂê¶ÂåπÈÖçË°®ËææÂºè. Ë°®ËææÂºèÁîüÊàêÂÄº, PatternÊ∂àË¥πËøô‰∫õÂÄº(Expressions produce values; patterns consume values) refÂíå ref mutÁî®Êù•ÈÅøÂÖçmoveÊàñËÄÖCopyÂåπÈÖçÂà∞ÁöÑÂèòÈáè, ‰ªéËÄåÁî®‰∫ématchÁöÑÂèòÈáèÂú®ÂêéÁª≠ÂèØ‰ª•ÁªßÁª≠‰ΩøÁî®. ‰æãÂ¶Ç: 123456match account &#123; Account &#123;name, language, .. &#125; =&gt; &#123; ui.greet(&amp;name, &amp;language); ui.show_settings(&amp;account); // error: use of moved value `account` &#125;&#125; ËøôÈáåÂåπÈÖçÂà∞ÁöÑÊï∞ÊçÆÂ∑≤ÁªèË¢´moveÂà∞*nameÂíålanguage*‰∏≠, ÂéüÂèòÈáèaccountÂ∑≤Áªè‰∏∫uninitialized, ‰∏çËÉΩÂÜç‰ΩøÁî®, Áî®refÂ∞ÜÂåπÈÖçÂà∞ÁöÑÂèòÈáèËΩ¨‰∏∫ÂºïÁî®. 123456match account &#123; Account &#123; ref name, ref language, .. &#125; =&gt; &#123; ui.greet(name, language); ui.show_settings(&amp;account); // ok &#125;&#125; &amp;Áî®Êù•ÂåπÈÖçÂºïÁî®Á±ªÂûãÁöÑpattern, ËÄåÈùûÂ∞ÜÂåπÈÖçÂà∞ÁöÑÂèòÈáèËΩ¨Êç¢‰∏∫ÂºïÁî®. 123match sphere.center() &#123; // sphere.center() return &amp;Point3d &#123;...&#125; &amp;Point3d &#123; x, y, z &#125; =&gt; ...&#125; ÈÅìÁêÜÂÖ∂ÂÆû‰∏ÄÊ†∑, Ë°®ËææÂºèÂíåPatternÊòØ‰∏§‰∏™Êú¨Ë¥®‰∏äÁõ∏Âèç(natural opposites)ÁöÑËøáÁ®ã.ÊääË°®ËææÂºèÁúãÊàêÊòØÊûÑÈÄ†‰∏Ä‰∏™ÂÄºÁöÑËøáÁ®ã, ËÄåPatternÊòØÂèçËß£‰∏Ä‰∏™ÂÄºÁöÑËøáÁ®ã, Âä†‰∏ä&amp;‰πüÊòØ‰∏ÄÊ†∑. ![Reference Pattern](&#x2F;images&#x2F;Screen Shot 2019-08-29 at 01.11.53.png) Pattern Guard: pattern if condition‚áí Âè™ÊúâÊù°‰ª∂Êª°Ë∂≥, patternÊâçÁÆóÂåπÈÖç var @ pattern: Â∞ÜÂåπÈÖçÁöÑÊï¥‰∏™pattern moveÊàñCopyÂà∞ÂèòÈáèvar‰∏≠, ‰æãÂ¶ÇÊüê‰∫õÂú∫ÊôØ‰∏ãÂèØ‰ª•ÈÅøÂÖçÈáçÂ§çÊûÑÈÄ†ÂèòÈáè. Èô§‰∫Ümatch var &#123;&#125;ËØ≠Âè•ÂèØ‰ª•‰ΩøÁî®patternÂ§ñ, Âè™Êúâ‰ª•‰∏ãÂõõ‰∏™Âú∫ÊôØÂèØ‰ª•‰ΩøÁî®pattern: let pattern = var;Â∞ÜÂèòÈáèvarÊåâÂåπÈÖçÊ®°Âºèunpack fn func(parm: pattern) ‚Üí xxx&#123;&#125;ÊåâÂåπÈÖçÊ®°ÂºèunpackÂáΩÊï∞ÂÆûÂèÇ for pattern in xxxx &#123;&#125;forÂæ™ÁéØ‰∏≠ÊåâÂåπÈÖçÊ®°ÂºèunpackÂÆûÈôÖËø≠‰ª£ÁöÑÊàêÂëò let var = func(|pattern| &#123;closure body&#125;)Âú®Èó≠ÂåÖ‰∏≠ÊåâÊ®°ÂºèunpackÈó≠ÂåÖÁöÑÂèÇÊï∞, ‰æãÂ¶ÇÊúâÊó∂ÊúüÊúõÂèÇÊï∞ÊòØÂºïÁî®ËÄåÈùûÊã∑Ë¥ù. let sum = numbers.fold(0, |a, &amp;num| a+ num); ËøôÂõõ‰∏™Âú∞ÊñπÂíåmatchÁöÑÊ®°ÂºèÂåπÈÖçÊúÄÊ†πÊú¨ÁöÑÂå∫Âà´ÊòØ: matchÊòØ*refutable pattern*, ÂÖÅËÆ∏Âá∫Áé∞Ê®°Âºè‰∏çÂåπÈÖçÁöÑÊÉÖÂÜµ ËÄå‰∏äËø∞ÂõõÁßçÂú∫ÊôØRust‰∏çÂÖÅËÆ∏Âá∫Áé∞‰∏çÂåπÈÖç(irrefutable)ÁöÑÊÉÖÂÜµ, Â±û‰∫é‰∏•Ê†ºÁöÑ‰∏çÂèØÈ©≥Êñ•ÂåπÈÖçÊ®°Âºè. All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote in the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Enum","slug":"Enum","permalink":"https://unpluggedcoder.me/tags/Enum/"},{"name":"Pattern","slug":"Pattern","permalink":"https://unpluggedcoder.me/tags/Pattern/"},{"name":"PatternGuard","slug":"PatternGuard","permalink":"https://unpluggedcoder.me/tags/PatternGuard/"},{"name":"refutable","slug":"refutable","permalink":"https://unpluggedcoder.me/tags/refutable/"},{"name":"irrefutable","slug":"irrefutable","permalink":"https://unpluggedcoder.me/tags/irrefutable/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãStruct","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãStruct","date":"2019-08-27T16:23:30.000Z","updated":"2022-09-15T15:51:05.349Z","comments":true,"path":"2019/08/28/RustÂÖ•Èó®Â§±Ë¥•‰πãStruct/","link":"","permalink":"https://unpluggedcoder.me/2019/08/28/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BStruct/","excerpt":"","text":"Struct Êúâ‰∏âÁßçStruct: Name-Field Structs 1struct Broom &#123; name: String, height: u32 &#125; Tuple-Like Structs 1struct Bounds(usize, usize); Unit-Like Structs 1struct Onesuch; StructÁöÑÊñπÊ≥ïÊúâ‰∏âÁßçselfÂºïÁî®ÊñπÂºè: fn func(self): Ë∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ïÊó∂, ÂéüstructÁöÑÊâÄÊúâÊùÉÂ∑≤ÁªèË¢´ËΩ¨Áßª(move)Âà∞self‰∏≠, ÂéüÂºïÁî®‰∏çÂèØÁî®. fn func(&amp;self): Ë∞ÉÁî®Ëøô‰∏™ÊñπÊ≥ïÊó∂, ÂéüÂºïÁî®‰ªçÁÑ∂Êã•ÊúâÂÆÉÁöÑÊâÄÊúâÊùÉ, ‰ΩÜself‰∏çËÉΩ‰øÆÊîπËá™Ë∫´. fn func(&amp;mut self): Âêå‰∏ä, ‰ΩÜÂèØ‰øÆÊîπ. ËåÉÂûãStruct: impl&lt;T&gt; Queue&lt;T&gt; &#123;&#125;Ëøô‰πàÁêÜËß£: For any type T, here are some methods available on Queue&lt;T&gt; ÈÄöËøáderiveÂ±ûÊÄßÂèØ‰ª•ËÆ©structËé∑ÂæóÊüê‰∫õÁâπË¥®ËÉΩÂäõ: 12345#[derive(Copy, Clone, Debug, PartialEq)]struct Point &#123; x: f64, y: f64&#125; Cell&lt;T&gt;, RefCell&lt;T&gt;ÈúÄË¶Å‰øÆÊîπÂÜÖÈÉ®ÂèòÈáèÊàñÂºïÁî®, ‰ΩøÁî®CellÊàñ RefCellÊù•Êèê‰æõinterior mutability. ‰æãÂ¶Ç‰∏ãÈù¢Ëøô‰∏™Âú∫ÊôØ, SpiderSensesÂåÖÂê´ÂØπSpiderRobotÁöÑÂºïÁî®, ‰ΩÜÊòØÂ¶ÇÊûúÊÉ≥Âú®SpiderRobot‰∏≠Ê∑ªÂä†‰∏Ä‰∫õÊñá‰ª∂Êó•Âøó, Âπ∂Âú®SpiderSenses‰∏≠ËÆ∞ÂΩï, ÈÇ£‰πàÂØπstandard File typeÁöÑÂºïÁî®Â∞±ÂøÖÈ°ªÊòØmutable. 12345678910111213141516pub struct SpiderRobot &#123; species: String, web_enabled: bool, leg_devices: [fd::FileDesc; 8], ...&#125;use std::rc::Rc;pub struct SpiderSenses &#123; robot: Rc&lt;SpiderRobot&gt;, // &lt;-- pointer to settings and I/O eyes: [Camera; 32], motion: Accelerometer, ...&#125; Cell&lt;T&gt;Cell&lt;T&gt;ÂÆûÈôÖ‰∏äÊòØ‰∏™ÂåÖÂê´‰∫ÜÁßÅÊúâ(non-pub)ÊàêÂëòÂèòÈáèTÁöÑstruct. Êèê‰æõ‰∫ÜÊòæÂºèÁöÑÊñπÊ≥ïÊù•‰øÆÊîπÂÜÖÈÉ®Êï∞ÊçÆ. Cell::new(value): ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑCell, move valueÂà∞ÈáåÈù¢. cell.get(): ËøîÂõûÁöÑÊòØ‰∏Ä‰∏™valueÁöÑÊã∑Ë¥ù. cell.set(value): Ëøô‰∏™ÊñπÊ≥ïÂæàÁâπÊÆä, ÊòØRust‰∏≠‰∏çÈúÄË¶Å&amp;mut selfÂ∞±ËÉΩ‰øÆÊîπÂÜÖÈÉ®Êï∞ÊçÆÁöÑÊñπÊ≥ï, ‰ΩÜÊòØÁî±‰∫éÂÆÉÊòØÊòæÂºèÁöÑset, ÊâÄ‰ª•ÂÖÅËÆ∏ÁªïËøáÂÜÖÈÉ®ÂèØÂèòÊÄßÁöÑËßÑÂàô. 123pub fn set(&amp;self, val: T) &#123; // note: not &quot;&amp;mut self&quot; ...&#125; Â¶ÇÊûúËØ¥SpiderRootÈúÄË¶ÅÂä†‰∏Ä‰∏™ÈîôËØØËÆ°Êï∞, ÈÇ£‰πàÂåÖÂê´ÂÆÉÁöÑSpiderSenses‰∏çÈúÄË¶ÅmutÂºïÁî®Â∞±ÂèØ‰ª•ÂÆûÁé∞: 123456789101112131415use std::cell::Cell;pub struct SpiderRoot &#123; ... hardware_error_count: Cell&lt;u32&gt;, ...&#125;impl SpiderRoot &#123; /// Increase the error count by 1 pub fn add_hardware_error_count(&amp;self) &#123; let n = self.hardware_error_count.get(); self.hardware_error_count.set(n + 1); &#125;&#125; ‰ΩÜÊòØ, CellÊúâ‰∏ÄÁÇπ‰∏çÂ§üÁÅµÊ¥ªgetÂíåsetÊìç‰ΩúÁöÑÂØπË±°ÈÉΩÊòØÊòØcopyableÊï∞ÊçÆÁ±ªÂûã. ÂØπ‰∫éFileÁ≠â‰∏çÂèØÊã∑Ë¥ùÁ±ªÂûã‰∏çÂÖÅËÆ∏. Âõ†Ê≠§ÈúÄË¶ÅRefCell&lt;T&gt; RefCell&lt;T&gt;ÂíåCell&lt;T&gt;Á±ª‰ºº, ‰ΩÜÊòØÊìç‰ΩúÁöÑÊòØÂºïÁî®. RefCell::new(value): Âêå‰∏ä ref_cell.borrow(): ËøîÂõûÁöÑÊòØRef&lt;T&gt;,ÊòØvalueÁöÑshared reference ref_cell.borrow_mut(): ËøîÂõûÁöÑÊòØRefMut&lt;T&gt;, ÊòØvalueÁöÑ mutable reference 12345678910111213pub struct SpiderRobot &#123; ... log_file: RefCell&lt;File&gt;, ...&#125;impl SpiderRobot &#123; /// Write a line to the log file. pub fn log(&amp;self, message: &amp;str) &#123; let mut file = self.log_file.borrow_mut(); writeln!(file, &quot;&#123;&#125;&quot;, message).unwrap(); &#125;&#125;","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Struct","slug":"Struct","permalink":"https://unpluggedcoder.me/tags/Struct/"},{"name":"Cell<T>","slug":"Cell-T","permalink":"https://unpluggedcoder.me/tags/Cell-T/"},{"name":"RefCell<T>","slug":"RefCell-T","permalink":"https://unpluggedcoder.me/tags/RefCell-T/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãCrates&Modules","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãCrates&Modules","date":"2019-08-24T13:15:30.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/08/24/RustÂÖ•Èó®Â§±Ë¥•‰πãCrates&Modules/","link":"","permalink":"https://unpluggedcoder.me/2019/08/24/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BCrates&Modules/","excerpt":"","text":"Cargo Rust ÁöÑÂ∫ìÈªòËÆ§ÊòØ.rlibÊ†ºÂºè, Ëøô‰∏™ÊòØRustËá™Ë∫´ÁöÑÂ∫ìÁ±ªÂûã.ÈªòËÆ§‰ºöÂ∞Ü.rlibÈùôÊÄÅÈìæÊé•Âà∞ÂèØÊâßË°åÊñá‰ª∂È°πÁõÆ(bin) Â¶ÇÊûúÈúÄË¶ÅÁºñËØë.soÊàñ.dylib, Âú®Cargo.tomlÈáåÂ¢ûÂä†‰∏ãÈù¢ÁöÑÂ±ûÊÄß: 123[lib]name = &quot;...&quot;crate-type = [&quot;dylib&quot;] # could be `staticlib` as well The available options are dylib, rlib, staticlib, cdylib, and proc-macro. Modules ModuleÊòØRustÁöÑÂêçÁß∞Á©∫Èó¥ ÊØè‰∏™moduleÂàùÂßãÊòØÁ©∫ÁôΩÁä∂ÊÄÅ(blank slate), Èô§‰∫Ü‰∏ãÈù¢ÁöÑ‰æãÂ§ñË¢´ÈªòËÆ§Ë¢´ÈöêÂê´Â£∞Êòé extern crate std; use std::prelude::v1::*; ÈÄöÂ∏∏‰ºöÂ£∞Êòé‰∏Ä‰∏™Â≠êÊ®°Âùóprelude, ËÆ©Áî®Êà∑ÂéªÂºïÁî®: use xxxx::prelude::*; crateÊòØprojectÂ±ÇÈù¢ÁöÑ‰ª£Á†ÅÂ§çÁî®, ËÄåmoduleÊòØ‰∏Ä‰∏™projectÂÜÖÁöÑ‰ª£Á†ÅÁªÑÁªá Rust‰∏ç‰ºöÂçïÁã¨ÁºñËØëÊüê‰∏™Ê®°ÂùóModule, ÊØèÊ¨°ÁºñËØë‰∏Ä‰∏™crate, ‰ºöÁºñËØëÂÆÉÊâÄÊúâÁöÑÊ®°Âùó use super::xxxÂ≠êÊ®°ÂùóÂºïÁî®Áà∂Á∫ßÊ®°Âùó, ÂíåunixÁõÆÂΩïÈáåÁöÑ ../Á±ª‰ºº user self::xxxÁà∂Ê®°ÂùóÂºïÁî®Â≠êÊ®°Âùó, ÂíåunixÁõÆÂΩïÈáåÁöÑ ./Á±ª‰ºº extern crate xxx;Á±ª‰ººÊåÇËΩΩÂÖ∂ÂÆÉcrateÁöÑÊ†πÁõÆÂΩïÂà∞ÂΩìÂâçÈ°πÁõÆ‰∏≠ Â≠êÊ®°ÂùóÂèØ‰ª•ÂºïÁî®Áà∂Ê®°ÂùóÁöÑÁßÅÊúâÊàêÂëò, ‰ΩÜÂøÖÈ°ªÈÄê‰∏ÄÂàóÂá∫ÂºïÁî®ÁöÑÂêçÁß∞ Â≠êÊ®°ÂùóÂèØ‰ª•Áî®super::*;Áõ¥Êé•ÂºïÁî®Áà∂Ê®°ÂùóÊâÄÊúâpubÊàêÂëò Pub implÂùó‰∏çËÉΩË¢´Â£∞Êòé‰∏∫pub, ËÄåÂÆÉÂÜÖÈÉ®ÁöÑÊñπÊ≥ïÂèØ‰ª• ÁßÅÊúâÁöÑÊñπÊ≥ïmethodsÂíåÂ≠óÊÆµfieldsÂè™ËÉΩÂú®ÂÆÉ‰ª¨Ë¢´Â£∞ÊòéÁöÑÊ®°Âùó‰ΩøÁî® ÂèØ‰ª•Áî®pub‰øÆÈ•∞use, ÈÅøÂÖçÂ§ñÈÉ®Áî®Êà∑ÁöÑÈïø‰∏≤ÂºïÁî® Attributes #[allow(...)] ‰æãÂ¶ÇÂÖÅËÆ∏‰∏Ä‰∫õË≠¶Âëä #[cfg] ËÆæÁΩÆ‰∏Ä‰∫õÂ±ûÊÄß, ‰æãÂ¶Ç: target_arch=&quot;x86_64&quot; target_os=&quot;macos&quot; #[inline] Ë¢´Â§ñÈÉ®crateË∞ÉÁî®ÁöÑÊñπÊ≥ïÈªòËÆ§‰∏ç‰ºöinline, Èô§ÈùûÊòæÁ§∫ÊåáÂÆöÊàñËÄÖÊúâÈÄöÁî®Ê®°ÊùøÂèÇÊï∞ #[inline(always)] #[inline(never)] Doc #![doc]Á≠â‰∫é //! ///ÂêéÂèØ‰ª•Âä†Âõõ‰∏™Á©∫Ê†ºÊàñmarkdownÁöÑ‰ª£Á†ÅÈ£éÊ†º ```` Âä†ÂÖ•‰ª£Á†Å‰Ωú‰∏∫Doc-Tests&#96; Â¶ÇÊûú‰∏çÂ∏åÊúõDoc-Tests‰ª£Á†ÅËøêË°å, Áî® &#96; &#96;&#96;&#96;&#96;no_run Â¶ÇÊûú‰∏çÂ∏åÊúõDoc-Tests‰ª£Á†ÅÁºñËØë, Áî® &#96; &#96;&#96;&#96;&#96;ignore Cargo.lock Â¶ÇÊûúprojectÊòØ‰∏™‚ÄúÈùôÊÄÅÂ∫ì‚Äù, ‰∏çÁî®Êèê‰∫§Cargo.lockÂà∞git‰∏≠, ÊØè‰∏™downstreamÁî®Êà∑ÊúâËá™Â∑±ÁöÑ‰æùËµñÂõædependency graph. Â¶ÇÊûúprojectÊòØ‰∏™Âä®ÊÄÅÂ∫ì(ËæìÂá∫ÊòØ.dll, .dylib, .so), Ê≤°ÊúâdownstreamÁöÑcargoÁî®Êà∑, ÂøÖÈ°ªÊèê‰∫§Cargo.lockÊñá‰ª∂","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Crates","slug":"Crates","permalink":"https://unpluggedcoder.me/tags/Crates/"},{"name":"Modules","slug":"Modules","permalink":"https://unpluggedcoder.me/tags/Modules/"},{"name":"pub","slug":"pub","permalink":"https://unpluggedcoder.me/tags/pub/"},{"name":"doc-tests","slug":"doc-tests","permalink":"https://unpluggedcoder.me/tags/doc-tests/"},{"name":"cargo","slug":"cargo","permalink":"https://unpluggedcoder.me/tags/cargo/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãError Handling","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãError Handling","date":"2019-08-24T12:23:30.000Z","updated":"2022-09-15T15:51:05.347Z","comments":true,"path":"2019/08/24/RustÂÖ•Èó®Â§±Ë¥•‰πãError Handling/","link":"","permalink":"https://unpluggedcoder.me/2019/08/24/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BError%20Handling/","excerpt":"","text":"RustÈáåÁöÑÈîôËØØÂ§ÑÁêÜ‰∏ªË¶ÅÂàÜ‰∏§Áßç: Panic Âíå Result üíÄPanic ‰∏çÂÉèC++ÁöÑÊú™ÂÆö‰πâÊìç‰Ωú, paincÊó∂ÁöÑÊìç‰ΩúÈ°∫Â∫è: ÊâìÂç∞ÈîôËØØ‰ø°ÊÅØ, Â¶ÇÊûúÂÆö‰πâ‰∫ÜRUST_BACKSTRACE=1, ËøòÂ∞ÜÊâìÂç∞Â†ÜÊ†à; Ê†àÂõûÊ∫Ø, ÊåâÁÖßÂ†ÜÊ†àÈ°∫Â∫èÈîÄÊØÅËµÑÊ∫ê, ÊâÄÊúâÁ±ªÂûã(Âê´Ëá™ÂÆö‰πâÁ±ªÂûã)ÁöÑdropÊñπÊ≥ïË¢´Ë∞ÉÁî®; Á∫øÁ®ãÈÄÄÂá∫, PanicÊòØÁ∫øÁ®ãÁ∫ß, Â¶ÇÊûú‰∏ªÁ∫øÁ®ãÂ¥©‰∫Ü, Êï¥‰∏™ËøõÁ®ãÁªìÊùü, Âê¶ÂàôÂÖ∂ÂÆÉÁ∫øÁ®ãËøò‰ºöÁªßÁª≠. ÂèØ‰ª•Áî®std::panic::catch_unwind()ÊçïËé∑panicÊó∂ÁöÑstack unwinding, Ëøô‰πüÊòØRust testÁöÑÂÅöÊ≥ï. ÂΩìC&#x2F;C++Á≠âÂÖ∂ÂÆÉËØ≠Ë®ÄË∞ÉÁî®Rust‰ª£Á†ÅÊó∂ÂèØ‰ª•Áî®std::panic::catch_unwind()ÊçïËé∑, Âõ†‰∏∫unwinding ÈùûRust code ÁöÑË°å‰∏∫ÊòØÊú™ÂÆö‰πâÁöÑ. std::panic::catch_unwind()Âè™ËÉΩÁî®‰∫éÊÅ¢Â§çÂ†ÜÊ†à, ‰∏çË¶ÅÂ∞ùËØïÁùÄÁªßÁª≠ËøêË°å. Â¶ÇÊûúÊ∏ÖÁêÜËøáÁ®ã‰∏≠dropÊñπÊ≥ïÂÜçÊ¨°panic, ÂàôRust‰∏ç‰ºöÂÜçÂ∞ùËØïÊÅ¢Â§çÂ†ÜÊ†àunwind stack, Áõ¥Êé•abort. ‚öñÔ∏èResult&lt;T,E&gt;123456789pub enum Result&lt;T, E&gt; &#123; /// Contains the success value #[stable(feature = &quot;rust1&quot;, since = &quot;1.0.0&quot;)] Ok(#[stable(feature = &quot;rust1&quot;, since = &quot;1.0.0&quot;)] T), /// Contains the error value #[stable(feature = &quot;rust1&quot;, since = &quot;1.0.0&quot;)] Err(#[stable(feature = &quot;rust1&quot;, since = &quot;1.0.0&quot;)] E),&#125; T, E ÂàÜÂà´ÂÆö‰πâOkÂíåErrÂåÖÂê´ÁöÑÁ±ªÂûãÔºö Ok(T) Err(E) ResultÊúâ‰∏§‰∏™ÊñπÊ≥ï: .as_ref()Âíå .as_mut()ÂàÜÂà´ÊääResult&lt;T, E&gt;ËΩ¨‰∏∫ Result&lt;&amp;T, &amp;E&gt;Âíå Result&lt;&amp;mut T, &amp;mut E&gt;‰ªéËÄåÈÅøÂÖçÈîÄÊØÅÂÆÉÊàñËÄÖmove. fn remove_file(path: &amp;Path) ‚Üí Result&lt;()&gt;, ËøôÈáåÁöÑResultÊòØÂà´Âêç(aliases), ÈúÄË¶ÅÁúãÂØπÂ∫îÁöÑÊ®°ÂùóÁöÑpublic ResultÂÆö‰πâ: 1pub type Result&lt;T&gt; = result::Result&lt;T, Error&gt; ÈÄöËøáprintln!(&quot;&#123;:?&#125;&quot;, err);ÂèØ‰ª•Êü•ÁúãÂà∞Êõ¥Â§öÁöÑÊäÄÊúØÊÄßÈîôËØØ‰ø°ÊÅØ; err.description()‰ª•&amp;strÊñπÂºèËøîÂõûÈîôËØØ‰ø°ÊÅØ; err.cause()ËøîÂõûOption&lt;&amp;Error&gt;: ÂÜÖÈÉ®ÈîôËØØËØ¶ÁªÜ‰ø°ÊÅØ. Áî® ?Âêë‰∏äÊäõÂá∫Err, Âè™ËÉΩÁî®‰∫éËøîÂõûResultÁöÑÂáΩÊï∞ errorchaincrate ÂèØ‰ª•Áî®‰∫éÂÆö‰πâerror type, Êñπ‰æø ?ÊäõÂá∫‰∏çÂêåÁ±ªÂûãErr Custom Error Type ÈÄöÂ∏∏Áõ¥Êé•ÂÆö‰πâÈîôËØØ‰ø°ÊÅØÁªìÊûÑ‰Ωì, ÁÑ∂ÂêéÁî®Err()ÊäõÂá∫Â∞±Â§ü‰∫Ü 12345678#[derive(Debug, Clone)]pub struct JsonError &#123; pub message: String, pub line: usize, pub column: usize,&#125;return Err(JsonError &#123;...&#125;); Â¶ÇÊûúÂ∏åÊúõÂíåÊ†áÂáÜÂ∫ìÁöÑÈîôËØØÁ±ªÂûãË°®Áé∞‰∏ÄËá¥, ËøòÈúÄË¶ÅÂÆö‰πâfmt::DisplayÂíåErrorÁöÑtrait. 12345678910111213141516use std;use std::fmt;// Errors should be printableimple fmt::Display for JsonError &#123; fn fmt(&amp;self, f: &amp;mut fmt::Formatter) -&gt; Result&lt;(), fmt::Error&gt; &#123; write!(f, &quot;&#123;&#125; (&#123;&#125;:&#123;&#125;)&quot;, self.message, self.line, self.column); &#125;&#125;// Errors should implement the std::error::Error trait.impl std::error::Error for JsonError &#123; fn description(&amp;self) -&gt; &amp;str &#123; &amp;self.message &#125;&#125;","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Error Handling","slug":"Error-Handling","permalink":"https://unpluggedcoder.me/tags/Error-Handling/"},{"name":"Result","slug":"Result","permalink":"https://unpluggedcoder.me/tags/Result/"},{"name":"painc","slug":"painc","permalink":"https://unpluggedcoder.me/tags/painc/"},{"name":"Option","slug":"Option","permalink":"https://unpluggedcoder.me/tags/Option/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãReference","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãReference","date":"2019-08-19T15:23:30.000Z","updated":"2022-09-15T15:51:05.349Z","comments":true,"path":"2019/08/19/RustÂÖ•Èó®Â§±Ë¥•‰πãReference/","link":"","permalink":"https://unpluggedcoder.me/2019/08/19/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BReference/","excerpt":"","text":"ReferenceÂÆûÈôÖÂè™ÊòØ‰∏Ä‰∏™Âú∞ÂùÄ ÂºïÁî®‰∏çÂΩ±ÂìçÊâÄÂºïÁî®ÁöÑÁîüÂëΩÂë®Êúü References must never outlive their referents. ÂºïÁî®ÁîüÂëΩÂë®Êúü‰∏çÂæóË∂ÖËøáÊâÄÂºïÁî®ÂÄº. Shared Reference ÂèØ‰ª•ÊúâÂ§ö‰∏™ÂÖ±‰∫´ÂºïÁî® ‰∏ÄÊó¶Êúâshared reference, Ë¢´ÂºïÁî®ÁöÑOwnerÂèòÊàêÂè™ËØª, ‰∏çËÉΩ‰øÆÊîπÂíåmove. shared referenceÂèØ‰ª• Copy Mutable Reference ‰∏ÄÊó¶ÊúâÂèØÂèòÂºïÁî®, Èô§‰∫ÜÂèØÂèòÂºïÁî®Ë°çÁîüÂá∫ÁöÑÂºïÁî®, ‰∏çËÉΩÊúâÂÖ∂ÂÆÉ‰ªª‰ΩïÂΩ¢ÂºèÁöÑÂºïÁî®ËÆøÈóÆÂíå‰øÆÊîπ, Áõ¥Âà∞ÂèØÂèòÂºïÁî®ÈîÄÊØÅ mutable reference‰∏çÂèØ Copy ÂºïÁî®ËßÑÂàôÂà§Êñ≠Ê†áÂáÜ ÂºïÁî®Á±ªÂûãÂèòÈáè‰∏çÂæóË∂ÖËøáOwnerÁîüÂ≠òÊúü‚Äî‚ÄîÂºïÁî®ÂèòÈáèÁîüÂëΩÂë®ÊúüÁöÑ‰∏äÈôê Â≠òÂÇ®‰∫ÜÂºïÁî®ÁöÑÂèòÈáèÂÖ∂ÂºïÁî®ÁöÑOwnerÁîüÂëΩÂë®ÊúüÂøÖÈ°ªËá≥Â∞ëÊ∂µÁõñÂà∞ÂèòÈáèÁöÑÁîüÂëΩÂë®Êúü‚Äî‚ÄîOwnerÁîüÂëΩÂë®ÊúüÁöÑ‰∏ãÈôê ‰∏äÈôêËá≥Â∞ëÂåÖÂê´‰∏ãÈôêÊâçÁ¨¶ÂêàËßÑÂàô! ‰æãÂ¶Ç: 12345678&#123; let r; &#123; let x = 1; r = &amp;x; &#125; assert_eq!(*r, 1); // bad: reads memory `x` used to occupy&#125; xÁöÑÁîüÂëΩÂë®ÊúüÂ¶Ç‰∏ã: ËÄåÂèòÈáè rÁöÑÁîüÂëΩÂë®ÊúüÂ¶Ç‰∏ã: ‰∏äÈôêÊú™ÂåÖÂê´‰∏ãÈôê, Âõ†Ê≠§‰∏çÊª°Ë∂≥. ÊäärÊîæÂÖ•ÂÜÖÈÉ®, OK StaticÂºïÁî® ÊâÄÊúâÈùôÊÄÅÁöÑÊï∞ÊçÆÈÉΩÂøÖÈ°ªË¢´ÂàùÂßãÂåñ ÂèØÂèòÁöÑÈùôÊÄÅÂºïÁî®(Mutable statics)ÈªòËÆ§ÈÉΩÈùûÁ∫øÁ®ãÂÆâÂÖ®, Âè™ËÉΩÂú®unsafe blockÂÜÖËÆøÈóÆÂèØÂèòÁöÑÈùôÊÄÅÂºïÁî® 1234567static mut STASH: &amp;i32 = &amp;10;fn f(p: &amp;&#x27;static i32) &#123; unsafe &#123; STASH = p; &#125;&#125; ÂåÖÂê´ÂºïÁî®ÁöÑÂ§çÂêàÁ±ªÂûã ÂåÖÂê´ÂºïÁî®ÁöÑÂ§çÂêàÁ±ªÂûã(Â¶Çstruct)ÂøÖÈ°ªÂ£∞ÊòéÂÖ∂ÁîüÂëΩÂë®Êúü 1234567struct T&lt;&#x27;a&gt; &#123; s: S&lt;&#x27;a&gt;&#125;// orstruct T &#123; s: S&lt;&#x27;static&gt;&#125; selfÁöÑÊñπÊ≥ïÂ¶ÇÊûúËøîÂõûÂºïÁî®, ÈªòËÆ§‰∏éselfÊòØÁõ∏ÂêåÁöÑÁîüÂëΩÂë®Êúü All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote in the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Ownership","slug":"Ownership","permalink":"https://unpluggedcoder.me/tags/Ownership/"},{"name":"Reference","slug":"Reference","permalink":"https://unpluggedcoder.me/tags/Reference/"},{"name":"Shared Reference","slug":"Shared-Reference","permalink":"https://unpluggedcoder.me/tags/Shared-Reference/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãOwnership","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãOwnership","date":"2019-08-14T16:55:30.000Z","updated":"2022-09-15T15:51:05.348Z","comments":true,"path":"2019/08/15/RustÂÖ•Èó®Â§±Ë¥•‰πãOwnership/","link":"","permalink":"https://unpluggedcoder.me/2019/08/15/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8BOwnership/","excerpt":"","text":"Rule No.1OwnershipËÉåÂêéÂÖ®ÈÉΩÂõ¥ÁªïËøô‰∏ãÈù¢Ëøô‰∏ÄÂîØ‰∏ÄËßÑÂàô: Every value has a single owner that determines its lifetime. ÊØè‰∏™ÂÄºÂè™Êúâ‰∏Ä‰∏™Êã•ÊúâËÄÖÂèØ‰ª•ÂÜ≥ÂÆöÂÆÉÁöÑÁîüÂëΩÂë®Êúü. ‰πüÂ∞±ÊòØËØ¥: OwnerÈîÄÊØÅ(dropped), ÂÄº‰πüÈîÄÊØÅ. Êï¥‰∏™Á®ãÂ∫èÁöÑÊï∞ÊçÆÂÉè‰∏Ä‰∏™Ownership Treeüå≤ Copy &amp; MoveÈùûCopy types Âú®ËµãÂÄº„ÄÅ‰º†ÂèÇÂíåËøîÂõûÊó∂ÁßªÂä®(Move)ÂÖ∂ÊâÄÊúâÊùÉ, ÂéüÂèòÈáè‰∏çÂèØÂºïÁî®. Copy typeÂà§Êñ≠Ê†áÂáÜ: ÊâÄÊúâÂú®ÈîÄÊØÅ(dropped)Êó∂ÈúÄË¶ÅÂÅö‰∫õÁâπÊÆäÂ§ÑÁêÜÊìç‰Ωú(ÈáäÊîæÂ†Ü‰∏äÂÜÖÂ≠òÊàñÂÖ∂ÂÆÉÁ±ªÂûãËµÑÊ∫ê)ÁöÑÁ±ªÂûã, Âùá‰∏∫‰∏çÂèØÊã∑Ë¥ù. ‰æãÂ¶Ç: String Box&lt;T&gt; File Êñá‰ª∂Á±ªÂûã Mutex&lt;T&gt; ÁÆÄÂçïÊï∞Â≠óÁ±ªÂûãÈÉΩÂÆûÁé∞‰∫ÜCopy Trait, ËµãÂÄºÊã∑Ë¥ùÊó∂Áõ¥Êé•Âú®Ê†à‰∏äÁîüÊàê‰∏Ä‰ªΩÊã∑Ë¥ù. 12345let str1 = &quot;somnambulance&quot;.to_string();let str2 = str1;let num1: i32 = 36;let num2 = num1; ÂØπ‰∫éÊúâÊåáÂêëheapÊï∞ÊçÆÁöÑÊï∞ÊçÆÁ±ªÂûã(ÂåÖÊã¨Ëá™ÂÆö‰πâÁ±ªÂûã)‰∏çÂÖÅËÆ∏ÂÆûÁé∞Ëá™ÂÆö‰πâCopy trait. Â¶ÇÊûúË¶ÅÂÖÅËÆ∏ÁßªÈô§(Move)‰∏Ä‰∫õË¢´Á¥¢ÂºïÁöÑÂÜÖÂÆπ, ‰æãÂ¶Ç Vec&lt;String&gt; ÂèØ‰ª•Áî®Option&lt;T&gt;, Ë¢´MoveÂêé, ÂéüÂÖàÁöÑÂÄº‰∏∫None. 123let s = vec![&quot;udon&quot;.to_string(), &quot;ramen&quot;.to_string(), &quot;soba&quot;.to_string()];let t = s;let u = s; // error[E0382]: use of moved value: `s` ÊâßË°å‰∏äÈù¢Á¨¨‰∏ÄËØ≠Âè•Âêé, ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: ËµãÂÄºÁªôtÂêé, ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: ÂÜç‰ΩøÁî®sËµãÂÄºÂ∞±Êä•Èîô‰∫Ü, sÂ∑≤ÁªèÊòØuninitializedÁä∂ÊÄÅ. Box&lt;T&gt; ÁÆÄÂçïÁöÑÊåáÂêëÂ†ÜÊ†à‰∏äÊï∞ÊçÆÁöÑÊåáÈíà:let b = Box:new(int); ËµãÂÄºMoveÂéüÊåáÈíàÊâÄÊúâÊùÉ ÂèØ‰ª•Áî®‰∫éÈÄíÂΩíÁ±ªÂûãÊàñÂú®ÁºñËØëÊó∂ÊúüÊó†Ê≥ïËÆ°ÁÆóÂØπË±°Â§ßÂ∞èÁöÑÂú∫ÊôØ 12345&#123; let point = Box::new((0.625, 0.5)); // point allocated here let label = format!(&quot;&#123;:?&#125;&quot;, point); // label allocated here assert_eq!(label, &quot;(0.625, 0.5)&quot;);&#125; // both dropped here ÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: Rc and Arc: Shared Ownership ÊúâÊó∂ÂÄôÂæàÈöæÊª°Ë∂≥Êï∞ÊçÆÂè™Êúâ‰∏Ä‰∏™Owner, Âõ†Ê≠§ÂºïÂÖ•ÂÖ±‰∫´ÊâÄÊúâÊùÉ, ÂÖÅËÆ∏Â§ö‰∏™ÂºïÁî®.ÂèòÈáèÂú®Ê†à‰∏äÂÆûÈôÖÂè™ÊòØ‰∏Ä‰∏™ÊåáÈíà, ÊåáÂêëÂ†Ü‰∏ä‰∏Ä‰∏™Áª¥Êä§ÂºïÁî®ËÆ°Êï∞ÂèäÂ≠òÊîæÂÆûÈôÖÊï∞ÊçÆÁ±ªÂûãÁöÑÂÜÖÂ≠ò.‚ö†Ô∏èËøôÈáåÂπ∂Ê≤°ÊúâËøùÂèçÂâçÈù¢ÁöÑÁ¨¨‰∏ÄÊù°ÂéüÂàô, Âõ†‰∏∫ÂÜ≥ÂÆöÂÆûÈôÖÊï∞ÊçÆÁîüÂëΩÂë®ÊúüÁöÑOwnerÊòØËøô‰∏™Rc&#x2F;ArcÊú¨Ë∫´. ÂΩìÊúÄÂêé‰∏Ä‰∏™ÂºïÁî®dropped, Êï¥‰∏™Êï∞ÊçÆÈáäÊîæ. ÂÖ±‰∫´ÁöÑÂºïÁî®ÈÉΩÊòØimmutable, ‰∏çÂèØ‰øÆÊîπÂÖ±‰∫´Êï∞ÊçÆ. Âæ™ÁéØÂºïÁî®‰ºöÈÄ†ÊàêÊ≠ªÈîÅ, ËøôÊòØRustÂèØËÉΩÂÜÖÂ≠òÊ≥ÑÈú≤ÁöÑ‰∏ÄÁÇπ. Ë¶ÅÈÅøÂÖçÂèØ‰ª•‰ΩøÁî® std::rc::Weak 12345let s: Rc&lt;String&gt; = Rc::new(&quot;shirataki&quot;.to_string());let t: Rc&lt;String&gt; = s.clone();let u: Rc&lt;String&gt; = s.clone();s.push_str(&quot; noodles&quot;); // error: cannot borrow immutable borrowed content as mutable clone()ÂêéÂÜÖÂ≠òÂ∏ÉÂ±ÄÂ¶Ç‰∏ã: ‰∫åËÄÖÂ∑ÆÂºÇ(‰ªÖÊ≠§ËÄåÂ∑≤): Rc&lt;T&gt; ÈùûÁ∫øÁ®ãÂÆâÂÖ®ËÆ°Êï∞ÂºïÁî® Arc&lt;T&gt; Á∫øÁ®ãÂÆâÂÖ®ÁöÑËÆ°Êï∞ÂºïÁî®, short for Atomic Reference Count All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote in the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Ownership","slug":"Ownership","permalink":"https://unpluggedcoder.me/tags/Ownership/"},{"name":"Box","slug":"Box","permalink":"https://unpluggedcoder.me/tags/Box/"},{"name":"Rc","slug":"Rc","permalink":"https://unpluggedcoder.me/tags/Rc/"},{"name":"Arc","slug":"Arc","permalink":"https://unpluggedcoder.me/tags/Arc/"}]},{"title":"RustÂÖ•Èó®Â§±Ë¥•‰πãÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûã","slug":"RustÂÖ•Èó®Â§±Ë¥•‰πãÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûã","date":"2019-08-13T16:43:30.000Z","updated":"2022-09-15T15:51:05.350Z","comments":true,"path":"2019/08/14/RustÂÖ•Èó®Â§±Ë¥•‰πãÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûã/","link":"","permalink":"https://unpluggedcoder.me/2019/08/14/Rust%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5%E4%B9%8B%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","excerpt":"","text":"Âçä‰∏™ÊúàÂâçÁúãÂÆå‰∫Ü„ÄäThe Rust Programming Language„Äã, ‰ΩÜÊòØ‰ªçÁÑ∂ÊÑüËßâËá™Â∑±ÂØπRustËøòÊòØ‰∏ÄÁü•ÂçäËß£, ÂÖ•Èó®Â§±Ë¥•. ÈöèÂêéÂºÄÂßãÁúã„ÄäProgramming rust„ÄãÂΩ±Âç∞Áâà, ÊÑüËßâËøôÊú¨‰π¶ËÆ≤ÂæóÊõ¥Â•Ω, ‰ΩúËÄÖÁî®‰∫ÜÂæàÂ§öÂõæÊù•Ëß£Èáä, ËøôÊú¨‰π¶‰πüÊòØ‰∏ÄÊú¨Â∑®ÂéöÁöÑÂèÇËÄÉ‰π¶Á±ªÂûã, ÁõÆÂâçÂïÉ‰∫Ü‰∏ÄÂçä. so, Êää‰πãÂâçÁöÑ‰∏Ä‰∫õËØª‰π¶Á¨îËÆ∞ËÆ∞‰∏ãÊù•, ‰∏ÄÊñπÈù¢Êää‰π¶ËØªËñÑ, ‰∏ÄÊñπÈù¢ÁÆóÊòØRustÁöÑÂÖ•Èó®Â§±Ë¥•Á¨îËÆ∞. ËøôÁ≥ªÂàó‰∏ªË¶ÅÈù¢ÂêëÊúâRustÂÖ•Èó®Â§±Ë¥•ÁªèÂéÜÁöÑÂºÄÂèë‰∫∫Âëò, Âè™ÂàóÂá∫‰∏™‰∫∫ËßâÂæóÈáçË¶ÅÁöÑ‰∏úË•ø. bool ‰ºöÂç†‰∏Ä‰∏™Â≠óËäÇ, ‰ªéËÄåÂÖÅËÆ∏ÊåáÈíàÊåáÂêëËøô‰∏™Â≠óËäÇÁöÑÂú∞ÂùÄ. numeric ‰∏çÂÖÅËÆ∏ÈöêÂºèËΩ¨Êç¢ Â¶ÇÊûúÈúÄË¶ÅË∞ÉÁî®Á±ªÂûãÁöÑÊñπÊ≥ï, Âú®Êúâ‰∫åÊÑèÁöÑÊÉÖÂÜµ‰∏ãÂøÖÈ°ªÊòæÂºèËΩ¨Êç¢, ‰æãÂ¶ÇÂä†ÂêéÁºÄ: (2.0_f64).sqrt() bool, char, enum ÂèØ‰ª•ËΩ¨Êç¢‰∏∫‰ªªÊÑèÊï¥Âûãinteger, ‰ΩÜÂèçÂêëËΩ¨Êç¢‰∏çË°å, ÂîØ‰∏Ä‰æãÂ§ñÊòØu8ËΩ¨char char Â§ßÂ∞è32bit UNICODEÁºñÁ†Å ‰∏çÂÖÅËÆ∏‰ªª‰ΩïÂΩ¢ÂºèÁöÑÈöêÂºèËΩ¨Êç¢ u8ÊòØÂÖÅËÆ∏ as ËΩ¨Êç¢‰∏∫charÁöÑÂîØ‰∏ÄÂΩ¢Âºè String ‰∏çÊòØcharÊï∞ÁªÑ, ËÄåÊòØUTF-8ÂèòÈïøÂ∫èÂàó ASCIIÂ≠óÁ¨¶Âç†‰∏Ä‰∏™Â≠óËäÇ, ÂÖ∂‰ΩôÂ≠óÁ¨¶Âç†Â§ö‰∏™‰∏çÂÆöÈïøÂ≠óËäÇ. len()ÊñπÊ≥ïËøîÂõûÁöÑÊòØÂ≠óËäÇÈïøÂ∫¶, ËÄåÈùûÂ≠óÁ¨¶ÈïøÂ∫¶ chars().count()ËøîÂõûÂ≠óÁ¨¶ÈïøÂ∫¶ ‰∏Ä‰∏™Ê†à‰∏äÁöÑStringÂèòÈáèÂú®ÂÜÖÂ≠ò‰∏≠Ë°®Á§∫Â¶Ç‰∏ã: array, vector, slices ‰∏ãÊ†áÂºïÁî®[i]Âè™ËÉΩÁî®usizeÁ±ªÂûã ‰∏Ä‰∏™Ê†à‰∏äÁöÑvectorÂèòÈáèÂú®ÂÜÖÂ≠ò‰∏≠ÁöÑÂ∏ÉÂ±ÄÂ¶Ç‰∏ã:12345678fn print_padovan() &#123; let mut padovan = vec![1,1,1]; // allocated here for i in 3..10 &#123; let next = padovan[i-3] + padovan[i-2]; padovan.push(next); &#125; println!(&quot;P(1..10) = &#123;:?&#125;&quot;, padovan);&#125; // dropped here All images are copyrighted by original authors Jim Blandy &amp; Jason Orendorff who wrote the book Programming Rust.","categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"}],"tags":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"}]},{"title":"ÂÖ¨‰ºóÂè∑","slug":"ÂÖ¨‰ºóÂè∑","date":"2019-07-30T15:43:30.000Z","updated":"2022-09-15T15:51:05.352Z","comments":true,"path":"2019/07/30/ÂÖ¨‰ºóÂè∑/","link":"","permalink":"https://unpluggedcoder.me/2019/07/30/%E5%85%AC%E4%BC%97%E5%8F%B7/","excerpt":"","text":"‰πãÂâç‰∏ÄÁõ¥Êñ≠Êñ≠Áª≠Áª≠ÊäòËÖæÁöÑÂÖ¨‰ºóÂè∑‰ªäÂ§©ÊîπÂêçÊàêËá™Â∑±ÁöÑÁΩëÁªúIDÔºö‰∏çÊèíÁîµÁ†ÅÂÜú„ÄÇÁ∫ØÁ≤πÁûéËÅäÔºåÊ¨¢ËøéÊâ´(qi√°ng)Á†Å(li√®)ÂÖ≥Ê≥®„ÄÇ","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[]},{"title":"5ÂàÜÈíüËØªÊáÇ„ÄäÂØå‰∫∫ÊÄùÁª¥„Äã","slug":"5ÂàÜÈíüËØªÊáÇ„ÄäÂØå‰∫∫ÊÄùÁª¥„Äã","date":"2019-06-02T13:03:30.000Z","updated":"2022-09-20T15:48:52.272Z","comments":true,"path":"2019/06/02/5ÂàÜÈíüËØªÊáÇ„ÄäÂØå‰∫∫ÊÄùÁª¥„Äã/","link":"","permalink":"https://unpluggedcoder.me/2019/06/02/5%E5%88%86%E9%92%9F%E8%AF%BB%E6%87%82%E3%80%8A%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4%E3%80%8B/","excerpt":"„ÄäÂØå‰∫∫ÊÄùÁª¥„Äã ‰ΩúËÄÖÔºöË¥æÊ£Æ¬∑Âç°ÊãâÂç°Â∞ºÊñØÔºàJason CalacanisÔºâ ‰π¶Âêç‰∏éÂÖ∂ËØ¥ÊòØÂØå‰∫∫ÊÄùÁª¥Ôºå ‰∏çÂ¶ÇËØ¥ÊòØÔºàÂ§©‰ΩøÔºâÊäïËµÑ‰∫∫ÊÄùÁª¥„ÄÇ Âõ†‰∏∫‰ΩúËÄÖÊòØUberÁöÑÂ§©‰ΩøÊäïËµÑ‰∫∫ÔºåÈÄöËøáÂú®Â§©‰ΩøËΩÆÊäïËµÑ‰∫ÜUberÔºåÁÑ∂ÂêéËµö‰∫Ü‰∏ÄÂ§ßÁ¨î„ÄÇ‰∫∫ÁîüÊäì‰ΩèËøôÊ†∑‰∏ÄÊ¨°ÁöÑÊäïËµÑÂ∞±Ë∂≥Â§ü‰∫Ü„ÄÇ","text":"„ÄäÂØå‰∫∫ÊÄùÁª¥„Äã ‰ΩúËÄÖÔºöË¥æÊ£Æ¬∑Âç°ÊãâÂç°Â∞ºÊñØÔºàJason CalacanisÔºâ ‰π¶Âêç‰∏éÂÖ∂ËØ¥ÊòØÂØå‰∫∫ÊÄùÁª¥Ôºå ‰∏çÂ¶ÇËØ¥ÊòØÔºàÂ§©‰ΩøÔºâÊäïËµÑ‰∫∫ÊÄùÁª¥„ÄÇ Âõ†‰∏∫‰ΩúËÄÖÊòØUberÁöÑÂ§©‰ΩøÊäïËµÑ‰∫∫ÔºåÈÄöËøáÂú®Â§©‰ΩøËΩÆÊäïËµÑ‰∫ÜUberÔºåÁÑ∂ÂêéËµö‰∫Ü‰∏ÄÂ§ßÁ¨î„ÄÇ‰∫∫ÁîüÊäì‰ΩèËøôÊ†∑‰∏ÄÊ¨°ÁöÑÊäïËµÑÂ∞±Ë∂≥Â§ü‰∫Ü„ÄÇ ‰ΩúËÄÖ‰∏ªË¶ÅÂõ¥ÁªïÁöÑÊòØÂ§©‰ΩøÊäïËµÑËøô‰ª∂‰∫ãÔºå‰ª•ÊàëÁöÑÁêÜËß£Â§ßÊ¶ÇËÆ≤‰∫ÜÂá†‰ª∂‰∫ãÊÉÖÔºö Â§©‰ΩøÊäïËµÑ‰∫∫ÁöÑÁâπË¥®‚ÄúÊúÄÂ•ΩÁöÑÂ§©‰ΩøÊäïËµÑ‰∫∫ÂÖ∑Â§áÂõõÁßçËÉΩÂäõÔºöÔºà1ÔºâËÉΩÂ§üÂá∫ÂæóËµ∑Èí±ÔºõÔºà2ÔºâÂú®ÈáçË¶ÅÈóÆÈ¢ò‰∏äËÉΩ‰∏éÂàõÂßã‰∫∫ÂÖ±ËøõÈÄÄÔºõÔºà3ÔºâËÉΩÂ§üÊääÂÖ¨Âè∏‰ªãÁªçÁªôÂÆ¢Êà∑ÂíåÊäïËµÑ‰∫∫ÔºõÔºà4ÔºâËÉΩÂ§ü‰∏∫ÂÖ¨Âè∏Êèê‰æõÂèØË°åÁöÑÂª∫ËÆÆÊù•ËäÇÁúÅÂàõÂßã‰∫∫ÁöÑÊó∂Èó¥‰ª•ÂèäËµÑÈáëÔºåÊàñËÄÖËÉΩËÆ©‰ªñ‰ª¨ÂÖç‰∫éÁäØÈîô„ÄÇ‚ÄùÁÆÄÂçïÁöÑËØ¥ÔºöÊúâÈí±„ÄÅÊúâ‰∫∫ËÑâ„ÄÅÊúâÁªèÈ™åÂíåÊúâÊÉ≥Ê≥ïÔºåÂÖ∂‰∏≠ËÉåÂêéÈöêÂê´‰∏Ä‰∏™ÁâπË¥®Ë¶ÅÊ±ÇÔºåË¶ÅÊÑøÊÑèÁ§æ‰∫§„ÄÇ Á¨¨‰∫åÈÉ®ÂàÜËØ¥‰∫ÜÂàõ‰∏öËûçËµÑÁöÑ‰∏Ä‰∏™ÊµÅÁ®ãÔºå Â§ßÊ¶ÇÂ∞±ÊòØÂ§©‰ΩøÊäïËµÑ -&gt; È£éÈô©ÊäïËµÑ -&gt; ‰∏äÂ∏ÇËûçËµÑ‰πãÁ±ªÔºåÂ§©‰ΩøÊäïËµÑ‰∫∫‰∏ÄËà¨Âú®È£éÈô©ÊäïËµÑ‰∫∫Êé•ÁõòÁöÑÊó∂ÂÄôÈÄÄÂá∫ÔºåËµöÂà∞‰∏ÄÂ§ßÊ≥¢ÔºåÂΩìÁÑ∂‰πüÊúâÂ§©‰ΩøÊäïËµÑ‰∫∫Ë∑üÊäïÂà∞‰∏äÂ∏ÇÔºå‰ΩÜÊòØÂ¶ÇÊûúÂùöÊåÅ‰∏ãÂéªÔºåÈ£éÈô©Â∞±Êõ¥Â§ßÔºåËÄå‰∏îÈÄöÂ∏∏È£éÈô©ÊäïËµÑ‰∫∫‰ªãÂÖ•ÁöÑÊó∂ÂÄôÂ§©‰ΩøÊäïËµÑ‰∫∫ÁöÑËÇ°‰ªΩÂ∞±Ë¢´Á®ÄÈáä‰∫Ü„ÄÇ Á¨¨‰∏âÈÉ®ÂàÜËØ¥ÂÖ∂ÂÆûÊ≤°Èí±‰πüÂèØ‰ª•ÊêûÂ§©‰ΩøÊäïËµÑÔºåÊôÆÈÄöÂ±ÅÊ∞ëÂ¶ÇÊûúÊúâÁÇπÂ∞èÈí±‰πüÂèØ‰ª•ÂèÇ‰∏éÂà∞Â§©‰ΩøÊäïËµÑ‰∏≠Ôºå‰ΩÜÊòØÁõ∏ÊØîÁêÜË¥¢ÂíåËÇ°Á•®ÔºåËøôÁÆÄÁõ¥Â∞±ÊòØÊúÄÈ´òÈ£éÈô©ÔºàÂÅöÂ•ΩÊâìÊ∞¥ÊºÇÁöÑÂáÜÂ§áÔºâÔºåÊâÄ‰ª•‰∏ÄËà¨‰∫∫Ë¶ÅÁé©ÊúÄÂ•ΩÂè™Êãø‰∏ÄÂ∞èÈÉ®ÂàÜËµÑÈáëÁé©„ÄÇÁæéÂõΩÊúâ‰∏ÄÁßçÂè´ËÅîÂêàÊäïËµÑÁªÑÁªáÔºåÂ∞±ÊòØÁ±ª‰ºº‰ºóÁ≠πÁöÑÁΩëÁ´ôÔºàÂõΩÂÜÖ‰πüÊúâÔºâÔºåÂàõ‰∏öÂÖ¨Âè∏ÂèØ‰ª•Âú®‰∏äÈù¢ÂèëÂ∏ÉÈ°πÁõÆÔºåÊôÆÈÄö‰∫∫ÂèØ‰ª•ÊäïËµÑÔºåÁÑ∂ÂêéÁî±‰∏Ä‰∏™ËÅîÂêàÊäïËµÑ‰ª£Ë°®ÊãøÁùÄËøôÁ¨îÈí±ÂáëÊ¨æÔºåÂÖÖÂΩì‰∏Ä‰∏™Â§©‰ΩøÊäïËµÑ‰∫∫ÔºåË¥üË¥£‰ª£Ë°®ÊâÄÊúâÊôÆÈÄöÊäïËµÑËÄÖÁöÑÊùÉÁõäÔºåÁ≠æËÆ¢ÂêàÂêå‰πãÁ±ªÁöÑ„ÄÇÂàõÂßã‰∫∫‰πüË¶ÅÂÉèËÅîÂêàÊäïËµÑÂßîÂëò‰ºöÊ±áÊä•„ÄÇ‰Ωú‰∏∫Â±ÅÊ∞ëÔºåÂ¶ÇÊûú‰Ω†Âá∫Èí±‰∫ÜÔºåÊúÄÂ•Ω‰πüËä±ÁÇπÂøÉÊÄùÔºåÊääËá™Â∑±ÂΩìÂ§©‰ΩøÊäïËµÑ‰∫∫Â§öÂÖ≥ÂøÉ‰∏ãËá™Â∑±ÊäïÁöÑÂàõ‰∏öÂÖ¨Âè∏ÔºåÂ¶ÇÊûúËÉΩÊâ∂ÊåÅÊúÄÂ•Ω„ÄÇ ÊúÄÂêé‰∏ÄÈÉ®ÂàÜÂÖ∂ÂÆûÊÑüËßâÂ∞±ÊòØÊïô‰Ω†ÊÄé‰πàÈÄâÈù†Ë∞±ÁöÑÂàõÂßã‰∫∫ÔºåËøôÈáåÊ≤°ÊúâËØ¥‰ªª‰ΩïÁöÑË°å‰∏öÔºåÂõ†‰∏∫ÈÅìÁêÜÂ§ßÂÆ∂ÈÉΩÊáÇÔºåÊäïÁöÑÊòØ‰∫∫ËÄå‰∏çÊòØ‰∫ãÔºå‚Äú‰∫∫Âπ∂‰∏ç‰ª£Ë°®‰∏ÄÂàáÔºåÂç¥ÊòØÂîØ‰∏ÄÁöÑËØÑÂà§Ê†áÂáÜ‚Äù„ÄÇÈúÄË¶ÅÈóÆÂàõ‰∏öËÄÖÁöÑÂõõ‰∏™ÈóÆÈ¢òÔºö‚Äú1.ËØ•Âàõ‰∏öËÄÖ‰∏∫‰ªÄ‰πàÈÄâÊã©Ëøô‰∏™È°πÁõÆÔºü2.ËØ•Âàõ‰∏öËÄÖÁöÑÊäïÂÖ•Á®ãÂ∫¶Â¶Ç‰ΩïÔºü3.ËØ•Âàõ‰∏öËÄÖÂú®Ëøô‰∏™È°πÁõÆ‰ª•ÂèäÁîüÊ¥ª‰∏≠ÂÖ∑Â§áÂì™‰∫õÊàêÂäüÁöÑÊù°‰ª∂Ôºü4.ÊàëÁöÑÂõûÊä•ÊúâÂ§öÂ∞ëÔºü‚ÄùÁ≠âÁ≠â‰πãÁ±ªÁöÑËÄÉÊ†∏Ôºå‰ª•ÂèäË∞à‰∫ÜÂæàÂ§öÂàõ‰∏öËÄÖÈúÄË¶ÅÂÖ∑Â§áÁöÑÁâπË¥®ÔºåËøô‰∫õÂÜÖÂÆπÂú®ÂÖ∂ÂÆÉÂæàÂ§öÁöÑÂàõ‰∏ö‰π¶Á±çÈáåÂèØ‰ª•ÁúãÂà∞ÔºåÂ∞±‰∏ç‰∏Ä‰∏ÄÂàóÂá∫„ÄÇ‰ΩÜÊòØÂØπÂ§©‰ΩøÊäïËµÑ‰∫∫Êù•ËØ¥Ôºå‰ΩúËÄÖÂèçÂ§çÊèêÂà∞‰∫Ü‰∏Ä‰∏™ÂÖ≥ÈîÆËØç‚ÄúÂêåÊØî‰æãË∑üÊäïÊùÉ‚Äù„ÄÇ‰πüÂ∞±ÊòØ‰∏äÈù¢ËØ¥ÁöÑÂà∞‰∫ÜÈ£éÈô©ÊäïËµÑÈò∂ÊÆµÔºåÂàõÂßã‰∫∫Â∫îËØ•ÁªôÂ§©‰ΩøÊäïËµÑ‰∫∫‰ºòÂÖàÁöÑÂêåÊØî‰æãË∑üÊäïÊùÉÔºåËÄåÂ§©‰ΩøÊäïËµÑ‰∫∫ÂàôÂèØ‰ª•ÈÄâÊã©Âä†Á†ÅÊäïËµÑÔºå‰øùÈöúÂ§©‰ΩøÊäïËµÑ‰∫∫ÁöÑÂç†ÊØî‰∏ç‰ºöË¢´Á®ÄÈáä„ÄÇÂ¶ÇÊûúÂØπÂ§©‰ΩøÊäïËµÑ‰∫∫ÈÉΩÂÅö‰∏çÂà∞ËøôÁÇπÁöÑÂàõÂßã‰∫∫ÔºåÈÇ£ÂèØ‰ª•ËÆ§ÂÆö‰∏∫‰∫∫ÂìÅÊúâÈóÆÈ¢òÔºå‰∏çÂÄºÂæóÊäïËµÑ„ÄÇÊúÄÂ•ΩÊääËøô‰∏™ÂÜôËøõÂ§©‰ΩøÊäïËµÑÁöÑÂçèËÆÆÈáå„ÄÇ ËôΩÁÑ∂‰π¶ÂêçÊúâ‰∫õËØØÂØºÔºå‰ΩÜÊòØ‰πüÁÆóÊòØ‰∫ÜËß£Âà∞‰∫ÜÂàõÂßã‰∫∫ÂíåÂ§©‰ΩøÊäïËµÑÁöÑ‰∏§ÁßçËßíËâ≤ÁöÑ‰∏Ä‰∫õÁü•ËØÜÔºåÂº•Ë°•‰∫ÜËøôÊñπÈù¢Áü•ËØÜÁöÑÁ©∫ÁôΩ„ÄÇ","categories":[{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"}],"tags":[{"name":"ÂØå‰∫∫ÊÄùÁª¥","slug":"ÂØå‰∫∫ÊÄùÁª¥","permalink":"https://unpluggedcoder.me/tags/%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/"}]},{"title":"[ËØë]ËΩØ‰ª∂ÊÄßËÉΩ‰ªçÁÑ∂ÈáçË¶ÅÂêóÔºü","slug":"[ËØë]ËΩØ‰ª∂ÊÄßËÉΩ‰ªçÁÑ∂ÈáçË¶ÅÂêóÔºü","date":"2019-03-27T15:03:30.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2019/03/27/[ËØë]ËΩØ‰ª∂ÊÄßËÉΩ‰ªçÁÑ∂ÈáçË¶ÅÂêóÔºü/","link":"","permalink":"https://unpluggedcoder.me/2019/03/27/[%E8%AF%91]%E8%BD%AF%E4%BB%B6%E6%80%A7%E8%83%BD%E4%BB%8D%E7%84%B6%E9%87%8D%E8%A6%81%E5%90%97%EF%BC%9F/","excerpt":"","text":"Êú¨ÊñáÁî±Daniel LemireÂèëË°®‰∫é2017&#x2F;03&#x2F;20, ÂéüÊñáÈìæÊé•Âú®Ê≠§„ÄÇ ‰ªäÂ§©Êó©‰∏äÔºå‰∏Ä‰ΩçËØªËÄÖËØ∑ÊïôÊàëÂÖ≥‰∫éÁé∞ÂÆû‰∏ñÁïåÈáåËΩØ‰ª∂ÊÄßËÉΩÁöÑËØùÈ¢òÔºö ÊàëÂØπ‰Ω†Âà©Áî®ËÆ°ÁÆóÊú∫Êû∂ÊûÑÁõ∏ÂÖ≥ÊäÄÊúØÊù•‰ºòÂåñÁÆóÊ≥ïÊÄßËÉΩÁöÑÂ∑•‰ΩúÂæàÊÑüÂÖ¥Ë∂£„ÄÇÁÑ∂ËÄåÔºåÊàëËßâÂæóËøôÁßç‰∏úË•øÂè™ÊúâÂ≠¶ÊúØÁïåÊØîËæÉÊÑüÂÖ¥Ë∂£„ÄÇ‰Ω†ËßâÂæóËøôÁßçÁâπÊÆäÁöÑÈ¢ÜÂüüÊúâ‰ªÄ‰πàÂ∞±‰∏öÊú∫‰ºöÂêóÔºü Áî®Ëøô‰ΩçËØªËÄÖÁöÑËØùÊù•ËØ¥ÔºåËÆ°ÁÆóÊú∫ÂíåËΩØ‰ª∂Â∑≤ÁªèÂ§üÂø´‰∫Ü„ÄÇÊàë‰ª¨ÂèØËÉΩÊõ¥ÈúÄË¶Å‰∫∫‰ª¨ÂéªÂÆûÁé∞Êñ∞ÁöÑÂàõÊÑèÔºåËÄåÊÄßËÉΩÂπ∂‰∏çÈáçË¶Å„ÄÇÊõ¥ÊúâÁîöËÄÖËØ¥ÔºåÂ¶ÇÊûúÊÉ≥Ë¶ÅÂæóÂà∞È´òÈÖ¨Âä≥ÁöÑÂ∑•‰ΩúÔºåÂ∞±‰∏çÈúÄË¶ÅÂÖ≥ÂøÉËΩØ‰ª∂ÊÄßËÉΩ„ÄÇ Ë¶ÅËØÑ‰ª∑Ëøô‰∏™ÈóÆÈ¢òÔºåÊàë‰ª¨È¶ñÂÖàÂøÖÈ°ªÂ∞±‚ÄúËΩØ‰ª∂ÊÄßËÉΩÂà∞Â∫ïÊòØ‰ªÄ‰πàÔºü‚ÄùËææÊàêÂÖ±ËØÜ„ÄÇËΩØ‰ª∂ÊÄßËÉΩÂπ∂‰∏çÊòØËØ¥‰Ω†ËÉΩÂ§üÂ§öÂø´Âú∞Â§ÑÁêÜ‰∏ÄÂ†ÜÊï∞Â≠ó„ÄÇÂ∫îËØ•ÊòØ‰Ω†Â¶Ç‰ΩïÁÆ°ÁêÜÂÜÖÂ≠ò„ÄÅÁ£ÅÁõò„ÄÅÁΩëÁªúÂíåCPUÁ≠â‚Ä¶ËøôËøòÂÖ≥Á≥ªÂà∞Êï¥‰∏™Êû∂ÊûÑ„ÄÇ‰πüÂπ∂‰∏çÊòØË¶ÅÊ±ÇÁî®Êú∫Âô®Á†ÅÂéªÈáçÂÜô‰Ω†ÁöÑ‰ª£Á†ÅÔºö ‰Ω†ÂèØ‰ª•Áî® JavaScript ÂéªÂÜôÂø´ÈÄüÂ∫îÁî®ÈÉ®ÂàÜÔºåÁî® C++ ÂéªÂÜôËøêË°åÊÖ¢ÈÄüÁöÑÈÇ£ÈÉ®ÂàÜ„ÄÇËΩØ‰ª∂ÊÄßËÉΩÂíåËÆæËÆ°ÁÆóÊ≥ïÊúâÂÖ≥Ôºå‰ΩÜÊòØÂèàÊúâ‰∏ÄÁÇπÂæàÈáçË¶ÅÁöÑÂå∫Âà´Ôºö‰Ω†ÂøÖÈ°ªÊää‰Ω†ÁöÑÊû∂ÊûÑËÄÉËôëÂú®ÂÜÖ„ÄÇÂæàÂ§öÁÆóÊ≥ïÂú®ÁêÜËÆ∫‰∏äÁúã‰∏äÂéªÂæà‰ºòÁßÄÔºå‰ΩÜÊòØÂÆûÈôÖËøêË°åËµ∑Êù•ÊÄßËÉΩÂæàÊ∏£„ÄÇËÄåÈÇ£‰∫õÁúã‰∏äÂéªÂæàÂÇªÂæàÂ§©ÁúüÁöÑÁÆóÊ≥ïÊúâÊó∂ÂÄôÂç¥ÊòØÊÄßËÉΩÁöÑÊúÄ‰Ω≥ÈÄâÊã©„ÄÇÊüêÁßçÂ±ÇÈù¢‰∏äÊù•ËØ¥ÔºåÊéåÊè°ËΩØ‰ª∂ÊÄßËÉΩÂÆûÈôÖ‰∏äË¶ÅÊ±Ç‰Ω†ÂØπËÆ°ÁÆóÊú∫Á°¨‰ª∂„ÄÅÊìç‰ΩúÁ≥ªÁªüÂíåËøêË°åÊó∂Â∫ìÂ¶Ç‰ΩïÂ∑•‰ΩúÊúâÈùûÂ∏∏Ê∑±ÂàªÁöÑÁêÜËß£Ôºå So, ÈÉΩ7102Âπ¥‰∫ÜÔºåÊàë‰ª¨ËøòË¶ÅcareËΩØ‰ª∂ÊÄßËÉΩ‰πàÔºü ÊàëÁöÑÁÆÄÂçïÂõûÁ≠îÊòØËøôÊ†∑„ÄÇÊàë‰ª¨ËØÑ‰ª∑‰∏Ä‰∏™Á®ãÂ∫èÂëòÁöÑ‰∏§‰∏™Âü∫Êú¨ÁÇπÊòØÔºö‰Ω†ÂÜôÁöÑ‰ª£Á†ÅÊòØÂê¶Ê≠£Á°ÆËøêË°åÔºü‰Ω†ÂÜôÁöÑ‰ª£Á†ÅÊòØÂê¶È´òÊïàÔºüÂΩìÁÑ∂Á®ãÂ∫èÂëòËøòÊúâÂÖ∂ÂÆÉÁöÑÊñπÂºèË¥°ÁåÆ‰ª∑ÂÄºÔºöÊØîÂ¶ÇËØ¥Âà©Áî®Êüê‰∫õ‰∏öÂä°È¢ÜÂüüÁöÑÁªèÈ™åÂàõÈÄ†‰ª∑ÂÄºÊàñËÄÖËÆæËÆ°Âá∫ÊÉäËâ≥ÁöÑUIÁïåÈù¢„ÄÇÁÑ∂ËÄåÔºåÂú®Á°¨Ê†∏ÁºñÁ®ãÈÉ®ÂàÜÔºåÂáÜÁ°ÆÂíåÈ´òÊïàÊòØ‰∏§‰∏™‰∏ªË¶ÅÁöÑÂõ†Á¥†„ÄÇ ÁúãÁúã‰ºüÂ§ßÁöÑÁ®ãÂ∫èÂëòÊòØÊÄéÊ†∑ÁöÑ„ÄÇ‰ªñ‰ª¨ÂæàÊìÖÈïøÁºñÂÜôÂç≥Ê≠£Á°ÆÂèàÈ´òÊïàÁöÑËΩØ‰ª∂„ÄÇÂÆûÈôÖ‰∏äËøôÂ∞±ÊòØ‰∏Ä‰∏™‰ºüÂ§ßÁ®ãÂ∫èÂëòÁöÑÂÆö‰πâ„ÄÇÂΩì‰Ω†ÂêåÊó∂ÂÅöÂà∞ÂáÜÁ°ÆÂíåÈ´òÊïàÊó∂ÁºñÁ®ãÊâçÊòØ‰∏Ä‰ª∂ÊúâÊåëÊàòÊÄßÁöÑ‰∫ãÊÉÖ„ÄÇÂ¶ÇÊûúÂÖÅËÆ∏‰Ω†ÂéªÁâ∫Áâ≤‰ªª‰Ωï‰∏Ä‰∏™ÔºåÈÇ£‰Ω†ÂèØ‰ª•ÂéªËß£ÂÜ≥ËÆ∏Â§öÁöÑ‰ªªÂä°‰∫Ü„ÄÇ Âú®ÊãõËÅòÁöÑÊèèËø∞ÈáåÔºå‰Ω†ÂèØËÉΩ‰∏ç‰ºöÁúãÂà∞Â§™Â§öÂØπÁ®ãÂ∫èÂëòÈ´òÊïàÁºñÁ†ÅÁöÑË¶ÅÊ±ÇÔºåÂêåÊ†∑‰πü‰∏ç‰ºöÁúãÂà∞Â§™Â§öË¶ÅÁ®ãÂ∫èÂëòÁºñÂÜôÊ≠£Á°ÆËøêË°å‰ª£Á†ÅÁöÑË¶ÅÊ±Ç„ÄÇ‰ΩÜÊòØ‰∫éÊ≠§ÂêåÊó∂Ôºå‰Ω†‰πü‰∏ç‰ºöÁúãÂà∞ÂåªÁîüÁöÑÊãõËÅòË¶ÅÊ±ÇÂÜôÁùÄËÉΩÊ≤ªÊÑàÊÇ£ËÄÖÔºåÂæãÂ∏àÁöÑÊãõËÅòË¶ÅÊ±ÇÂÜôÁùÄËÉΩÁªôÈÅøÂÖçÊòÇË¥µÁöÑËØâËÆºË¥π„ÄÇ‰ªéÁ≥ªÁªüÊû∂ÊûÑÁöÑËßíÂ∫¶ÂéªÁºñÂÜôÈ´òÊïàÁöÑ‰ª£Á†ÅÊòØ‰∏ÄÂêçÁ®ãÂ∫èÂëòÁöÑÂü∫Êú¨Â∑•‰ΩúË¶ÅÊ±Ç„ÄÇ Êàë‰∏Ä‰∫õÊõ¥ËØ¶ÁªÜÁöÑÊÄùËÄÉÔºö ÂÖ≥‰πéËΩØ‰ª∂ÊÄßËÉΩÁöÑÂè™ÊúâÈÇ£‰∏ÄÂ∞èÈÉ®ÂàÜ‰ª£Á†Å„ÄÇÊõ¥Âú®‰πéÁöÑÊòØÂÆÉÁöÑÁªùÂØπ‰ª∑ÂÄºÔºåËÄåÈùûÁõ∏ÂØπ‰ª£Á†ÅÊï∞Èáè„ÄÇ Â¶ÇÊûú‰Ω†Âè™ÊúâÂæàÂ∞ëÁöÑÁî®Êà∑ÂíåÊï∞ÊçÆÔºåÈÇ£ËΩØ‰ª∂ÊÄßËÉΩÊó†Ë∂≥ËΩªÈáç„ÄÇË∂äÈáçË¶ÅÁöÑËΩØ‰ª∂ÔºåÊÄßËÉΩÈóÆÈ¢ò‰πüÂèòÂæóÊõ¥ÈáçË¶Å„ÄÇ Èâ¥‰∫éÊàë‰ª¨ÁºñÂÜôÁöÑËΩØ‰ª∂‰∏≠Êúâ90%ÂÆûÈôÖ‰∏äÈÉΩÂæàÂ∞ëÂú®Â∑•‰ΩúÔºåÂ§ßÈÉ®ÂàÜÊÉÖÂÜµ‰∏ãÊàë‰ª¨ÂèØ‰ª•ÂéªËµåËΩØ‰ª∂ÊÄßËÉΩ‰∏çÈáçË¶ÅÔºå‰ΩÜËøô‰πüÂè™ÊòØÂ§ßÈÉ®ÂàÜÊÉÖÂÜµ‰∏ã‚Ä¶ Âú®Ëøô‰∫õÂú∫ÊôØ‰∏ãËΩØ‰ª∂Â∏¶Êù•ÁöÑ‰ª∑ÂÄºÂæàÂ∞ë„ÄÇ ËÆ©Êàë‰ª¨ËÆ≤ÂæóÊõ¥ÂáÜÁ°Æ‰∏Ä‰∫õÔºöÁªùÂ§ßÂ§öÊï∞ÊÄßËÉΩÊàñÂÜÖÂ≠ò‰ºòÂåñÊòØÊó†Áî®Âäü„ÄÇ Ëøô‰∏çÊòØ‰ªÄ‰πàËôöÊûÑÔºåËøôÊòØ‰∫ãÂÆû„ÄÇ ‰∏ÄÂ§ßÂ†ÜÁöÑËΩØ‰ª∂ÁîüÊù•Â∞±‰∏çÊòØËøΩÊ±ÇÊÄßËÉΩÊàñËÄÖ‰∏çÂÄºÂæó‰∏∫ÊÄßËÉΩËÄå‰ªòÂá∫ÁöÑ„ÄÇÂ∏ïÁ¥ØÊâòÊ≥ïÂàôÂëäËØâ‰Ω†20%ÁöÑ‰ª£Á†ÅÊ∂àËÄó80%ÁöÑËøêË°åÊó∂Èó¥Ôºå‰ΩÜÊòØÊàëËÆ§‰∏∫ÊØîËøô‰∏™ËøòÁ≥ü„ÄÇÊàëËÆ§‰∏∫1%ÁöÑ‰ª£Á†ÅÂç†Áî®‰∫Ü99%ÁöÑËøêË°åÊó∂Èó¥‚Ä¶‚Ä¶‰∫ãÂÆûÂèØËÉΩÊõ¥ÊûÅÁ´Ø„ÄÇ ÊâÄ‰ª•Âè™Êúâ‰∏ÄÂ∞èÈÉ®ÂàÜ‰ª£Á†ÅÊâçÂÖ≥‰πéÊÄßËÉΩÔºåËÄå‰∏îÂÖ∂‰∏≠ÁöÑÊõ¥‰∏ÄÂ∞èÈÉ®ÂàÜÊâçÂ∏¶Êù•ÂïÜ‰∏ö‰ª∑ÂÄº„ÄÇ ‰ΩÜÈáçË¶ÅÁöÑÊòØÔºåÂ¶ÇÊûú‰Ω†ÊòØÂëòÂ∑•Ôºå‰Ω†ÁöÑ‰ª∑ÂÄºÂèñÂÜ≥‰∫é‰Ω†ÂØπ‰ºòÂåñ‰∏öÂä°‰ª£Á†ÅÊâÄÂ∏¶Êù•ÁöÑ‰ª∑ÂÄºÔºåËÄå‰∏çÊòØ‰ª•‰Ω†Êé•Ëß¶Âà∞ÁöÑ‰ª£Á†ÅÂ§öÂ∞ëÊù•Ë°°Èáè„ÄÇ Êàë‰ª¨ÂèØ‰ª•ÈáèÂåñËΩØ‰ª∂ÊÄßËÉΩÁöÑ‰ª∑ÂÄºÔºåËÄå‰∏îÈùûÂ∏∏ÂÖ∑Êúâ‰ª∑ÂÄº„ÄÇ Â¶ÇÊûúÊàëÂéªËãπÊûúÁöÑÂÆòÁΩëË¥≠‰π∞‰∏ÄÂè∞MacBook Pro„ÄÇÂü∫Á°ÄÊ¨æ$1800„ÄÇÂ¶ÇÊûúÊàëÊÉ≥Ë¶Å‰∏Ä‰∏™CPU‰∏ªÈ¢ëÈ´ò10%ÁöÑÂûãÂè∑ÔºåÂ∞ÜËä±Ë¥π$2100ÔºàÂä†‰ª∑+15%Ôºâ„ÄÇ‰ªÖ‰ªÖ10%ÁöÑ‰∏ªÈ¢ëÈÄüÂ∫¶ÊèêÂçáÂπ∂‰∏çËÉΩÂÆåÂÖ®Êé•Ëøë10%ÁöÑÈÄüÂ∫¶ÊèêÂçá„ÄÇÊàë‰ª¨Âè™ËÉΩËØ¥Â§ßÊ¶Ç‰ºöÂø´5%„ÄÇÂõ†Ê≠§‰∏∫‰∫ÜËÆ©ËÆ°ÁÆóÊú∫Âø´5%ÔºàÂ¶ÇÊûúÊúâÁöÑËØùÔºâÊúâ‰∫õ‰∫∫Êõ¥ÊÑøÊÑè‰ªòÂá∫Â§ö15%ÁîöËá≥Êõ¥È´òÁöÑ‰ª∑Ê†º„ÄÇÂØπÊâãÊú∫Êù•ËØ¥ÂÆåÂÖ®‰πüÂèØ‰ª•ÂêåÊ†∑Ëøô‰πàÂàÜÊûê„ÄÇ Â¶ÇÊûúËØ¥‰∏éÊÄßËÉΩÁõ∏ÂÖ≥ÁöÑÂ∏∏ÈáèÂõ†Á¥†‰∏çÈáçË¶ÅÁöÑËØùÔºåÈÇ£‰πàËÆ©ËÆ°ÁÆóÊú∫ÂÆûÁé∞‰∏§ÂÄçÈÄüÁöÑÊèêÂçáÂ∫îËØ•ÊúâÂêåÁ≠â‰ª∑ÂÄºÁöÑ‰ΩìÁé∞„ÄÇÂÆûÈôÖ‰∏äÂ∞±ÊòØËØ¥ÔºåÂ¶ÇÊûú‰∏ÄÂè∞ËÆ°ÁÆóÊú∫ËÉΩÂ§ü‰ª•‰∏§ÂÄçÈÄüËøêË°åÔºåÈÇ£‰πàÂÆÉÁöÑ‰ª∑Ê†ºÂêåÊ†∑‰πüÂ∫îËØ•ÂÄº‰∏§ÂÄç„ÄÇ Â∞±‰∫ëËÆ°ÁÆóÊù•ËØ¥ÔºåÁé∞Âú®ÂÖ¨Âè∏ÁªèÂ∏∏‰ª•‰ªñ‰ª¨‰ΩøÁî®ÁöÑËµÑÊ∫êÔºàÂÜÖÂ≠ò„ÄÅËÆ°ÁÆóÊó∂Èó¥ÔºâÊù•‰ªòË¥π„ÄÇËøôÂ∞±ÂÖÅËÆ∏‰ªñ‰ª¨ÂæàÊñπ‰æøÂú∞Ë°°ÈáèÔºàÁæéÂÖÉÔºâÁªôÂÆö‰ºòÂåñÂ∏¶Êù•ÁöÑÊî∂Áõä„ÄÇÊàë‰ª¨ÂèØ‰ª•ÁúãÂà∞Â∞èÂÖ¨Âè∏Â¶Ç‰ΩïÂà©Áî®ÂàùÁ∫ß‰ºòÂåñÊâãÊÆµËäÇÁúÅÊï∞ÁôæÁîöËá≥Êï∞ÂçÉÁæéÂÖÉ„ÄÇ Êàë‰ª¨‰πüÂèØ‰ª•ÁúãÁúãÊµèËßàÂô®„ÄÇÈïø‰πÖ‰ª•Êù•ÔºåÂæÆËΩØ‰∏ÄÁõ¥‰ª•IEÊµèËßàÂô®È¢ÜÂÖà„ÄÇÂú®ÂæàÂ§öÂÖ≥ÈîÆÂ∏ÇÂú∫ÔºåË∞∑Ê≠åChromeÊµèËßàÂô®Áé∞Âú®Â∑≤Áªè‰∏ªÂÆ∞‰∫Ü„ÄÇ‰∫∫‰ª¨ÈÄâÊã©Ë∞∑Ê≠åChromeÊµèËßàÂô®ÊúâÂæàÂ§öÂéüÂõ†Ôºå‰ΩÜÊòØÈÄüÂ∫¶ÊòØ‰∏Ä‰∏™ÂÖ≥ÈîÆÂõ†Á¥†„ÄÇ‰∏∫‰∫ÜÈ™åËØÅÊàëÁöÑÁêÜËÆ∫ÔºåÊàëÂú®Ë∞∑Ê≠å‰∏äÊêú‰∫Ü‰∏ãÔºöÂ∏ÆÊàëÈÄâÊã©ChromeËøòÊòØIEÔºåÊàëÁúãÂà∞ÁöÑÁ¨¨‰∏Ä‰∏™Êé®ËçêÊòØ‰∏ãÈù¢Ëøô‰∏™Ôºö ChromeÊòØÁêÜËÆ∫‰∏äÈÄüÂ∫¶ÊúÄÂø´ÁöÑÊµèËßàÂô®ÔºåÊúÄÂÖ≥ÈîÆÁöÑÂäüËÉΩÊòØÂÆÉÊõ¥Â§üÂø´ÈÄüÂú∞Âä†ËΩΩÁΩëÈ°µ„ÄÇÊàë‰ª¨Áî®Sunspider„ÄÅOctaveÂíåHTML 5ÊµãËØïÂØπChromeÂíåIEÊµèËßàÂô®ÂÅö‰∫Ü‰∏ÄÁ≥ªÂàóÁöÑÊÄßËÉΩÊµãËØï„ÄÇÂú®ÊØè‰∏ÄÈ°πÊåáÊ†á‰∏≠ÔºåË∞∑Ê≠åChromeÈÉΩÈÅ•ÈÅ•È¢ÜÂÖà„ÄÇ Âõ†Ê≠§ÔºåÊÄßËÉΩÂØπÂæàÂ§öÁî®Êà∑Êù•ËØ¥ÊòØÊúâ‰ª∑ÂÄºÁöÑ„ÄÇ Ê∑ªÂä†Êõ¥Â§öÁöÑÁ°¨‰ª∂Âπ∂‰∏ç‰ºöÁ•ûÂ•áËà¨Âú∞ËÆ©ÊÄßËÉΩÈóÆÈ¢òÊ∂àÂ§±„ÄÇÂÆÉÈúÄË¶ÅÁî®Â∑•Á®ãÊñπÊ≥ïÂéªÂà©Áî®Êõ¥Â§öÁöÑÁ°¨‰ª∂„ÄÇ Êúâ‰∫∫ÂèçÂØπËØ¥ÔºåÊÖ¢ÁöÑÊó∂ÂÄôÊàë‰ª¨ÊÄªÊòØÂèØ‰ª•Â†ÜÂè†Êõ¥Â§öÁöÑÊú∫Âô®„ÄÅÊ†∏Êï∞„ÄÇÁÑ∂ËÄåÂç≥‰ΩøÈòøÂßÜËææÂ∞îÂÆöÂæã‰∏çÈôêÂà∂‰Ω†Ôºå‰Ω†‰ªçÁÑ∂Ë¶ÅÈù¢ÂØπÊó†Ê≥ïËÆ©‰Ω†ÁöÑËΩØ‰ª∂Âú®Â§öÂè∞Êú∫Âô®‰∏äËâØÂ•ΩËøêË°åÁöÑ‰∫ãÂÆû„ÄÇÂ†ÜÂè†Á°¨‰ª∂Âè™ÊòØÊèêÂçáËΩØ‰ª∂ÊÄßËÉΩÁöÑ‰∏Ä‰∏™ÁâπÊÆäÊñπÊ≥ï„ÄÇÂÆÉÊú™ÂøÖÊòØ‰∏™Âªâ‰ª∑ÁöÑÊñπÊ≥ï„ÄÇ ÂèØ‰ª•ËØ¥Áé∞ÂÆû‰∏ñÁïåÈáåÊ≤°‰∫∫ËÉΩÂ§üÊã•ÊúâÊó†Á©∑Â§öÁöÑÂ§ÑÁêÜÂô®„ÄÇÊ≠§Â§ñÔºåÂΩì‰Ω†ÊúâÂ§ö‰∏™Â§ÑÁêÜÂô®Êó∂ÔºåÂçèÂêåÈóÆÈ¢ò‰ºöËÆ©‰Ω†Âú®Â§ö‰∏™Â§ÑÁêÜÂô®‰∏äÂ§ÑÁêÜÂêå‰∏Ä‰∏™ÈóÆÈ¢ò‰∏äÊõ¥Âä†Â§çÊùÇÔºàÂç≥‰ΩøÂú®ÁêÜËÆ∫‰∏ä‰πüÊòØÂ¶ÇÊ≠§Ôºâ„ÄÇ Êàë‰ª¨ÂèàÊòØÂ¶Ç‰ΩïÂÆûË∑µÁöÑÂë¢ÔºüËøáÂéªÁöÑÂá†ÂçÅÂπ¥ÂëäËØâÊàë‰ª¨Âπ∂Ë°åÂ§ÑÁêÜÈóÆÈ¢òÊòØ‰ª∂Âõ∞ÈöæÁöÑ‰ªªÂä°„ÄÇ‰Ω†ÊúÄÁªà‰ºöÈÅáÂà∞Êõ¥Âä†Â§çÊùÇÁöÑ‰ª£Á†ÅÂíåÈ´òÊòÇÁöÑÂºÄÈîÄ„ÄÇÊµãËØïÂíåË∞ÉËØïÂèòÂæóÊõ¥Âä†Âõ∞Èöæ„ÄÇÂΩìÈù¢‰∏¥ËÆ∏Â§öÈóÆÈ¢òÁöÑÊó∂ÂÄôÔºå‰Ω†Â¶ÇÊûúËÉΩÂ§üÁî®‰∏â‰∏™Ê†∏Êï∞Êç¢Âèñ‰∏§ÂÄçÁöÑÊÄßËÉΩÊèêÂçáÔºåÈÇ£Â∑≤ÁªèÂæàÂπ∏Ëøê‰∫Ü„ÄÇÊé•ÁùÄÂ¶ÇÊûú‰Ω†ÊÉ≥ÂÜçËÆ©ÊÄßËÉΩÁøªÂÄçÔºå‰º∞ËÆ°‰Ω†ÂæóÈúÄË¶Å16Ê†∏CPU‰∫Ü„ÄÇ ËøôÊÑèÂë≥ÁùÄÂ¶ÇÊûúÂçïÁ∫øÁ®ãÊÄßËÉΩÊèêÂçá‰∏§ÂÄçÔºåÂ∞Ü‰ºöÂèòÂæóÈùûÂ∏∏Êúâ‰ª∑ÂÄº„ÄÇÊç¢Âè•ËØùËØ¥ÔºåË∞É‰ºòÁÉ≠ÁÇπ‰ª£Á†ÅÁöÑÊÑè‰πâÊõ¥Â§ß‚Ä¶‚Ä¶ ËÄå‰∏îÊ∑ªÂä†Êõ¥Â§öÁöÑÁ°¨‰ª∂Âπ∂‰∏ç‰ºöËÆ©ÊÄßËÉΩÈóÆÈ¢òÁ•ûÂ•áËà¨Âú∞Ê∂àÂ§±Ôºå‰ΩøÁî®Ëøô‰∫õÁ°¨‰ª∂ÈúÄË¶ÅÈ¢ùÂ§ñÁöÑÂ§ÑÁêÜÂ∑•‰Ωú„ÄÇ Êàë‰ª¨‰ΩøÁî®È´òÁ∫ßÁºñÁ®ãËØ≠Ë®ÄÔºå‰ΩÜÊòØÂú®Âº•Ë°•ÊÄßËÉΩÁº∫Â§±‰∏äÊäïÂÖ•‰∫ÜÂ§ßÈáèÁöÑÂ∑•Á®ãÁ≤æÂäõ„ÄÇ ÂΩì‰ªäÊúÄÊµÅË°åÁöÑÁºñÁ®ãËØ≠Ë®ÄÊòØJavaScriptÔºå‰∏Ä‰∏™Áõ∏ÂØπÊØîËæÉÊÖ¢ÁöÑÁºñÁ®ãËØ≠Ë®Ä„ÄÇËøôÈöæÈÅìÊ†áÂøóÁùÄÊÄßËÉΩ‰∏çÈáçË¶ÅÔºüÂú®ËøáÂéªÂá†Âπ¥ÈáåJavaScriptÁöÑÊÄßËÉΩÊàêÂÄçÊèêÂçáËÉåÂêéÊòØÂ§ßÈáèÁöÑÂ∑•Á®ãÊäïÂÖ•„ÄÇÊ≠§Â§ñÔºåÊàë‰ª¨Ê≠£Âú®Êé®Âä®‰∏Ä‰∫õÈ´òÊÄßËÉΩÁöÑÁΩëÁªúÁºñÁ®ãÊäÄÊúØÔºå‰æãÂ¶ÇWeb AssemblyÔºàÂèÇËßÅËøô‰∏™ËßÜÈ¢ëÔºâ„ÄÇÂ¶ÇÊûúÊÄßËÉΩ‰∏çÈáçË¶ÅÔºåËøô‰∫õÂ∞ÜÂèòÂæóÊ≤°ÊúâÊÑè‰πâ„ÄÇ ‰∫ãÂÆû‰∏äÔºåÈöèÁùÄÊó∂Èó¥Êé®ÁßªÔºå‰∫∫‰ª¨ËøÅÁßªÂà∞Êõ¥Âä†È´òÁ∫ßÁöÑËØ≠Ë®Ä„ÄÇËøôÊòØ‰ª∂Â•Ω‰∫ã„ÄÇËøô‰∫õËØ≠Ë®ÄÈÄöÂ∏∏‰ª•Áâ∫Áâ≤ÊÄßËÉΩÊù•Êç¢Âèñ‰æøÂà©ÊÄß„ÄÅÂÆâÂÖ®ÊÄßÊàñÁÆÄÊòìÊÄß„ÄÇ ËôΩÁÑ∂Âú®ËøáÂéªÁöÑÂçÅ‰∫îÂπ¥ÈáåÔºåÊµèËßàÂô®‰∏≠ÁöÑJavaScriptÊÄßËÉΩÊèêÈ´ò‰∫Ü‰∏§‰∏™Êï∞ÈáèÁ∫ß„ÄÇ‰ΩÜÊòØÔºåÂú®‰∏Ä‰∫õËØÑ‰º∞‰∏≠JavaScriptÂè™ÊúâC++ÁöÑÂçÅÂàÜ‰πã‰∏ÄÊÄßËÉΩ„ÄÇ ÊàëËÆ§‰∏∫JavaScriptÊµÅË°åÁöÑ‰∏Ä‰∏™ÈáçË¶ÅÂéüÂõ†Ê≠£ÊòØÂÖ∂ËâØÂ•ΩÁöÑÊÄßËÉΩ„ÄÇÂ¶ÇÊûúJavaScriptÂú®Â§ßÂ§öÊï∞‰ªªÂä°‰∏≠‰ªçÁÑ∂ÊØîC++ÊÖ¢1000ÂÄçÔºåÈÇ£‰πàÂÆÉÂ∞±‰∏çÂèØËÉΩÂÉèÁé∞Âú®ËøôÊ†∑ÁöÑÊµÅË°å„ÄÇ ÂéªÂπ¥Ôºå‰∏Ä‰∏™Âêå‰∫ãÈÅáÂà∞‰∏Ä‰∏™‰ªøÁúüÁöÑÊÄßËÉΩÈóÆÈ¢òÔºåÁ®ãÂ∫è‰∏ÄÁõ¥Âú®Êó†Â∞ΩÂú∞ËøêË°å„ÄÇÂΩìÊàëÈóÆÂ•πÊòØÁî®‰ªÄ‰πàÁºñÁ®ãËØ≠Ë®ÄÊó∂ÔºåÂ•πÊÉ≠ÊÑßÂú∞ËØ¥ÊòØÁî®PythonÂÜôÁöÑ„ÄÇ‰πüËÆ∏‰ª§Â•πÊÉäËÆ∂ÁöÑÊòØÔºåÊàëÊ≤°ÊúâË°®Á§∫Âá∫‰ªª‰Ωï‰∏çÂ±ë„ÄÇÂú®20Âπ¥ÂêéÔºåÂ¶ÇÊûúÊàë‰ª¨Â§ßÂ§öÊï∞‰∫∫‰ªçÁÑ∂Áî®CÔºåC++ÂíåJavaÁºñÁ®ãÔºåÈÇ£ÊàëÊâç‰ºöÊ≤Æ‰∏ß„ÄÇ ‰Ω†ÂÄºÂæó‰∏∫Êõ¥Â•ΩÁöÑÊÄßËÉΩÂíåÊõ¥È´òÊïàÁöÑÁîü‰∫ßÂäõ‰π∞Âçï„ÄÇ ËÆ°ÁÆóÊú∫Ë¢´Ë¶ÅÊ±ÇÁî®Êõ¥Â∞ëÁöÑËµÑÊ∫êÂÅöÊõ¥Â§öÁöÑ‰∫ãÊÉÖÔºåËÄå‰∏îÂú®ÊÄßËÉΩÊñπÈù¢Ê∞∏ËøúÊúâÁùÄÊó†Â∞ΩÁöÑÈúÄÊ±Ç„ÄÇ ËΩØ‰ª∂ÊÄßËÉΩÁªèÂ∏∏Ë¢´ËÆ§‰∏∫ÊòØÊó†ÂÖ≥Á¥ßË¶ÅÁöÑ„ÄÇÊ†πÊçÆÊë©Â∞îÂÆöÂæãÔºåËøôÊòØÂÆåÂÖ®ÂèØ‰ª•ÁêÜËß£ÁöÑÔºöÂ§ÑÁêÜÂô®Êõ¥Âø´ÔºåÁ£ÅÁõòÊõ¥Âø´‚Ä¶‚Ä¶ Ë∞ÅÂú®‰πéËΩØ‰ª∂ÊÖ¢‰∏çÊÖ¢ÔºüÂÆÉËøüÊó©‰ºöËøêË°åÂæóÊõ¥Âø´ÁöÑ„ÄÇËÆ©Êàë‰ª¨‰∏ìÊ≥®Âú∞Áî®ÊºÇ‰∫ÆÁöÑÁÆóÊ≥ïÁºñÂÜôÊºÇ‰∫ÆÁöÑ‰ª£Á†ÅÔºåÂâ©‰∏ãÁöÑÈÉΩÂèØ‰ª•Êó†ËßÜ„ÄÇ ÁöÑÁ°ÆÂ¶ÇÊ≠§ÔºåÂ¶ÇÊûú‰Ω†Âú®‰∏ÄÂè∞ÊúÄËøëË¥≠‰π∞ÁöÑPCÊú∫‰∏äËøêË°åWindows 3.1ÔºåÂÆÉ‰ºöÂø´Âæó‰∏çÂèØÊÄùËÆÆ„ÄÇ‰∫ãÂÆû‰∏äÔºåÊàëÊï¢ÊâìËµåÔºå‰Ω†ÂèØ‰ª•Âú®‰Ω†ÊµèËßàÂô®ÈáåËøêË°åWindows 3.1ÔºåËÆ©ÂÆÉÊõ¥Âø´„ÄÇ ÁöÑÁ°ÆÊúâ‰∫õÁ°¨‰ª∂Âú®ÁîüÊàêÈ´òÊïàÁöÑ‰ª£Á†Å‰∏äÁöÑÂéãÂäõË∂äÊù•Ë∂äÂ∞è„ÄÇÂú®1990Âπ¥Ôºå‰∏∫‰∫ÜÂáªË¥•ÊúÄÂº∫ÁöÑÂõΩÈôÖË±°Ê£ãÊ£ãÊâãÔºåÂèØËÉΩÁîöËá≥ÈúÄË¶ÅÊúâ‰∫∫‰∏ìÈó®ÂéªË∞É‰ºòÊ±áÁºñ‰ª£Á†Å„ÄÇËÄåÂ¶Ç‰ªäÊàëÊï¢‰øùËØÅÊàëÈöè‰æøÁî®JavaScriptÂÜô‰∏Ä‰∫õÈÇãÈÅ¢ÁöÑ‰ª£Á†ÅÂ∞±ËÉΩÂ§üÂÜôÂá∫‰∏Ä‰∏™Ë∂≥‰ª•ÂáªË¥•Â§ßÂ§öÊï∞ÈùûÂ§ßÂ∏àÁ∫ßÂõΩÈôÖË±°Ê£ãÊ£ãÊâãÁöÑËΩØ‰ª∂„ÄÇ ‰ΩÜÊòØËÆ°ÁÆóÊú∫Ë¢´Ë¶ÅÊ±Ç‰ΩøÁî®Êõ¥Â∞ëÁöÑËµÑÊ∫ê„ÄÇÂú®1990Âπ¥ÂÜô‰∏Ä‰∏™ÂõΩÈôÖË±°Ê£ãÁ®ãÂ∫èÂáªË¥•ÂõΩÈôÖË±°Ê£ãÂÜ†ÂÜõÈùûÂ∏∏ÁöÑ‰∫Ü‰∏çËµ∑‚Ä¶‰ΩÜÂú®‰ªäÂ§©Êù•ÁúãÁÆÄÂçïÂæóÊ†πÊú¨ÁÆó‰∏ç‰∏ä‰ªÄ‰πà‰ºüÂ§ßÁöÑ‰∫ãÊÉÖ„ÄÇ‰Ω†ÈúÄË¶ÅÂéªÂÜô‰∏Ä‰∏™‰∏ãÂõ¥Ê£ãÁöÑÁ®ãÂ∫èÔºåÈÇ£‰∏™ÊâçÊòØ‰ª∂Èöæ‰∫ã„ÄÇ ÂΩìÁÑ∂‰∫ÜÔºåÊâãÊú∫Á°¨‰ª∂ÈÄüÂ∫¶ÊÄªÊòØË∂äÊù•Ë∂äÂø´‚Ä¶‚Ä¶ ‰ΩÜÊòØÊÉ≥Âú®‰ΩìÁßØÊõ¥Â∞è„ÄÅÊõ¥Âªâ‰ª∑ÁöÑËÆæÂ§á‰∏äËøêË°åÂêå‰∏ÄÊ¨æËΩØ‰ª∂ÂéãÂäõÂ∞±Â§ß‰∫ÜÔºà‰æãÂ¶ÇÊô∫ËÉΩÊâãË°®Ôºâ„ÄÇÂçÅÂá†Âπ¥ÂêéÈº†Ê†áÂíåÈîÆÁõòÂèòÊàê‰∫ÜÂ•áÊÄ™ÁöÑÂè§Ëë£ÔºåÂèñËÄå‰ª£‰πãÁöÑÊòØÊõ¥ÊòÇË¥µÁöÑ‰∫§‰∫íÔºàÂ¶ÇËØ≠Èü≥„ÄÅÂ¢ûÂº∫Áé∞ÂÆû‚Ä¶‚Ä¶Ôºâ„ÄÇ ÊòØÁöÑÔºåÂæàÂø´Êàë‰ª¨Â∞±ÈúÄË¶Å‰∏Ä‰∏™ÂÉèÊô∫ËÉΩÊâãË°®‰∏ÄÊ†∑Â§ßÂ∞èÁöÑÂÖ∑Â§áËá™‰∏ªÈ´òÁ∫ßËá™‰∏ª‰∫∫Â∑•Êô∫ËÉΩÁöÑËÆæÂ§á„ÄÇ‰Ω†ËßâÂæó‰Ω†ÈÇ£ËçâÁéáÊú™Áªè‰ºòÂåñÁöÑ‰ª£Á†ÅËÉΩÂ§üË∑ëÂú®‰∏äÈù¢Ôºü Êàë‰ª¨Á°ÆÂÆûÂ∏åÊúõÊàë‰ª¨ÁöÑÂ§ÑÁêÜÂô®Â§ßÈÉ®ÂàÜÁöÑÊó∂Èó¥ÊòØÁ©∫Èó≤Áä∂ÊÄÅ„ÄÇ‰∫ãÂÆû‰∏äÂπ∂‰∏çÊòØËØ¥Êàë‰ª¨ÁöÑ‰ª£Á†ÅÂèØ‰ª•Êõ¥ÊùæÊï£(ÂèØËÉΩÁøªËØë‰∏çÂáÜÁ°ÆÔºåÂéüÊñáÔºöThe fact that they are is not an indication that we could be sloppier)„ÄÇ Êàë‰ª¨ÁöÑÂ§ÑÁêÜÂô®Â§ßÂ§öÊó∂ÂÄôÊòØÁ©∫Èó≤Áä∂ÊÄÅÂêóÔºü ÊòØÁöÑÔºå‰ΩÜÊòØËøôÂ∞±ÂÉèÈÇ£‰∏™Ê¢óÔºö‰π∞‰∏ÄËæÜË∑ëËΩ¶ÔºåËÄåÂÆÉÂ§ßÈÉ®ÂàÜÁöÑÊó∂Èó¥ÈÉΩÊòØÂÅúÂú®ÈÇ£ÈáåÔºåÂ§öË†¢„ÄÇ Êàë‰ª¨ÊúâÂ∑®Â§ßÁöÑËøáÂâ©ÁÆóÂäõÔºåËÆæËÆ°Â∞±ÊòØÂ¶ÇÊ≠§„ÄÇÂê¶ÂàôÈÇ£Âú∫ÊôØÂ∞±‰ºöÂÉèË∂ÖÂ∏ÇÈáåÊâÄÊúâÊî∂Èì∂Âè∞„ÄÅÊâÄÊúâË¥≠Áâ©ËΩ¶ÂÖ®Â§©ÈÉΩÊª°Ë¥üËç∑Ëøê‰Ωú„ÄÇ Êàë‰ª¨ÈÉΩÁªèÂéÜËøáÁ¨îËÆ∞Êú¨ÁîµËÑëCPU‰ΩøÁî®Áéá‰∏∫100ÔºÖÁöÑÊÉÖÂÜµ„ÄÇÁ¨îËÆ∞Êú¨ÁîµËÑëÂèòÂæóËøüÈíùÔºåÊ≤°ÊúâÂèçÂ∫î„ÄÇ‰Ω†ÁöÑÊâÄÊúâÊìç‰ΩúËØ∑Ê±ÇÈÉΩË¶ÅÊéíÈòüÁ≠âÂÄô„ÄÇËøôÂæà‰∏çÁàΩ„ÄÇ ÊúçÂä°Âô®Êª°Ë¥üËç∑ËøêË°åÁöÑÊÉÖÂÜµ‰∏ã‰∏çÂæó‰∏ç‰∏¢ÂºÉËØ∑Ê±ÇÊàñËÄÖËÆ©‰Ω†Á≠âÂæÖ„ÄÇÊàë‰ª¨ËÆ®ÂéåËøôÁßçÊÉÖÂÜµ„ÄÇ ‰∏ÄÈÉ®Êª°Ë¥üËç∑ËøêË°åÁöÑÊâãÊú∫ÂèòÁÉ´ÔºåÁÑ∂ÂêéÂæàÂø´Âú∞ËÄóÂ∞ΩÂÆÉÁöÑÁîµÊ±†„ÄÇ ÊâÄ‰ª•Êàë‰ª¨Â∏åÊúõÊàë‰ª¨ÁöÑÂ§ÑÁêÜÂô®ÊòØÂÜ∑Âç¥ÁöÑÔºåÂπ∂‰∏î‰øùÊåÅËøôÁßçÂÜ∑Âç¥Áä∂ÊÄÅ„ÄÇÊúâÊïàÁöÑÊñπÊ≥ïÊòØÂáèÂ∞ëÂÆÉ‰ª¨ÁöÑ‰ΩøÁî®ÔºåÂç≥‰Ωø‰ªñ‰ª¨Â§ßÈÉ®ÂàÜÊó∂Èó¥ÊòØÂÜ∑Âç¥„ÄÇÂø´ÈÄüÁöÑ‰ª£Á†ÅÂèØ‰ª•Êõ¥Âø´Âú∞ËøîÂõûÁªôÁî®Êà∑Âπ∂Ê∂àËÄóÊõ¥Â∞ëÁöÑËÉΩÈáè„ÄÇ ÊàëÊÉ≥Êú™Êù•Â∞ÜÊòØÁî±ÊöóÁ°ÖÂà∂ÊàêÁöÑ„ÄÇÊàë‰ª¨Â∞ÜÊã•ÊúâÂ§ßÈáèÁöÑÁÆóÂäõ„ÄÅÂ§ßÈáèÁöÑÁîµË∑ØÔºå‰ΩÜÂ§ßÂ§öÊï∞ÈÉΩÂ§Ñ‰∫éÊó†ÂäüËÄóÁöÑ„ÄÇÂ¶ÇÊûúÊàë‰ª¨ÂæàÂø´Â∞±‰ºöÊ†πÊçÆËΩØ‰ª∂‰ΩøÁî®ÁöÑÂäüËÄóÊù•ËØÑ‰º∞ÂÆÉÔºåÈÇ£Êàë‰∏ÄÁÇπ‰∏ç‰ºöÊÑüÂà∞ÊÉäËÆ∂„ÄÇ","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"ÊÄßËÉΩ","slug":"ÊÄßËÉΩ","permalink":"https://unpluggedcoder.me/tags/%E6%80%A7%E8%83%BD/"}]},{"title":"RedisÂàÜÂ∏ÉÂºèÈîÅÁöÑPythonÂÆûÁé∞[python-redis-lock]","slug":"ÂàÜÂ∏ÉÂºèÈîÅpython-redis-lock","date":"2018-08-06T12:37:53.000Z","updated":"2022-09-15T15:51:05.352Z","comments":true,"path":"2018/08/06/ÂàÜÂ∏ÉÂºèÈîÅpython-redis-lock/","link":"","permalink":"https://unpluggedcoder.me/2018/08/06/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81python-redis-lock/","excerpt":"ÂÖ≥‰∫éÂàÜÂ∏ÉÂºèÈîÅÊúâÂæàÂ§öÁßçÂÆûÁé∞ÊñπÂºèÔºåÂèØ‰ª•Áî®Êï∞ÊçÆÂ∫ìÈîÅÊàñËÄÖZooKeeperËøôÁ±ªÁöÑ‰∏ì‰∏öÁöÑÂàÜÂ∏ÉÂºèÂºÄÊ∫êÈ°πÁõÆ„ÄÇÊú¨ÊñáËÆ≤ÁöÑÊòØÁî®RedisÂÆûÁé∞ÁöÑ‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÈîÅÂ∫ìpython-redis-lock. RedisÂÆòÊñπÊúâÊé®Ëçê‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÈîÅÁöÑÁÆóÊ≥ïRedlock(Ëøô‰∏™Â∫ìÂÆûÁé∞ÁöÑÂπ∂‰∏çÊòØËøô‰∏™ÁÆóÊ≥ï), ËØ•ÁÆóÊ≥ïËá™Âä®ÈáäÊîæÈîÅÊ≤°ÊúâËÄÉËôëÂà∞ÂÆ¢Êà∑Á´ØÈïøÊúüÊåÅÊúâÁöÑÊÉÖÂÜµÔºåÂõ†Ê≠§‰πüÊúâ‰∫∫ÂØπËøô‰∏™ÁÆóÊ≥ïÊèêÂá∫‰∫ÜË¥®Áñë„ÄÇ ÈÇ£ÂõûÂà∞Êàë‰ª¨‰ªäÂ§©Ë¶ÅËÆ≤ÁöÑËøô‰∏™Â∫ìpython-redis-lock„ÄÇ‰ΩúËÄÖ: Ionel Cristian MƒÉrie»ô, Ëøô‰∏™Â∫ìÊï¥‰ΩìÁöÑÊÄùË∑Ø‰ΩúËÄÖ‰πüÁî®ÂæàÁõ¥ËßÇÁöÑÂõæÂ±ïÁé∞Âá∫Êù•‰∫ÜÔºåÂ¶Ç‰∏ãÔºö","text":"ÂÖ≥‰∫éÂàÜÂ∏ÉÂºèÈîÅÊúâÂæàÂ§öÁßçÂÆûÁé∞ÊñπÂºèÔºåÂèØ‰ª•Áî®Êï∞ÊçÆÂ∫ìÈîÅÊàñËÄÖZooKeeperËøôÁ±ªÁöÑ‰∏ì‰∏öÁöÑÂàÜÂ∏ÉÂºèÂºÄÊ∫êÈ°πÁõÆ„ÄÇÊú¨ÊñáËÆ≤ÁöÑÊòØÁî®RedisÂÆûÁé∞ÁöÑ‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÈîÅÂ∫ìpython-redis-lock. RedisÂÆòÊñπÊúâÊé®Ëçê‰∏Ä‰∏™ÂàÜÂ∏ÉÂºèÈîÅÁöÑÁÆóÊ≥ïRedlock(Ëøô‰∏™Â∫ìÂÆûÁé∞ÁöÑÂπ∂‰∏çÊòØËøô‰∏™ÁÆóÊ≥ï), ËØ•ÁÆóÊ≥ïËá™Âä®ÈáäÊîæÈîÅÊ≤°ÊúâËÄÉËôëÂà∞ÂÆ¢Êà∑Á´ØÈïøÊúüÊåÅÊúâÁöÑÊÉÖÂÜµÔºåÂõ†Ê≠§‰πüÊúâ‰∫∫ÂØπËøô‰∏™ÁÆóÊ≥ïÊèêÂá∫‰∫ÜË¥®Áñë„ÄÇ ÈÇ£ÂõûÂà∞Êàë‰ª¨‰ªäÂ§©Ë¶ÅËÆ≤ÁöÑËøô‰∏™Â∫ìpython-redis-lock„ÄÇ‰ΩúËÄÖ: Ionel Cristian MƒÉrie»ô, Ëøô‰∏™Â∫ìÊï¥‰ΩìÁöÑÊÄùË∑Ø‰ΩúËÄÖ‰πüÁî®ÂæàÁõ¥ËßÇÁöÑÂõæÂ±ïÁé∞Âá∫Êù•‰∫ÜÔºåÂ¶Ç‰∏ãÔºö Â§ßËá¥ÊÄùË∑Ø‰ªéÂõæ‰∏äÁúãÂá∫‰ΩúËÄÖÂíåÂÖ∂ÂÆÉÂ§ßÂ§öÊï∞Áî®RedisÂÆûÁé∞ÂàÜÂ∏ÉÂºèÈîÅÁöÑÊÄùË∑ØÁ±ª‰ºº(SET NX)Ôºå‰ΩÜÊòØ‰ªñÂØπÊØè‰∏™ÈîÅÂ§öÁî®‰∫Ü‰∏Ä‰∏™listÁ±ªÂûãÈîÆÊù•ÂÅö‰ø°Âè∑ÊéßÂà∂ÔºåÂ¶ÇÊûúÂÆ¢Êà∑Á´ØÁ¨¨‰∏ÄÊ¨°Â∞ùËØïËé∑ÂèñÈîÅÂ§±Ë¥•ÔºåÂèØ‰ª•ÈÄâÊã©Âú®signalÂàóË°®‰∏äÈòªÂ°û‰∏Ä‰∏™timeoutÊó∂Èó¥Áî®Êù•Êé•Êî∂ÈîÅË¢´ÈáäÊîæÁöÑÈÄöÁü•ÔºåRedisÂàóË°®ÁöÑËøô‰∏™ÁâπÊÄß‰øùËØÅ‰∫ÜÊØèÊ¨°Âè™Êúâ‰∏Ä‰∏™ÂÆ¢Êà∑Á´ØÊé•Êî∂Âà∞‰∫ÜÈîÅÈáäÊîæÁöÑÈÄöÁü•„ÄÇËÄåËé∑ÂèñÂà∞ÈîÅÁöÑÂÆ¢Êà∑Á´ØÂú®‰ΩøÁî®ÂÆåÂêé‰ºöÂú®ÂØπÂ∫îÁöÑ‰ø°Âè∑ÂàóË°®‰∏äÊé®ÈÄÅ‰∏Ä‰∏™ÈÄöÁü•„ÄÇÂè¶Â§ñÔºå‰ΩúËÄÖÂØπÈîÅË∂ÖÊó∂ËøòÂ¢ûÂä†‰∫Ü‰∏Ä‰∏™Âà∑Êñ∞ÁöÑÂäüËÉΩÊù•Âª∂Èïø(Extend)ÂØπÈîÅÁöÑÂç†Áî®ÔºåÂèØ‰ª•‰øùËØÅÂú®ÊåÅÊúâÈîÅÁöÑÂÆ¢Êà∑Á´Ø‰∏äÂÆåÊàêÊâÄÊúâÊìç‰ΩúÂêéÊâçÈáäÊîæÈîÅ„ÄÇ‰∏™‰∫∫ËÆ§‰∏∫ËøôÁßçËÆæËÆ°ÁöÑ‰ºòÁÇπÂíåÈúÄË¶ÅÊ≥®ÊÑèÁöÑÁÇπÂ¶Ç‰∏ãÔºö ‰ºòÁÇπ ‰∏ÄÊñπÈù¢ÈÅøÂÖçÂÆ¢Êà∑Á´ØÂèçÂ§çËØ∑Ê±ÇÈîÅÔºåÂè¶‰∏ÄÊñπÈù¢ÈÄöËøálist signalÊù•ËÆ©ÂÆ¢Êà∑Á´ØÂÜ≥ÂÆöÊòØÂê¶Ë¶ÅblockËá™Â∑±Ôºõ Â¶ÇÊûúÊúâËÆæÁΩÆË∂ÖÊó∂ÔºåÂàôÁ≠âÂæÖË∂ÖÊó∂ÂêéÂÆ¢Êà∑Á´Ø‰ªçÁÑ∂‰ºöÂÜçÂ∞ùËØïËé∑Âèñ‰∏ÄÊ¨°ÈîÅËÄå‰∏çÊòØÁõ¥Êé•Â§±Ë¥•Ôºõ Ëøô‰∏™ÁÆóÊ≥ï‰∏ç‰æùËµñÂÆ¢Êà∑Á´ØÊó∂Èó¥Êà≥Ôºå‰πüÂ∞±Ê≤°Êúâtime driftÈóÆÈ¢òÔºõ ÁªìÂêàLuaËÑöÊú¨ÂÅöÂéüÂ≠êÊìç‰ΩúÔºåÂ¶ÇÊûúÂÜçÂä†‰∏äÁªÜÁ≤íÂ∫¶ÈîÅÔºå‰∏™‰∫∫ËÆ§‰∏∫Âü∫Êú¨ÂèØ‰ª•Êª°Ë∂≥ÂêÑÁßçÈ´òÈúÄÊ±ÇÂú∫ÊôØÁöÑÂàÜÂ∏ÉÂºèÈîÅË¶ÅÊ±Ç„ÄÇ ‚ö†Ô∏èWarning Ëá™Âä®Âà∑Êñ∞ÂèØËÉΩ‰ºöÈÄ†ÊàêÈ••È•øÈóÆÈ¢òÔºåÂ¶ÇÊûúÊåÅÊúâÈîÅÁöÑÂÆ¢Êà∑Á´ØÂõ†‰∏∫ÊüêÁßçÊú™Áü•ÂéüÂõ†ÈòªÂ°ûÔºåÂπ∂‰∏îÂºÄÂêØ‰∫ÜËá™Âä®Âà∑Êñ∞ÈîÅÔºåÈÇ£ÂÖ∂ÂÆÉÂÆ¢Êà∑Á´ØÂ∞±Ë∑™‰∫ÜÔºåÊâÄ‰ª•ÈúÄË¶Å‰ΩøÁî®ËÄÖÊÖéÁî®Âà∑Êñ∞Êú∫Âà∂Ôºõ Â¶ÇÊûúÊ≤°ÊúâËÆæÁΩÆË∂ÖÊó∂Ôºå‰∏îÊåÅÊúâÈîÅÁöÑÂÆ¢Êà∑Á´ØÊó†ÂìçÂ∫îÁöÑÊÉÖÂÜµ‰∏ãÂ∞±‰ºöÈÄ†ÊàêÊ≠ªÈîÅÔºõ Ê∫êÁ†ÅÂàÜÊûê‰∫ÜËß£ËøáÂ§ß‰ΩìÊÄùË∑ØÂêéÔºåÊàë‰ª¨Êù•‰∏ÄÊ≠•Ê≠•ÂàÜËß£‰ΩúËÄÖÁöÑÂÆûÁé∞„ÄÇÈ¶ñÂÖàËøô‰∏™Â∫ìÊ∫êÁ†ÅÂè™Êúâ‰∏§‰∏™ËÑöÊú¨Ôºà‰∏çÂê´ÊµãËØïÂíåÁ§∫‰æã‰ª£Á†ÅÔºâ, ÁªìÊûÑÂæàÁÆÄÂçï„ÄÇ src&#x2F;redis_lock‚îú‚îÄ‚îÄ init.py‚îî‚îÄ‚îÄ django_cache.py Ê†∏ÂøÉ‰ª£Á†ÅÂú®__init__.py‰∏≠Ôºådjango_cache.pyÂàôÊòØÁªìÂêàdjango-redisÂÅöÁöÑÁºìÂ≠òÂêéÁ´ØÔºåÊù•ÈÅøÂÖçÁºìÂ≠òÂ§±ÊïàÊó∂ÈÅá‰∏äÊâÄË∞ìÁöÑ‚ÄúÁãóÂ±éÊïàÂ∫î(dogpile effect, GoogleÁøªËØë)‚ÄùÔºåËøôÈáå‰∏çÂØπÂÆÉËøõË°åËß£Êûê„ÄÇ ËΩΩÂÖ•LuaËÑöÊú¨123456789101112# Check if the id match. If not, return an error code.UNLOCK_SCRIPT = b&quot;&quot;&quot; if redis.call(&quot;get&quot;, KEYS[1]) ~= ARGV[1] then return 1 else redis.call(&quot;del&quot;, KEYS[2]) redis.call(&quot;lpush&quot;, KEYS[2], 1) redis.call(&quot;del&quot;, KEYS[1]) return 0 end&quot;&quot;&quot;UNLOCK_SCRIPT_HASH = sha1(UNLOCK_SCRIPT).hexdigest() ‰ΩúËÄÖÁî®‰∏äÈù¢ËøôÁßçÊñπÂºèÂÆö‰πâ‰∫ÜUNLOCK, EXTEND, RESET‚Ä¶ Á≠â5‰∏™ÂéüÂ≠êÊìç‰ΩúÁöÑLuaËÑöÊú¨ÔºåÊØè‰∏™ËÑöÊú¨‰πüÂÆö‰πâ‰∫ÜÂØπÂ∫îÁöÑÂìàÂ∏åÂÄº„ÄÇÂÖ≥‰∫éRedisÁöÑLuaËÑöÊú¨ÊîØÊåÅÂèØ‰ª•ÁúãËøôÁØáÊñáÁ´†„ÄÇÊØîËæÉÊúâÊÑèÊÄùÁöÑÊòØ‰∏ãÈù¢ËøôÊÆµ‰ª£Á†ÅÔºåÂèØ‰ª•ËØ¥ÊòØÂæàPythonic‰∫ÜÔºö 12345678910111213((UNLOCK, _, _, # noqa EXTEND, _, _, RESET, _, _, RESET_ALL, _, _, DELETE_ALL_SIGNAL_KEYS, _, _), SCRIPTS) = zip(*enumerate([ UNLOCK_SCRIPT_HASH, UNLOCK_SCRIPT, &#x27;UNLOCK_SCRIPT&#x27;, EXTEND_SCRIPT_HASH, EXTEND_SCRIPT, &#x27;EXTEND_SCRIPT&#x27;, RESET_SCRIPT_HASH, RESET_SCRIPT, &#x27;RESET_SCRIPT&#x27;, RESET_ALL_SCRIPT_HASH, RESET_ALL_SCRIPT, &#x27;RESET_ALL_SCRIPT&#x27;, DELETE_ALL_SIGNAL_KEYS_SCRIPT_HASH, DELETE_ALL_SIGNAL_KEYS_SCRIPT, &#x27;DELETE_ALL_SIGNAL_KEYS_SCRIPT&#x27;])) ‰∏∫‰∫ÜÊää‰ΩøÁî®Êó∂Ë¶ÅÊåáÂÆöÁöÑËÑöÊú¨ID‰∏éÂÖ∂ËÑöÊú¨„ÄÅÂìàÂ∏åÂÄºÂÖ≥ËÅîËµ∑Êù•Ôºå‰ΩúËÄÖÁî®‰∫ÜenumerateÊù•Ëá™Âä®ÁîüÊàêÁ¥¢ÂºïID, ÁÑ∂ÂêéÂèàÁî®*Êù•ÊãçÊâÅÊï¥‰∏™ÂàóË°®ÔºåÊúÄÂêéÂÜçÁî®zipÊääÁ¥¢ÂºïÊèêÂèñÂá∫Êù•ÔºåÊääÂìàÂ∏åÂÄºÂØπÂ∫îÁöÑÁ¥¢ÂºïIDÁî®ÂèòÈáèÂêçÂ≠òËµ∑Êù•ÔºåÊ≤°Áî®ÁöÑÁ¥¢ÂºïÁî®_ÂøΩÁï•ÔºåÂÖ∂‰ΩôÂÜÖÂÆπ‰æùÁÑ∂Âú®SCRIPTSÂÖÉÁªÑ‰∏≠„ÄÇËøôÊ†∑‰∏ÄÊù•Áî®‰∏ãÈù¢Ëøô‰∏™ÂáΩÊï∞ÊâßË°åRedisÁöÑLuaËÑöÊú¨Â∞±ÂæàËàíÊúç‰∫ÜÔºö 123456789101112131415def _eval_script(redis, script_id, *keys, **kwargs): &quot;&quot;&quot;Tries to call ``EVALSHA`` with the `hash` and then, if it fails, calls regular ``EVAL`` with the `script`. &quot;&quot;&quot; # LuaËÑöÊú¨ÁöÑ KEYS ÂèÇÊï∞ÊîæÂú® *keys ‰∏≠Ôºå ARGV ÂèÇÊï∞ÂàôÂú® kwargs ÁöÑ args ÂëΩÂêçÂèÇÊï∞‰∏≠ÊèêÂèñÂá∫Êù•, Âíå keys ÊãºÊé•Ëµ∑Êù•‰º†Áªô evalsha ÊàñËÄÖ eval ÂáΩÊï∞ args = kwargs.pop(&#x27;args&#x27;, ()) if kwargs: raise TypeError(&quot;Unexpected keyword arguments %s&quot; % kwargs.keys()) try: # È¶ñÂÖàÂ∞ùËØïË∞ÉÁî®evalsha return redis.evalsha(SCRIPTS[script_id], len(keys), *keys + args) except NoScriptError: # Â¶ÇÊûúËÑöÊú¨‰∏çÂ≠òÂú®ÂàôË∞ÉÁî®evalËΩΩÂÖ•Âπ∂ÊâßË°åËÑöÊú¨ logger.warn(&quot;%s not cached.&quot;, SCRIPTS[script_id + 2]) return redis.eval(SCRIPTS[script_id + 1], len(keys), *keys + args) ÂàõÂª∫ÈîÅ‰∏ªË¶Å‰ª£Á†ÅÈÉΩÂú®LockÁ±ª‰∏≠ÔºåÂàõÂª∫ÈîÅÂØπË±°Êó∂Â§ßÈÉ®ÂàÜÈÉΩÊòØÂ∏∏ËßÑÊìç‰ΩúÔºå‰øùÂ≠òÂÆû‰æãÁöÑ‰∏Ä‰∫õËÆæÂÆö„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647class Lock(object): &quot;&quot;&quot; A Lock context manager implemented via redis SETNX/BLPOP. &quot;&quot;&quot; def __init__(self, redis_client, name, expire=None, id=None, auto_renewal=False, strict=True): &quot;&quot;&quot; :param redis_client: An instance of :class:`~StrictRedis`. :param name: The name (redis key) the lock should have. :param expire: The lock expiry time in seconds. If left at the default (None) the lock will not expire. :param id: The ID (redis value) the lock should have. A random value is generated when left at the default. Note that if you specify this then the lock is marked as &quot;held&quot;. Acquires won&#x27;t be possible. :param auto_renewal: If set to ``True``, Lock will automatically renew the lock so that it doesn&#x27;t expire for as long as the lock is held (acquire() called or running in a context manager). Implementation note: Renewal will happen using a daemon thread with an interval of ``expire*2/3``. If wishing to use a different renewal time, subclass Lock, call ``super().__init__()`` then set ``self._lock_renewal_interval`` to your desired interval. :param strict: If set ``True`` then the ``redis_client`` needs to be an instance of ``redis.StrictRedis``. &quot;&quot;&quot; # ... Ê≠§Â§ÑÁúÅÁï•ÂèÇÊï∞Ê†°È™å‰ª£Á†Å self._client = redis_client self._expire = expire if expire is None else int(expire) if id is None: self._id = urandom(16) elif isinstance(id, bytes): self._id = id else: raise TypeError(&quot;Incorrect type for `id`. Must be bytes not %s.&quot; % type(id)) self._name = &#x27;lock:&#x27;+name self._signal = &#x27;lock-signal:&#x27;+name self._lock_renewal_interval = (float(expire)*2/3 if auto_renewal else None) self._lock_renewal_thread = None ÈúÄË¶ÅÊ≥®ÊÑèÁöÑÂá†‰∏™ÁÇπÔºö ÂèØ‰ª•Áî®idÊù•Áî≥ÊòéÂØπÈîÅÊâÄÊúâÊùÉËØÜÂà´Ôºå‰æãÂ¶ÇÂÆ¢Êà∑Á´ØÁöÑ‰∏ªÊú∫ÂêçÁß∞ÊàñËÄÖËøõÁ®ãÂè∑‰ªÄ‰πàÁöÑÔºåÈªòËÆ§ÊòØ16‰∏™ÈöèÊú∫Â≠óËäÇ„ÄÇ Â¶ÇÊûúÊåáÂÆö‰∫ÜÈîÅËá™Âä®Âà∑Êñ∞ÔºåÈÇ£Âà∑Êñ∞Èó¥Èöî‰ºöËÆæÂÆöÂú®Ë∂ÖÊó∂ÁöÑ2&#x2F;3Êó∂Èó¥„ÄÇ Ëé∑ÂèñÈîÅËé∑ÂèñÈîÅÁöÑÁõ∏ÂÖ≥‰ª£Á†ÅÂ¶Ç‰∏ãÔºåËøòÊòØÈÄâÊã©Âú®‰ª£Á†ÅÊ≥®Èáä‰∏≠Ëß£Êûê‰ª£Á†Å‰ºöÊØîËæÉÁõ¥ËßÇÁÇπ„ÄÇËøôÈáåÂíå‰∏ä‰∏ÄÊÆµ‰ª£Á†Å‰∏ÄÊ†∑ÔºåÁúÅÁï•‰∫ÜÂèÇÊï∞Ê†°È™åÔºåËøôÊòØÂæàÈáçË¶ÅÁöÑ‰∏ÄÊ≠•ÔºåÂπ∂‰∏îÊòØ‰∏Ä‰∏™ËâØÂ•ΩÁöÑÁºñÁ®ã‰π†ÊÉØÔºå‰ΩÜÊòØÈôê‰∫éÁØáÂπÖËøôÈáå‰∏çÂÅö‰ªãÁªç„ÄÇ 1234567891011121314151617181920212223242526272829303132333435def acquire(self, blocking=True, timeout=None): &quot;&quot;&quot; :param blocking: Boolean value specifying whether lock should be blocking or not. :param timeout: An integer value specifying the maximum number of seconds to block. &quot;&quot;&quot; logger.debug(&quot;Getting %r ...&quot;, self._name) if self._held: # ÈîÅ‰∏çÂèØÈáçÂÖ• raise AlreadyAcquired(&quot;Already acquired from this Lock instance.&quot;) # ... Ê≠§Â§ÑÁúÅÁï•ÂèÇÊï∞Ê†°È™å‰ª£Á†ÅÔºåÂ¶Çtimeout‰∏çËÉΩÂ§ß‰∫éÈîÅÁöÑ_expireÁ≠âÂêÑÁßçÊù°‰ª∂ busy = True blpop_timeout = timeout or self._expire or 0 timed_out = False while busy: # Â¶ÇÊûúsetÂ§±Ë¥•Âàô‰ª£Ë°®ÈîÅË¢´Âç†Áî®ÔºåËøîÂõûFalse busy = not self._client.set(self._name, self._id, nx=True, ex=self._expire) if busy: if timed_out: return False elif blocking: # Â¶ÇÊûúÈòªÂ°ûÂàôÂú®signalÂàóË°®‰∏äÁõëÂê¨ # Â¶ÇÊûúblpopÂú®blpop_timeoutÊó∂Èó¥ÂÜÖËé∑ÂèñÂà∞‰ø°Âè∑ÈÄöÁü•ÁöÑËØùÔºåtimeout‰ºöË¢´ËÆæÁΩÆ‰∏∫False timed_out = not self._client.blpop(self._signal, blpop_timeout) and timeout else: logger.debug(&quot;Failed to get %r.&quot;, self._name) return False logger.debug(&quot;Got lock for %r.&quot;, self._name) if self._lock_renewal_interval is not None: # Â¶ÇÊûúÈúÄË¶ÅËá™Âä®Âà∑Êñ∞ÈîÅÔºåÂàôÂºÄÂêØÂà∑Êñ∞Á∫øÁ®ã self._start_lock_renewer() return True ËøôÈáåÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºåÂ¶ÇÊûúÂú®blpopÊàêÂäüËé∑ÂèñÂà∞‰ø°Âè∑ÔºåÂπ∂‰∏ç‰ª£Ë°®‰∏ã‰∏ÄÊ¨°whileÂæ™ÁéØÂ∞ùËØïËé∑ÂèñÂ∞±‰∏ÄÂÆöÊàêÂäüÔºåÂ¶ÇÊûúÂú®Ê≠§Èó¥Èöô‰∏≠Ë¢´ÂÖ∂ÂÆÉÂÆ¢Êà∑Á´ØËé∑Âæó‰∫ÜÈîÅÔºåÈÇ£ËØ•ÂÆ¢Êà∑Á´Ø‰ªçÁÑ∂‰ºöËé∑ÂèñÂ§±Ë¥•ÔºåÂπ∂ÂéªÈòªÂ°û‰∏Ä‰∏™timeoutÊó∂Èó¥„ÄÇ‰πüÂ∞±ÊòØËØ¥ÂÅáËÆæËøô‰∏™ÂÆ¢Êà∑Á´ØÁöÑÁΩëÁªúË¥®ÈáèÂæàÂ∑ÆÔºåËÄåÂèàÊÅ∞ÊÅ∞ÊòØ‰∏Ä‰∏™È´òÈ¢ëËØ∑Ê±ÇÁöÑÈîÅÔºåÈÇ£Â∞±ÂèØËÉΩÈÄ†ÊàêÂÆÉËôΩÁÑ∂ËÆæÁΩÆ‰∫ÜË∂ÖÊó∂Ôºå‰ΩÜÊúÄÁªàÁªìÊûúÂèØËÉΩÁ≠âÂæÖ‰∫Ü‰∏çÊ≠¢‰∏Ä‰∏™timeoutÊó∂Èó¥ÊâçÊãøÂà∞ÁªìÊûúÔºåËÄå‰∏îËøòÂèØËÉΩ‰ºö‰∏ÄÁõ¥Ëé∑Âèñ‰∏çÂà∞ÈîÅ„ÄÇ Ëé∑ÂèñÈîÅÁöÑÂºÄÂ§¥Áî®‰∏Ä‰∏™_heldÂÜÖÈÉ®Â±ûÊÄßÊù•Âà§Êñ≠ÂΩìÂâçÂÆû‰æãÊòØÂê¶Â∑≤ÁªèÊã•Êúâ‰∫ÜÈîÅÔºåËøôÈáåÂ∞±ÊòØ‰∏ä‰∏ÄÊ≠•‰∏≠ÁöÑidÂ±ûÊÄßÁöÑÁî®Â§ÑÔºåÊù•Âà§Êñ≠ÈîÅÁöÑÊã•ÊúâËÄÖ„ÄÇ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456def get_owner_id(self): return self._client.get(self._name)@propertydef _held(self): return self.id == self.get_owner_id() Âà∑Êñ∞ÈîÅÂà∑Êñ∞ÈîÅÊØîËæÉÁπÅÁêêÔºå‰ΩúËÄÖÁî®‰∫Ü‰∏Ä‰∏™Á∫øÁ®ãÂú®ÂêéÂè∞ÂÆöÊó∂Âà∑Êñ∞Ôºå‰∏çËøáÊàë‰ª¨ÂÖàÊù•ÁúãÂà∑Êñ∞ÈîÅÁöÑÂÆûÈôÖÊìç‰ΩúÔºöextendÊñπÊ≥ï, Ëøô‰∏™ÂáΩÊï∞Ê≤°Âä†‰∏ãÂàíÁ∫øÂâçÁºÄ‰πüÂ∞±ÊòØÂÖÅËÆ∏ÈîÅÁöÑÊã•ÊúâËÄÖËá™Â∑±ÊâãÂä®Âà∑Êñ∞„ÄÇ 1234567891011121314151617def extend(self, expire=None): &quot;&quot;&quot;Extends expiration time of the lock. :param expire: New expiration time. If ``None`` - `expire` provided during lock initialization will be taken. &quot;&quot;&quot; # ... Ê≠§Â§ÑÁúÅÁï•ÂèÇÊï∞Ê†°È™å‰ª£Á†Å # ËøôÈáåË∞ÉÁî®Á¨¨‰∏ÄÊ≠•ÊèêÂà∞ÁöÑLuaËÑöÊú¨ÔºåÁî®Á¥¢ÂºïEXTENDÊù•ÊåáÂÆöËÑöÊú¨ÔºåÂπ∂Â∞ÜË∂ÖÊó∂Êó∂Èó¥`expire`ÂíåËá™Ë∫´ËØÜÂà´ id ‰º†ÂÖ•ËÑöÊú¨„ÄÇ error = _eval_script(self._client, EXTEND, self._name, args=(expire, self._id)) if error == 1: raise NotAcquired(&quot;Lock %s is not acquired or it already expired.&quot; % self._name) elif error == 2: raise NotExpirable(&quot;Lock %s has no assigned expiration time&quot; % self._name) elif error: raise RuntimeError(&quot;Unsupported error code %s from EXTEND script&quot; % error) Ëøô‰∏™EXTENDÊìç‰ΩúÁöÑ Lua ËÑöÊú¨Â¶Ç‰∏ã: 12345678910111213# Covers both cases when key doesn&#x27;t exist and doesn&#x27;t equal to lock&#x27;s id# Âà∑Êñ∞ÂâçÂà§Êñ≠ÈîÅÊòØÂê¶Â±û‰∫éËØ•Êã•ÊúâËÄÖÔºåÂè™ÂÖÅËÆ∏Êã•ÊúâËÄÖÂª∂ÈïøÈîÅÁöÑTTLEXTEND_SCRIPT = b&quot;&quot;&quot; if redis.call(&quot;get&quot;, KEYS[1]) ~= ARGV[2] then return 1 elseif redis.call(&quot;ttl&quot;, KEYS[1]) &lt; 0 then return 2 else redis.call(&quot;expire&quot;, KEYS[1], ARGV[1]) return 0 end&quot;&quot;&quot;EXTEND_SCRIPT_HASH = sha1(EXTEND_SCRIPT).hexdigest() Âà∑Êñ∞ÈîÅÁöÑÁ∫øÁ®ãÁõ∏ÂÖ≥‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051def _start_lock_renewer(self): &quot;&quot;&quot; Starts the lock refresher thread. &quot;&quot;&quot; if self._lock_renewal_thread is not None: raise AlreadyStarted(&quot;Lock refresh thread already started&quot;) # Á∫øÁ®ã‰∫ã‰ª∂Áî®Êù•ÁõëÂê¨Âà∑Êñ∞ÊòØÂê¶ÁªìÊùü self._lock_renewal_stop = threading.Event() self._lock_renewal_thread = threading.Thread( group=None, target=self._lock_renewer, kwargs=&#123;&#x27;lockref&#x27;: weakref.ref(self), # ÂØπÈîÅÂÆû‰æãÂÅö‰∫Ü‰∏Ä‰∏™Âº±ÂºïÁî® &#x27;interval&#x27;: self._lock_renewal_interval, &#x27;stop&#x27;: self._lock_renewal_stop&#125; ) self._lock_renewal_thread.setDaemon(True) self._lock_renewal_thread.start()@staticmethoddef _lock_renewer(lockref, interval, stop): &quot;&quot;&quot; Renew the lock key in redis every `interval` seconds for as long as `self._lock_renewal_thread.should_exit` is False. &quot;&quot;&quot; log = getLogger(&quot;%s.lock_refresher&quot; % __name__) # Á≠âÂæÖÁªàÊ≠¢‰∫ã‰ª∂Âà∞Êù•ÔºåÂê¶ÂàôÂú®ÊåáÂÆöË∂ÖÊó∂ÂêéËøîÂõûFalse while not stop.wait(timeout=interval): log.debug(&quot;Refreshing lock&quot;) lock = lockref() # Ë∞ÉÁî®Ëøô‰∏™Âº±ÂºïÁî®Êù•Ëé∑ÂèñÂΩìÂâçÈîÅÂÆû‰æã if lock is None: # Â¶ÇÊûúËøô‰∏™ÈîÅÂ∑≤ÁªèÂú®ÂÖ∂ÂÆÉÁ∫øÁ®ãË¢´ÈîÄÊØÅÂàôÂØπÂ∫îÂà∑Êñ∞Á∫øÁ®ã‰πüÂ∫îËØ•ÂÖ≥Èó≠ log.debug(&quot;The lock no longer exists, &quot; &quot;stopping lock refreshing&quot;) break lock.extend(expire=lock._expire) del lock # Âà†Èô§Âº±ÂºïÁî® log.debug(&quot;Exit requested, stopping lock refreshing&quot;)def _stop_lock_renewer(self): &quot;&quot;&quot; Stop the lock renewer. This signals the renewal thread and waits for its exit. &quot;&quot;&quot; if self._lock_renewal_thread is None or not self._lock_renewal_thread.is_alive(): return logger.debug(&quot;Signalling the lock refresher to stop&quot;) self._lock_renewal_stop.set() # ‰∫ã‰ª∂ÈÄöÁü•Â≠êÁ∫øÁ®ãÈÄÄÂá∫ self._lock_renewal_thread.join() self._lock_renewal_thread = None logger.debug(&quot;Lock refresher has stopped&quot;) ËøôÈáå‰∏ªË¶ÅÊòØ‰∏Ä‰∏™Âº±ÂºïÁî®ÈóÆÈ¢ò„ÄÇ‰º†ÂÖ•‰∫ÜDaemonÂÆàÊä§ËøõÁ®ãÁöÑÂèòÈáèË¶ÅÊ†ºÂ§ñÂ∞èÂøÉÔºåÂæàÂÆπÊòìÈÄ†ÊàêÂç≥‰Ωø‰∏ªÁ∫øÁ®ãÂ∑≤Áªè‰∏çÂÜçÂºïÁî®Ëøô‰∏™ÂèòÈáèÔºåËÄåÂÆàÊä§ËøõÁ®ã‰∏ç‰æùËµñËØ•ÂèòÈáèÔºåÂç¥‰∏ÄÁõ¥ÂºïÁî®ÁùÄÔºåÂ∞±ÂØºËá¥ÂÜÖÂ≠òÊó†Ê≥ïÈáäÊîæ„ÄÇ ÈáäÊîæÈîÅÈáäÊîæÈîÅÁöÑÂÆûÈôÖÊìç‰ΩúÂíåÂà∑Êñ∞ÈîÅ‰∏ÄÊ†∑ÔºåÂõ†‰∏∫ÈÉΩÊ∂âÂèäÂ§ö‰∏™ Redis ÂëΩ‰ª§ÔºåÊâÄ‰ª•‰ªñ‰ª¨ÈÉΩÊîæÂú®‰∫Ü Lua ËÑöÊú¨‰∏≠„ÄÇ 123456789101112131415161718192021222324def release(self): &quot;&quot;&quot;Releases the lock, that was acquired with the same object. .. note:: If you want to release a lock that you acquired in a different place you have two choices: * Use ``Lock(&quot;name&quot;, id=id_from_other_place).release()`` * Use ``Lock(&quot;name&quot;).reset()`` &quot;&quot;&quot; if self._lock_renewal_thread is not None: # Â¶ÇÊûúÊúâÂà∑Êñ∞Á∫øÁ®ãÂàôÂÅúÊ≠¢ÂÆÉ self._stop_lock_renewer() logger.debug(&quot;Releasing %r.&quot;, self._name) error = _eval_script(self._client, UNLOCK, self._name, self._signal, args=(self._id,)) if error == 1: raise NotAcquired(&quot;Lock %s is not acquired or it already expired.&quot; % self._name) elif error: raise RuntimeError(&quot;Unsupported error code %s from EXTEND script.&quot; % error) else: self._delete_signal()def _delete_signal(self): self._client.delete(self._signal) Ëá≥‰∫éUNLOCKËÑöÊú¨Êìç‰ΩúÂú®Á¨¨‰∏ÄÊ≠•ÈáåÂ∑≤ÁªèÂ±ïÁ§∫Âá∫Êù•ÔºåÂ¶ÇÊûúÊåÅÊúâËØ•ÈîÅÂàôÂÖàÂà†Èô§signalÂàóË°®ÔºåÂÜçpush‰∏Ä‰∏™ÈÄöÁü•Âà∞signalÂàóË°®ÔºåÊúÄÂêéÂà†Èô§ÈîÅ„ÄÇËøô‰∫õÊ≠•È™§ÈÉΩ‰ºöÂú®‰∏Ä‰∏™LuaÂáΩÊï∞‰∏≠ÊâßË°å‰øùËØÅÂéüÂ≠êÊÄß„ÄÇ ‰∏ä‰∏ãÊñáÊîØÊåÅ‰ΩúËÄÖ‰πüÈáçËΩΩ‰∫Ü__enter__Âíå__exit__‰∏§‰∏™ÂáΩÊï∞Êù•ÊîØÊåÅwithÁöÑ‰∏ä‰∏ãÊñáË∞ÉÁî®Ôºå‰πüÂæàÁÆÄÂçïÔºö 1234567def __enter__(self): acquired = self.acquire(blocking=True) assert acquired, &quot;Lock wasn&#x27;t acquired, but blocking=True&quot; return selfdef __exit__(self, exc_type=None, exc_value=None, traceback=None): self.release() Á§∫‰æã‰ª£Á†ÅËøôÈáåÊàëÂ∞±Áõ¥Êé•Ë¥¥‰∏ä‰ΩúËÄÖÁöÑÁ§∫‰æã‰ª£Á†ÅÔºö 12345678910conn = StrictRedis()with redis_lock.Lock(conn, &quot;name-of-the-lock&quot;): print(&quot;Got the lock. Doing some work ...&quot;) time.sleep(5)# Eg:lock = redis_lock.Lock(conn, &quot;name-of-the-lock&quot;)if lock.acquire(blocking=False): print(&quot;Got the lock.&quot;)else: print(&quot;Someone else has the lock.&quot;) ÊÄªÁªìËøô‰∏™Â∫ìÊèê‰æõÁöÑÂàÜÂ∏ÉÂºèÈîÅÂæàÁÅµÊ¥ªÔºåÊòØÂê¶ÈúÄË¶ÅË∂ÖÊó∂ÔºüÊòØÂê¶ÈúÄË¶ÅËá™Âä®Âà∑Êñ∞ÔºüÊòØÂê¶Ë¶ÅÈòªÂ°ûÔºüÈÉΩÊòØÂèØÈÄâÁöÑ„ÄÇÊ≤°ÊúâÊúÄÂ•ΩÁöÑÁÆóÊ≥ïÔºåÂè™ÊúâÊúÄÂêàÈÄÇÁöÑÁÆóÊ≥ïÔºåÁî®Êà∑Â∫îËØ•Ê†πÊçÆËá™Â∑±ÊòØÂú∫ÊôØË∞®ÊÖéÈÄâÊã©„ÄÇÂñúÊ¨¢ÁöÑÊúãÂèãÂèØ‰ª•ÂéªËøô‰∏™È°πÁõÆÁöÑGitHubÈ°µÈù¢ ÁÇπ‰∏™üåü„ÄÇ Âè¶Â§ñÔºåRedisËøô‰∏™‰∏úË•øÊÑüËßâÂèØ‰ª•ÂÅöÂæàÂ§ö‰∫ãÔºåËÄå‰∏îÂèØ‰ª•ÂÅöÂæàÂ§öÈ´òÊÄßËÉΩÁöÑ‰∫ã„ÄÇÂ∞§ÂÖ∂Âú®ÂàÜÂ∏ÉÂºèÁéØÂ¢É‰∏ãÔºåÈáçÁÇπÊòØËøòÊîØÊåÅÂêÑÁßçÊúâÊÑèÊÄùÁöÑÁâπÊÄß„ÄÇÁî®ÂÆÉÊù•ÂÆûÁé∞ÂàÜÂ∏ÉÂºèÈîÅÂ∞±ÊòæÂæóÂÜçÂêàÈÄÇ‰∏çËøá‰∫Ü„ÄÇ ÂàÜ‰∫´Â∞±Âà∞ËøôÈáåÔºåË∞¢Ë∞¢Â§ßÂÆ∂ÔºÅ","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"ÂàÜÂ∏ÉÂºèÈîÅ","slug":"ÂàÜÂ∏ÉÂºèÈîÅ","permalink":"https://unpluggedcoder.me/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"},{"name":"Distribution Lock","slug":"Distribution-Lock","permalink":"https://unpluggedcoder.me/tags/Distribution-Lock/"},{"name":"Redis","slug":"Redis","permalink":"https://unpluggedcoder.me/tags/Redis/"}]},{"title":"asynchronous logging with Python","slug":"Asynchronous-logging-with-Python","date":"2018-05-02T17:17:02.000Z","updated":"2022-09-15T15:51:05.342Z","comments":true,"path":"2018/05/03/Asynchronous-logging-with-Python/","link":"","permalink":"https://unpluggedcoder.me/2018/05/03/Asynchronous-logging-with-Python/","excerpt":"","text":"È°πÁõÆ‰∏≠ÈÄöÂ∏∏‰ºöÁî®Python loggingÊ®°ÂùóÂÅöÂèëÊä•Ë≠¶ÈÇÆ‰ª∂„ÄÅÂèëÊó•ÂøóÂà∞logstashÁ≠âÂäüËÉΩÔºåÁîöËá≥ÂèØ‰ª•ÂèëÈÄÅÂà∞slack„ÄÅtelegramËøôÁ±ªÂ∫îÁî®„ÄÇÂèØËÉΩÊòØloggingÊ®°ÂùóÂ§™Â•Ω‰∫ÜÔºåÁî®Êù•ÂÅöËøô‰∫õnotificationÈÉΩË∂≥Â§ü‰∫Ü„ÄÇ‰ΩÜÂ¶ÇÊûúÊúâÈ¢ëÁπÅÁöÑlogËØ∑Ê±ÇÊàñËÄÖÊØîËæÉÈ´òÁöÑÂìçÂ∫îË¶ÅÊ±ÇÔºåÂèØËÉΩÂ∞±‰ºöÊúâÂæàÂ§öÊó∂Èó¥Ëä±Âú®Ëøô‰∫õÁΩëÁªúÊó•ÂøóÁöÑËøûÊé•‰∏éÊñ≠ÂºÄ‰∏äÔºåÂõ†Ê≠§ÊÉ≥ÊÉ≥Â§ßPythonÂ∫îËØ•ÊúâÂºÇÊ≠•Êó•Âøó‰πãÁ±ªÁöÑÁ¨¨‰∏âÊñπÊ®°ÂùóÂêß„ÄÇÊâæ‰∫ÜÂçäÂ§©Ê≤°ÊúâÂêàÈÄÇÁöÑÂèØ‰ª•Êª°Ë∂≥ÊàëËøôÁ±ªÈÄöÁî®ÁΩëÁªúÊó•ÂøóÁöÑÊ®°ÂùóÔºåÈÅÇËá™Â∑±ÂÜô‰∫Ü‰∏™„ÄÇ ‰∏ªË¶ÅÁî®ÁöÑÊòØthreadingÊ®°ÂùóÔºåÂΩìÁÑ∂Â¶ÇÊûúËßâÂæó‰∏çÂêàÈÄÇÂèØ‰ª•Áî®Celery„ÄÇÊÄùË∑ØÂæàÁÆÄÂçïÔºåÈáçËΩΩlogging.HandlerÊù•ÂÜôËá™Â∑±ÁöÑÊó•ÂøóÂ§ÑÁêÜ„ÄÇËÄÉËôëÂà∞ÁΩëÁªúÊó•ÂøóÂèØËÉΩÊúâÂ¶Ç‰∏äÂêÑÁßçÂ∫îÁî®ÔºåÂÜçÂä†‰∏äÂ¶ÇÊûúÈúÄË¶Å‰ΩøÁî®CeleryÁöÑËØùhandler functionÈúÄË¶ÅÂèØÂ∫èÂàóÂåñÔºåÂõ†Ê≠§‰º†‰∏™ÂõûË∞ÉÁªôhandlerÂÆû‰æãÔºåÂπ∂Âú®emitÊñπÊ≥ï‰∏≠Ë∞ÉÁî®„ÄÇËøô‰∏™ÂõûË∞ÉÈáåÂÅöÁΩëÁªúÊó•ÂøóÁöÑÂêÑÁßçÊìç‰ΩúÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÂÅöÂà∞Ë∂≥Â§üÁöÑÂèØÂÆöÂà∂ÂåñÔºåËØù‰∏çÂ§öËØ¥Ôºå‰∏ä‰ª£Á†Å„ÄÇ 123456789101112131415161718import loggingimport timefrom celery import shared_taskfrom asynclog import AsyncLogDispatcher# ‰ΩøÁî®Celery@shared_taskdef write_task(msg): # Write log in Network IO print(msg)celery_handler = AsyncLogDispatcher(write_task, use_thread=False, use_celery=True)celery_handler.setLevel(logging.INFO)logger.addHandler(celery_handler)logger.info(&#x27;Test Log&#x27;) 1234567891011121314# ‰ΩøÁî®threadingdef write_log(msg): # Do write stuff, such as write log msg into network. # ... time.sleep(0.5)logger = logging.getLogger()logger.setLevel(logging.INFO)handler = AsyncLogDispatcher(write_log)handler.setLevel(logging.INFO)logger.addHandler(handler)logger.info(&#x27;Test Log&#x27;) 1234567891011121314151617181920212223242526272829# ÁªìÂêàdictConfiglog_cfg = &#123; &#x27;version&#x27;: 1, &#x27;disable_existing_loggers&#x27;: False, &#x27;formatters&#x27;: &#123; &#x27;simple&#x27;: &#123; &#x27;format&#x27;: &#x27;%(asctime)s \\n %(levelname)s \\n %(message)s&#x27; &#125;, &#125;, &#x27;handlers&#x27;: &#123; &#x27;async_handler&#x27;: &#123; &#x27;level&#x27;: &#x27;INFO&#x27;, &#x27;formatter&#x27;: &#x27;simple&#x27;, &#x27;class&#x27;: &#x27;asynclog.AsyncLogDispatcher&#x27;, &#x27;func&#x27;: &#x27;write_log&#x27;, &#125; &#125;, &#x27;loggers&#x27;: &#123; &#x27;asynclogger&#x27;: &#123; &#x27;handlers&#x27;: [&#x27;async_handler&#x27;, ], &#x27;level&#x27;: &#x27;DEBUG&#x27;, &#x27;propagate&#x27;: False, &#125;, &#125;&#125;logging.config.dictConfig(log_cfg)logger = logging.getLogger(&#x27;asynclogger&#x27;)logger.info(&#x27;Test asynclog&#x27;) ËÄÉËôëÂà∞ÈáçËΩΩÁöÑÁ±ªÂÆûÈôÖÂè™ÊòØÁî®loggingÁöÑÊñπÊ≥ïÊù•filter„ÄÅformatÊó•ÂøóÔºåÁúüÊ≠£Â§ÑÁêÜÁöÑÂÖ∂ÂÆûÂú®ÂõûË∞É‰∏≠ÔºåÊâÄ‰ª•Á±ªÂêç‰πüÂ∞±‰∏çÊï¢Âè´AsyncLogHandler, Â∞±ÂèñÂêçAsyncLogDispatcher„ÄÇ ËØ•Ê®°ÂùóÂ∑≤‰∏ä‰º†Ëá≥pypi.org, pip install asynclogÂç≥ÂèØÔºå‰ª£Á†ÅÊâòÁÆ°Âú®ÊàëÁöÑGitHub, Ê¨¢Ëøé‰∫§ÊµÅ„ÄÇ","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"asynchronous","slug":"asynchronous","permalink":"https://unpluggedcoder.me/tags/asynchronous/"},{"name":"logging","slug":"logging","permalink":"https://unpluggedcoder.me/tags/logging/"},{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Celery","slug":"Celery","permalink":"https://unpluggedcoder.me/tags/Celery/"}]},{"title":"Âà©Áî®SSHËøúÁ®ãÁ´ØÂè£ËΩ¨ÂèëËß£ÂÜ≥Resilio SyncÊó†Ê≥ïËøûÊé•ÈóÆÈ¢ò","slug":"ssh-remote-forward-for-resilio-sync","date":"2017-11-05T14:11:24.000Z","updated":"2022-09-15T15:51:05.352Z","comments":true,"path":"2017/11/05/ssh-remote-forward-for-resilio-sync/","link":"","permalink":"https://unpluggedcoder.me/2017/11/05/ssh-remote-forward-for-resilio-sync/","excerpt":"","text":"Âõ†‰∏∫‰∏Ä‰∫õ‰ºóÊâÄÂë®Áü•ÁöÑÂéüÂõ†ÔºåÊó©Âú®Âá†‰∏™ÊúàÂâçResilio SyncÂ∞±Ë∑™‰∫ÜÔºà‰πüÂ∞±ÊòØÂú®ÊàëÂàöË¥≠‰π∞ÂêéÁöÑÂá†‰∏™Êúàü§£ÔºâÔºå‰πãÂêé‰πüÂ∞ùËØï‰∫Ü‰∏Ä‰∫õÁΩë‰∏äÁöÑÊñπÊ≥ïÔºåÂßãÁªàÈÉΩ‰∏çË°å„ÄÇÂêéÊù•Âøô‰∫éÂ∑•‰Ωú‰πüÊ≤°ÊúâÂéªÊäòËÖæ‰∫ÜÔºåÂè™ÊòØÁÆÄÂçïÁöÑÁî®ÂÆÉPredefined hosts(È¢ÑÂÆö‰πâ‰∏ªÊú∫)ÂäüËÉΩËÆ©ÊàëËá≥Â∞ëÂú®Â±ÄÂüüÁΩëÈáåÂèØ‰ª•Â§á‰ªΩÁÖßÁâá„ÄÇ Âë®Êú´ÂøΩÁÑ∂ÊÉ≥Âà∞SSH‰∏çÊòØÂèØ‰ª•ËøúÁ®ãÁ´ØÂè£ËΩ¨Âèë‰πàÔºüÂ∞ÜÊàëÁöÑResilio SyncÊúçÂä°Âô®ÔºàÊ†ëËéìÊ¥æ2ÔºâÁ´ØÂè£Êò†Â∞ÑÂà∞ÂÖ¨ÁΩë‰∏ªÊú∫Âç≥ÂèØÔºåÁÑ∂ÂêéÂú®Resilio SyncÂÆ¢Êà∑Á´ØÈáåÂ°´ÂÜôÂÖ¨ÁΩëÁöÑÁ´ØÂè£‰∏çÂ∞±OK‰∫Ü‰πàÔºåÂæàÁÆÄÂçïÁöÑÊÄùË∑Ø„ÄÇ ËÆæÂ§áÁéØÂ¢ÉÂÅáËÆæËÆæÂ§áÁéØÂ¢ÉÂ¶Ç‰∏ãÔºö Êú¨Âú∞ÂÜÖÁΩëResilio SyncÊúçÂä°Âô® ÂÖ¨ÁΩëÊúçÂä°Âô®ÔºåÂÅáËÆæIP: 223.23.23.23 ÈÖçÁΩÆÂÖ¨ÁΩëÊúçÂä°Âô®sshd ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂/etc/ssh/sshd_config, Ê∑ªÂä†ÊàñÂºÄÂêØGatewayPortsÈÄâÈ°π 12# /etc/ssh/sshd_configGatewayPorts yes Ëøô‰∏™ÈÄâÈ°πÂÖÅËÆ∏ËøúÁ®ãÁ´ØÂè£ÁõëÂê¨ÊâÄÊúâÂú∞ÂùÄÂèëÊù•ÁöÑËØ∑Ê±Ç„ÄÇÁÑ∂ÂêéÈáçÂêØsshdÊúçÂä°„ÄÇ 1$ sudo service sshd restart ËøúÁ®ãÁ´ØÂè£ËΩ¨ÂèëÂÖ≥‰∫éËøúÁ®ãÁ´ØÂè£ËΩ¨ÂèëÊúâÂæàÂ§öÊñáÁ´†ÔºåËøôÈáåÂ∞±‰∏çÂÜçËµòËø∞‰∫ÜÔºåËØ¶ÁªÜÂèØ‰ª•ÂèÇËÄÉÊñáÁ´†Êú´Â∞æÂá†‰∏™ÈìæÊé•„ÄÇ‰ª•‰∏ãÊòØÂØπÂÜÖÁΩëÊú∫Âô®ÁöÑÈÖçÁΩÆÔºåÂÖ∑‰ΩìÊ≠•È™§Â¶Ç‰∏ãÔºö ‰øùÊåÅsshÈïøËøûÊé• $ vim ~/.ssh/config Âä†ÂÖ•Â¶Ç‰∏ãÈÖçÁΩÆ 12Host * ServerAliveInterval 60 ÂºÄÂêØsshÁ´ØÂè£ËΩ¨Âèë Âú®ÂÜÖÁΩëÊú∫Âô®‰∏äÊâßË°åÂ¶Ç‰∏ãÂëΩ‰ª§Ôºö 1$ ssh -fCgN -R 0.0.0.0:8090:localhost:37879 user@223.23.23.23 8090ÊòØËøúÁ®ã‰∏ªÊú∫‰∏äÂºÄÊîæÁöÑÁ´ØÂè£ÔºåÊ≥®ÊÑèËøúÁ®ã‰∏ªÊú∫ÁöÑÈò≤ÁÅ´Â¢ô‰ª•ÂèäVPCÁöÑÈò≤ÁÅ´Â¢ô‰∏çË¶ÅÈòªÊ≠¢ËØ•Á´ØÂè£„ÄÇ37879ÊòØResilio Sync‰æ¶Âê¨ÁöÑÁ´ØÂè£ÔºåËøô‰∏™ÂèØ‰ª•Âú®Web UI‰∏äÊü•ÊâæÂà∞„ÄÇ ÂÖ≥‰∫éÂÖ∂ÂÆÉÂá†‰∏™ÂèÇÊï∞ÁöÑËß£ÈáäÊàëÂ∞±Ë¥¥ËøáÊù•Ôºö -C ÂéãÁº©Êï∞ÊçÆ‰º†Ëæì-f Â∞Ü ssh ËΩ¨Âà∞ÂêéÂè∞ËøêË°åÔºåÂç≥ËÆ§ËØÅ‰πãÂêéÔºåssh Ëá™Âä®‰ª•ÂêéÂè∞ËøêË°å„ÄÇ‰∏çÂú®ËæìÂá∫‰ø°ÊÅØ-N ‰∏çÊâßË°åËÑöÊú¨ÊàñÂëΩ‰ª§ÔºåÂç≥ÈÄöÁü• sshd ‰∏çËøêË°åËÆæÂÆöÁöÑ shell ÈÄöÂ∏∏‰∏é -f ËøûÁî® Á®çÂæÆÈúÄË¶ÅÂº∫Ë∞É‰∏ãÁöÑÂèÇÊï∞Ôºö -g Allows remote hosts to connect to local forwarded ports. If used on a multiplexed connection, then this option must be specified on the master process. -gÈÄâÈ°πÂÖÅËÆ∏ËøúÁ®ã‰∏ªÊú∫ÂèëËµ∑Âà∞Êú¨Âú∞‰∏ªÊú∫ÁöÑÁ´ØÂè£ËøûÊé•ÔºåËøô‰∏™ÂøÖÈ°ªË¶ÅÂºÄÂêØ„ÄÇ -R [bind_address:]port:host:hostport ‚Ä¶‚Äã By default, the listening socket on the server will be bound to the loopback interface only. This may be overridden by specifying a bind_address. An empty bind_address, or the address ‚Äò*‚Äô, indicates that the remote socket should listen on all interfaces. Specifying a remote bind_address will only succeed if the server‚Äôs GatewayPorts option is enabled (see sshd_config(5)). ÂêåÊ†∑ËøôÈáåÂèØ‰ª•ÁúãÂà∞ÊñáÊ°£‰∏≠ÊåáÊòéËøúÁ®ã‰∏ªÊú∫ÁöÑGatewayPortsÈÄâÈ°πÂøÖÈ°ªÂºÄÂêØÔºåËøô‰∏™Âú®‰∏ä‰∏ÄÁÇπÊàë‰ª¨Â∑≤ÁªèÈÖçÁΩÆËøá‰∫Ü„ÄÇ ÂèØ‰ª•ÊääËøô‰∏™SSHÂëΩ‰ª§Âä†ÂÖ•Ëá™ÂêØÂä®ËÑöÊú¨„ÄÇÂú®ÈÖçÁΩÆÁöÑËøáÁ®ã‰∏≠Âª∫ËÆÆÂÖàÊéíÊü•Èò≤ÁÅ´Â¢ôÈóÆÈ¢òÔºåÈÅøÂÖçÁ´ØÂè£Ë¢´ÈòªÊ≠¢„ÄÇÂèØ‰ª•ÂÖàÁî®PythonÂÆòÊñπÊñáÊ°£ÁöÑËÑöÊú¨ÂÅöÊ®°ÊãüËØ∑Ê±ÇÊµãËØïÔºåËΩ¨ÂèëÊàêÂäüÂêéÂÜçÂàáÊç¢‰∏∫Resilio SyncÁ´ØÂè£„ÄÇ Resilio SyncÂÆ¢Êà∑Á´ØÈÖçÁΩÆÊúÄÂêé‰∏ÄÊ≠•Â∞±ÂæàÁÆÄÂçï‰∫ÜÔºåÁõ¥Êé•Âú®ÂÆ¢Êà∑Á´ØÂÖ±‰∫´Êñá‰ª∂Â§πÁöÑPreferences(È¶ñÈÄâÈ°π)ÈáåÊ∑ªÂä†Predefined hosts(È¢ÑÂÆö‰πâ‰∏ªÊú∫)„ÄÇ ÂØπ‰∫éÊâãÊú∫ÂÆ¢Êà∑Á´ØÁöÑÁõ∏Êú∫Â§á‰ªΩÊ≤°ÊúâËøô‰∏™ÈÄâÈ°πÔºåËøôÁÇπÊØîËæÉËõãÁñºÔºåÊöÇÊó∂Êó†Ê≥ïÈÄöËøáËøô‰∏™ÊñπÊ≥ï‰∫Ü„ÄÇ ÂÆûÊµãÊïàÊûúÁî®Êà∑Êï∞ÂÜç‰πü‰∏ç‰∏∫0‰∫ÜÔºå‰∏ä‰º†ÈÄüÂ∫¶100Â§öKB&#x2F;SÔºå‰∏ãËΩΩÈÄüÂ∫¶1+MB&#x2F;SÔºåÊØîËæÉÁ¨¶ÂêàÊàëÁöÑÂÖ¨ÁΩë‰∏ªÊú∫Â∏¶ÂÆΩÔºåÂü∫Êú¨Ë∑ëÊª°‰∫Ü„ÄÇËá≥‰∫éËøô‰∏™ÊµÅÈáèÊòØÂê¶Ëµ∞ÂÖ¨ÁΩë‰∏ªÊú∫ÊöÇ‰∏î‰∏çÊ∏ÖÊ•öÔºåÊàëËÆ§‰∏∫Ëøô‰∏™È¢ÑÂÆö‰πâ‰∏ªÊú∫Â∫îËØ•Âè™ÊòØÂÅö‰∏∫‰∏Ä‰∏™ÂèëÁé∞ÊúçÂä°Ôºå‰ΩÜÂÆûÈôÖÁöÑÈÄüÂ∫¶ÊòæÁ§∫Âá∫‰ºº‰πéÂíåËøúÁ®ãËΩ¨ÂèëÁöÑÂÖ¨ÁΩë‰∏ªÊú∫ÊúâÂÖ≥ü§£. ÂèÇËÄÉÈìæÊé• SSHÈößÈÅì‰∏éÁ´ØÂè£ËΩ¨ÂèëÂèäÂÜÖÁΩëÁ©øÈÄè SSH ËøúÁ®ãÁ´ØÂè£ËΩ¨Âèë Linux‰ΩøÁî®sshË∂ÖÊó∂Êñ≠ÂºÄËøûÊé•ÁöÑÁúüÊ≠£ÂéüÂõ†","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"SSH","slug":"SSH","permalink":"https://unpluggedcoder.me/tags/SSH/"},{"name":"Resilio Sync","slug":"Resilio-Sync","permalink":"https://unpluggedcoder.me/tags/Resilio-Sync/"},{"name":"BT Sync","slug":"BT-Sync","permalink":"https://unpluggedcoder.me/tags/BT-Sync/"}]},{"title":"Migrate to Hexo","slug":"Migrate-to-Hexo","date":"2017-10-29T15:05:33.000Z","updated":"2022-09-15T15:51:05.346Z","comments":true,"path":"2017/10/29/Migrate-to-Hexo/","link":"","permalink":"https://unpluggedcoder.me/2017/10/29/Migrate-to-Hexo/","excerpt":"","text":"‰ªäÂ§©Áªà‰∫éÂ∞Ü‰∏ªÈ°µÂÆåÂÖ®ÁöÑ‰ªéWordpressÂàáÊç¢Âà∞‰∫ÜHexo, Áé∞Âú®ÂèØ‰ª•Áî®markdownÂÜô‰Ωú‰∫ÜÔºå‰∏çÁî®ÊãÖÂøÉÊ†ºÂºèÈóÆÈ¢òüòâ„ÄÇ ‰πãÂâçÂ∞ùËØï‰∫ÜÂåÖÊã¨jekyllÂíåPelicanÂú®ÂÜÖÁöÑÂá†‰∏™ÈùôÊÄÅÂçöÂÆ¢ÊñπÊ°àÔºåÂîØÁã¨HexoËÉΩÂ§üÂæàÂ•ΩÁöÑÂ∞ÜÊàë‰πãÂâçÊóßÁöÑWordpressËΩ¨Êç¢ÊàêmarkdownÔºåËôΩÁÑ∂‰πüËä±‰∫Ü‰∏çÂ∞ëÂäüÂ§´ÊâãÂä®‰øÆÊîπÊóßÁöÑÊñáÁ´†Ôºå‰ΩÜÂ∑•‰ΩúÈáèÁõ∏ÊØîÂÖ∂ÂÆÉÊ°ÜÊû∂Â∞ë‰∫ÜÂæàÂ§öÔºåÂä†‰∏äpages.github.comÁöÑÊîØÊåÅÂ∑≤ÁªèÂæàÂ•ΩÁöÑÊª°Ë∂≥‰∫ÜÊàëÁöÑÈúÄÊ±Ç„ÄÇ‰ΩøÁî®ÁöÑÊòØcactus-dark‰∏ªÈ¢òÔºåÊÑüË∞¢‰ΩúËÄÖÔºÅ ÂÜôÊñáÁ´†ÁöÑÈ¢ëÁéáËøú‰∏çÂ¶Ç‰ª•Ââç‰∫ÜÔºå4Êúà‰ªΩÁöÑÊó∂ÂÄôÂàõÂª∫‰∫ÜË∞ÅÁöÑEmail„ÄÇËøô‰∏™ÁΩëÁ´ôÂÖ∂ÂÆûÊòØÂèÇÁÖß‰∫Ümaildrop.ccÁöÑÊ∫êÁ†ÅÁî®Python+DjangoÈáçÊñ∞ÂÆûÁé∞‰∫ÜÔºåÁÆÄÂåñ‰∫ÜÂûÉÂúæÈÇÆ‰ª∂ËøáÊª§Âú®ÂÜÖÁöÑÂæàÂ§öÂäüËÉΩÔºå‰ΩÜ‰πüÂü∫Êú¨Â§üÁî®ÔºåÁõÆÂâçÈô§‰∫ÜËá™Â∑±‰πüÊ≤°Êúâ‰ªÄ‰πàÁî®Êà∑ÈáèÔºåÁÆóÊòØ‰∏Ä‰∏™Â§±Ë¥•ÁöÑSide projectÂêß„ÄÇÂêéÁª≠‰ºöÂ∞ÜËøô‰∏™Ê∫êÁ†ÅÂÖ¨ÂºÄÂà∞GitHub‰∏äÔºåÂΩìÁÑ∂‰∫ÜÔºå‰ª•Êàë‰ª•ÂæÄÁöÑÈ£éÊ†ºÔºåpoÂà∞GitHubÁöÑÈ°πÁõÆÂü∫Êú¨Â∞±‰∏çÊõ¥Êñ∞‰∫ÜüòÇ„ÄÇ ‰∏çËøáËá™Â∑±‰πüÂæàÂø´Âú®ÈÖùÈÖø‰∏ã‰∏Ä‰∏™Side project‰∫Ü„ÄÇÁî±‰∫éËá™Â∑±ÊòØÂêéÁ´ØÂá∫Ë∫´ÔºåÂØπÂâçÁ´ØÁü•ËØÜÈùûÂ∏∏Ê¨†Áº∫, ÊâÄ‰ª•ÁõÆÂâç‰πüÂú®Â≠¶‰π†‰∏Ä‰∏™ÂâçÁ´ØÊ°ÜÊû∂Angular 2+, ‰∏çÁü•‰∏çËßâÊÑüËßâÂÉèÂÖ®Ê†à‰∫Ü„ÄÇAnyway, Â∞ΩÊó©Â∞Ü‰∏™È°πÁõÆÂ∏¶ÁªôÂ§ßÂÆ∂Âêß„ÄÇ","categories":[],"tags":[]},{"title":"ÂàõÂª∫Django Rest FrameworkÁöÑÊñπÊ≥ïÂ∫èÂàóÂåñËßÜÂõæ","slug":"ÂàõÂª∫Django-Rest-FrameworkÁöÑÊñπÊ≥ïÂ∫èÂàóÂåñËßÜÂõæ","date":"2017-09-14T03:53:53.000Z","updated":"2022-09-15T15:51:05.352Z","comments":true,"path":"2017/09/14/ÂàõÂª∫Django-Rest-FrameworkÁöÑÊñπÊ≥ïÂ∫èÂàóÂåñËßÜÂõæ/","link":"","permalink":"https://unpluggedcoder.me/2017/09/14/%E5%88%9B%E5%BB%BADjango-Rest-Framework%E7%9A%84%E6%96%B9%E6%B3%95%E5%BA%8F%E5%88%97%E5%8C%96%E8%A7%86%E5%9B%BE/","excerpt":"","text":"Django Rest Framework(DRF)Êèê‰æõÁöÑÊ°ÜÊû∂ÊûÅÂ§ßÁöÑÊñπ‰æø‰∫ÜREST APIÁöÑÂºÄÂèëÂ∑•‰Ωú„ÄÇÂÖ∂‰∏≠ÁöÑgenericsÊ®°ÂùóÊèê‰æõ‰∫ÜÂæàÂ§öÈÄöÁî®Âú∫ÊôØ‰∏ãÁöÑËßÜÂõæ„ÄÇ‰ΩÜÊòØÂú®‰ΩøÁî®ÁöÑËøáÁ®ã‰∏≠ÂèëÁé∞Âú®Ê®°ÂûãÂ∫èÂàóÂåñModelSerializerÊñπÈù¢ÊÄªÊúâ‰∫õ‰∏ç‰æø„ÄÇ ‰æãÂ¶Ç‰∏ãÈù¢ÁöÑÊÉÖÂÜµ: 1234567891011121314151617# models.pyimport uuidfrom django.db import modelsclass Organization(models.Model): org_uuid = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False) name = models.CharField(max_length=40)class User(AbstractBaseUser): user_uuid = models.UUIDField( primary_key=True, default=uuid.uuid4, editable=False) # ‰∏∫‰∫ÜÊñπ‰æøÁÆÄÊ¥ÅÔºåÁúÅÁï•ÂÖ∂‰ΩôÂ≠óÊÆµÔºå‰æãÂ¶Çusername... org = models.ForeignKey(&#x27;Organization&#x27;, on_delete=models.CASCADE,) ÈÄöÂ∏∏Âú®Model‰∏≠ÈÉΩ‰ºöÈÅáÂà∞Â§ñÈîÆÊàñËÄÖÂÖ∂ÂÆÉÂÖ≥Á≥ªÁöÑÂ≠óÊÆµ„ÄÇÂú®ÂàõÂª∫UserÔºàÊó†È°ªËøûÁ∫ßÂàõÂª∫OrganizationÔºâÊàñËÄÖÊõ¥Êñ∞ÂÖ∂orgÂ≠óÊÆµÊó∂Êàë‰ª¨Â∏åÊúõÊèê‰æõÂÖ∂ÊâÄÂ±ûÁöÑOrganization‰∏ªÈîÆorg_uuidÂç≥ÂèØÔºåËÄåÂú®Ëé∑Âèñ‰∏Ä‰∏™UserÊó∂Ôºå‰ªÖ‰ªÖËøîÂõû‰∏Ä‰∏™org_uuidÂπ∂‰∏çËÉΩÂëäËØâË∞ÉÁî®ËÄÖ‰ªª‰ΩïÊúâÊÑè‰πâÁöÑOrganization‰ø°ÊÅØ„ÄÇÂõ†Ê≠§Áî®‰∫éÂàõÂª∫ÂíåËé∑ÂèñUserÁöÑÂ∫èÂàóÂåñÁ±ª‰πü‰∏çÂ∞ΩÁõ∏Âêå„ÄÇ ‰∫ãÂÆû‰∏äÊàëÊõ¥ÂÄæÂêë‰∫é‰ªéËØ∑Ê±ÇÁöÑÊñπÊ≥ïMethodËßíÂ∫¶Êù•ÂÜ≥ÂÆö‰ΩøÁî®‰ªÄ‰πàÊ†∑ÁöÑÂ∫èÂàóÂåñÁ±ª„ÄÇÊ†πÊçÆ‰∏äÈù¢ÁöÑÊÉÖÂÜµÔºåÊàëÈÄöÂ∏∏‰ºöËá≥Â∞ëÂàõÂª∫‰∏§ÁßçÊ®°ÂûãÂ∫èÂàóÂåñÁ±ªModelSerializerÔºö 1234567891011121314151617181920212223242526# serializers.pyfrom rest_framework import serializersfrom myapp import modelsclass OrganizationListViewSerializer(serializers.ModelSerializer): class Meta: model = models.Organization fields = &#x27;__all__&#x27;class UserListViewSerializer(serializers.ModelSerializer): org = OrganizationListViewSerializer() class Meta: model = models.User fields = &#x27;__all__&#x27;class UserCreateUpdateSerializer(serializers.ModelSerializer): org = serializers.PrimaryKeyRelatedField( queryset=models.Organization.objects.all()) class Meta: model = models.User fields = &#x27;__all__ Âà©Áî®ÂµåÂ•óÁöÑÂ∫èÂàóÂåñÁ±ªUserListViewSerializerËÉΩËá™Âä®Êâ©Â±ïOrganizationÁöÑ‰ø°ÊÅØ„ÄÇËÄåÂú®‰øÆÊîπÊàñËÄÖÂàõÂª∫UserÊó∂ÔºåÂè™ÈúÄË¶ÅÊèê‰æõOrganizationÁöÑ‰∏ªÈîÆÂç≥ÂèØ„ÄÇ Áé∞Âú®ÂõûÂà∞genericsÊ®°ÂùóÊèê‰æõÁöÑÈÄöÁî®ËßÜÂõæ‰∏äÔºåÊ†πÊçÆRESTÁöÑÂéüÂàôÔºåÈÄöÂ∏∏‰ΩøÁî®ÁöÑÊòØgenerics.ListCreateAPIViewÂíågenerics.RetrieveUpdateAPIView, Ëøô‰πüÊòØÊ†πÊçÆÊé•Âè£ÂíåËØ∑Ê±ÇÊñπÊ≥ïÂå∫ÂàÜÂá∫ÁöÑÈÄöÁî®ËßÜÂõæÔºåÂú®ËßÜÂõæËøôÁÇπ‰∏äÊ°ÜÊû∂ÂÅöÂæóÂæàÂ•Ω„ÄÇ‰ΩÜÊòØÈíàÂØπÂ∫èÂàóÂåñÁ±ªËøò‰∏çÂ§üÁÅµÊ¥ªÔºåÈªòËÆ§‰∏Ä‰∏™APIViewÂè™ËÉΩÂÆö‰πâ‰∏Ä‰∏™serializer_class„ÄÇËÄåÊàëÈúÄË¶ÅÁöÑÊòØÊ†πÊçÆ‰∏çÂêåËØ∑Ê±ÇÊñπÊ≥ïÂå∫ÂàÜÂá∫‰ΩøÁî®‰∏çÂêåÁöÑÂ∫èÂàóÂåñÁ±ª„ÄÇÂÆûÁé∞Â¶Ç‰∏ãÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354# views.pyfrom rest_framework import exceptionsfrom rest_framework import genericsfrom myapp import modelsfrom myapp import serializers as serclass MethodSerializerView(object): &#x27;&#x27;&#x27; Utility class for get different serializer class by method. For example: method_serializer_classes = &#123; (&#x27;GET&#x27;): MyModelListViewSerializer, (&#x27;PUT&#x27;, &#x27;PATCH&#x27;): MyModelCreateUpdateSerializer &#125; &#x27;&#x27;&#x27; method_serializer_classes = None def get_serializer_class(self): assert self.method_serializer_classes is not None, ( &#x27;Expected view %s should contain method_serializer_classes &#x27; &#x27;to get right serializer class.&#x27; % (self.__class__.__name__, ) ) for methods, serializer_cls in self.method_serializer_classes.items(): if self.request.method in methods: return serializer_cls raise exceptions.MethodNotAllowed(self.request.method)class UsersListCreateView(MethodSerializerView, generics.ListCreateAPIView): &#x27;&#x27;&#x27; API: /users Method: GET/POST &#x27;&#x27;&#x27; queryset = models.User.objects.all() method_serializer_classes = &#123; (&#x27;GET&#x27;): ser.UserListViewSerializer, (&#x27;POST&#x27;): ser.UserCreateUpdateSerializer &#125;class UsersDetailView(MethodSerializerView, generics.RetrieveUpdateAPIView): &#x27;&#x27;&#x27; API: /user/:user_uuid Method: GET/PUT/PATCH &#x27;&#x27;&#x27; queryset = models.User.objects.all() method_serializer_classes = &#123; (&#x27;GET&#x27;): ser.UserListViewSerializer, (&#x27;PUT&#x27;, &#x27;PATCH&#x27;): ser.UserCreateUpdateSerializer &#125; Ê≥®ÊÑèÊúÄÂêé‰∏§‰∏™ViewÁöÑÁ±ªÁªßÊâøÈ°∫Â∫èÔºåMethodSerializerViewË¶ÅÂú®ÂâçÔºåÊâçËÉΩ‰ΩøÂæóÂÆÉÁöÑget_serializer_classË¢´Ë∞ÉÁî®„ÄÇ Â¶ÇÊ≠§‰∏ÄÊù•ÂèØ‰ª•Ê†πÊçÆ‰∏çÂêåÁöÑÊñπÊ≥ïÈááÂèñ‰∏çÂêåÂ∫èÂàóÂåñÁ≠ñÁï•Ôºåüòâ","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Django","slug":"Django","permalink":"https://unpluggedcoder.me/tags/Django/"},{"name":"Django Rest Framework","slug":"Django-Rest-Framework","permalink":"https://unpluggedcoder.me/tags/Django-Rest-Framework/"}]},{"title":"Âø´ÈÄüÊï∞ÊçÆÊä•Ë°®Á•ûÂô®ModeAnalytics","slug":"modeanalytics","date":"2016-11-04T05:06:03.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2016/11/04/modeanalytics/","link":"","permalink":"https://unpluggedcoder.me/2016/11/04/modeanalytics/","excerpt":"","text":"ÊúÄËøëÂèëÁé∞‰∫Ü‰∏Ä‰∏™Âø´ÈÄüÊï∞ÊçÆÊä•Ë°®ÁöÑÁ•ûÂô®ÔºåModeAnalytics. ÁõÆÊ†áÁî®Êà∑ModeAnalytics(‰ª•‰∏ãÁÆÄÁß∞Mode)‰∏ªË¶ÅÈÄÇÂêà‰ΩøÁî®PythonÂíåSQLÁöÑÊï∞ÊçÆÊä•Ë°®ÁîüÊàêÊñπÂºèÔºå‰πüÊòØÁõÆÂâçÊàë‰∏ªË¶ÅÁî®ÁöÑ‰∏§ÁßçËØ≠Ë®Ä„ÄÇ ÂèØÈÄÇÈÖçÊï∞ÊçÆÊ∫ê ‰ªéÊèê‰æõÁöÑÊï∞ÊçÆÊ∫êÊù•ÁúãÂåÖÊã¨‰∫ÜÂá†‰πéÊâÄÊúâÂ∏∏ËßÅÁöÑÊï∞ÊçÆÊ∫ê„ÄÇÂêåÊ†∑ÂèØ‰ª•ËøûÊé•ÈòøÈáå‰∫ëÁöÑRDSÔºåÂè™ÈúÄË¶ÅÂºÄÂêØSSLÈ™åËØÅÂç≥ÂèØ„ÄÇÂ¶ÇÊûú‰Ω†Ë¶ÅËøûÊé•ÁöÑÊï∞ÊçÆÊ∫ê‰Ωç‰∫é‰∏Ä‰∏™ÁßÅÊúâÁΩëÁªú‰∏≠Ôºà‰æãÂ¶ÇÈòøÈáå‰∫ë‰∏ªÊú∫ÂÜÖÈÉ®ÁΩëÁªúÔºâÔºåÂàôÈúÄË¶ÅÂÄüÂä©Mode BridgeËøô‰∏™Áî±ModeÂºÄÂèëÁöÑÊ°•Êé•Â∑•ÂÖ∑ÔºåÂÖ∑‰ΩìÂÆâË£ÖÊñπÊ≥ïÂú®ËøûÊé•ÁöÑÊ≠•È™§‰∏≠ÈÉΩÊúâÊèê‰æõ„ÄÇ ‰ºòÂäøÂÆûÊó∂SQLËÆ°ÁÆó‰∏çÂêå‰∫éTableauÂíåÈòøÈáå‰∫ëÊï∞Âä†Êä•Ë°®Á≠âBIÊúçÂä°ÂéÇÂïÜÔºåModeÈùûÂ∏∏ÈÄÇÂêàÂø´ÈÄüËø≠‰ª£ÁöÑÊï∞ÊçÆÊä•Ë°®ÁîüÊàê„ÄÇÂâçËÄÖ‰∏çÂÖ∑Â§áÂú®Á∫øÂÆûÊó∂ËÆ°ÁÆóÔºåTableauÂè™ËÉΩ‰ªéÁé∞ÊúâÁöÑÊï∞ÊçÆ‰∏≠ÂÅöÊä•Ë°®ÂàÜÊûêÔºå‰ΩÜÊòØÂØπ‰∫éÂ§çÊùÇÁöÑÊü•ËØ¢ËÆ°ÁÆóÊÉ≥Ë¶ÅÂø´ÈÄüÂá∫Êä•Ë°®Â∞±‰∏çÂæó‰∏çÂ∞ÜÁªìÊûúÂÜôÂÖ•Êï∞ÊçÆÂ∫ì‰∏≠ÔºåÂÜçÁî®TableauÁ≠âÁ¨¨‰∏âÊñπÂ∑•ÂÖ∑ÂëàÁé∞„ÄÇËÄåModeÂèØ‰ª•Áõ¥Êé•ÊèêÂèñSQLËÆ°ÁÆóÁªìÊûúÔºå‰∏çÈúÄË¶Å‰ªª‰ΩïÈ¢ùÂ§ñÁöÑÂ≠òÂÇ®„ÄÇ Ëá™Âä®ÂåñÊä•Ë°®ÂëàÁé∞‰∏éÂÆöÂà∂ModeÂèØ‰ª•‰ªéSQLÁöÑÁªìÊûú‰∏≠Ëá™Âä®ÂëàÁé∞ÂõæË°®(Chart) &amp;nbsp; ËøòÂèØ‰ª•Â∞ÜÂ§ö‰∏™ÂõæË°®Êï¥Âêà‰∏∫‰∏Ä‰ªΩÊä•Ë°®(Report)„ÄÇÂÖ≥‰∫éÊä•Ë°®ÔºåËøòËÉΩÈÄöËøáHTMLËá™ÂÆö‰πâÊä•Ë°®ÁöÑÂ∏ÉÂ±Ä„ÄÇ ÂÆòÊñπÊèê‰æõ‰∫ÜÂæàÂ§öÂÆöÂà∂Êä•Ë°®ÁöÑÁ§∫‰æã„ÄÇ Êï¥ÂêàPythonPyÊòØÊï∞ÊçÆÂàÜÊûêÁöÑÂà©Âô®ÔºåÂØπ‰∫éÂ§çÊùÇÁöÑÂàÜÊûêÂíåËÆ°ÁÆóÔºåMode‰πüÂèØ‰ª•ÂÄüÂä©PythonÂÆûÁé∞„ÄÇ ModeËá™Â∏¶‰∫Ü‰∏Ä‰∏™Âú®Á∫øÁöÑPython notebookÁºñËæëÂô®ÔºåÂèØ‰ª•ÂØπSQLÁªìÊûúËøõË°å‰∫åÊ¨°Âä†Â∑•ÔºåSQLÁöÑÁªìÊûúÂ≠òÂÇ®Âú®datasetsËøô‰∏™ÂèòÈáè‰∏≠ÔºåÁî®Êü•ËØ¢ÁöÑÂêçÁß∞ÂÅöÁ¥¢ÂºïÂç≥ÂèØ„ÄÇ ËÄå‰∏îÂÆÉÁöÑPythonÁéØÂ¢ÉÂåÖÂê´‰∫ÜËÆ∏Â§öÂ∏∏ËßÅÁöÑËÆ°ÁÆóÂ∫ìÔºåÂ¶Çpandas„ÄÅnumpy„ÄÇ ÂÄºÂæó‰∏ÄÊèêÁöÑÊòØÁîöËá≥ÂåÖÊ∂µ‰∫ÜPlotlyËøô‰∏™ÂºÄÊ∫êÂõæÂΩ¢Â∫ìÔºåËÄåËøô‰∏™ÂºÄÊ∫êÂõæÂΩ¢Â∫ìÊú¨Ë∫´‰πüÊòØÊîØÊåÅPython notebookÁöÑÔºåÊâÄ‰ª•ÂèëÁé∞Mode‰πüÊîØÊåÅÂ∞ÜPlotÂä†Â∑•Âá∫Êù•ÁöÑÂõæË°®Âä†ÂÖ•Âà∞Êä•Ë°®‰∏≠Âéª„ÄÇ ÂàÜ‰∫´‰æøÊç∑ÂèØ‰ª•Â∞ÜÊä•Ë°®Áõ¥Êé•ÈÄöËøáÈÇÆ‰ª∂ÁöÑÊñπÂºèÂàÜ‰∫´Áªô‰ªñ‰∫∫ÔºåÊé•Êî∂ÈÇÆ‰ª∂ËÄÖ‰∏çÈúÄË¶ÅÊ≥®ÂÜåModeÂ∏êÂè∑„ÄÇÈÇÆ‰ª∂ÂÜÖÂÆπÂè™ËÉΩÂåÖÂê´TableÊï∞ÊçÆÔºå‰ΩÜÂ¶ÇÊûúÂêåÊó∂ÂãæÈÄâPDFÈÄâÈ°πÔºåÂàôÊä•Ë°®Â∞Ü‰ª•PDFÈôÑ‰ª∂ÁöÑÂΩ¢ÂºèÔºåËøôÊ†∑Â∞±ËÉΩÁúãÂà∞Êä•Ë°®ÂÜÖÁöÑÂõæË°®‰∫Ü„ÄÇ ËÆ°ÂàíËøêË°åÊä•Ë°®ÊúÄÂ§ßÈúÄÊ±ÇÊòØËÉΩÂ§üËá™Âä®ËÆ°ÁÆóÂíåÂàÜ‰∫´ËÆ¢ÈòÖ„ÄÇModeÂêåÊ†∑ÂèØ‰ª•ÂÅöÂà∞„ÄÇÂèØ‰ª•ÂÉèÂÆöÂà∂Crontab‰∏ÄÊ†∑ËÆ¢Âà∂Êä•Ë°®ÁöÑËÆ°Âàí‰ªªÂä°„ÄÇÂú®ËÆ°Âàí‰ªªÂä°Êó∂Èó¥Âà∞ËææÊó∂‰ºöËá™Âä®ÊâßË°åÊä•Ë°®‰∏≠ÁöÑSQLËØ≠Âè•ÔºåÂπ∂Â∞ÜÂæóÂà∞ÊúÄÊñ∞ÁöÑÁªìÊûúÂà∂ÊàêÊä•Ë°®ÂèëÈÄÅÊàêÈÇÆ‰ª∂ËÆ¢ÈòÖ„ÄÇ ModeÂæàÂº∫Â§ßÔºåÁî®Ëµ∑Êù•ÂæàÁàΩÔºå‰∏ªË¶ÅÊòØÊ≤°Ë¢´Â¢ôÔºÅÈÄüÂ∫¶Ëøò‰∏çÈîôÔºÅ ÂÆ¢ÊúçÂìçÂ∫îÊó∂Èó¥Âú®‰∏ÄÂ§©ÂÜÖÔºå$19&#x2F;‰∫∫&#x2F;ÊúàÁöÑ‰ª∑Ê†º‰πüÊòØÁõ∏ÂØπÂæà‰æøÂÆú„ÄÇ Âêå‰∏Ä‰∏™ÈÇÆÁÆ±ÂêéÁºÄÊ≥®ÂÜåÁöÑË¥¶Êà∑‰ºöÈªòËÆ§Âä†ÂÖ•Âà∞Âêå‰∏Ä‰∏™organization‰∏≠„ÄÇ","categories":[{"name":"Êï∞ÊçÆÁõ∏ÂÖ≥","slug":"Êï∞ÊçÆÁõ∏ÂÖ≥","permalink":"https://unpluggedcoder.me/categories/%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Data Visualization","slug":"Data-Visualization","permalink":"https://unpluggedcoder.me/tags/Data-Visualization/"},{"name":"ModeAnalytics","slug":"ModeAnalytics","permalink":"https://unpluggedcoder.me/tags/ModeAnalytics/"},{"name":"RDS","slug":"RDS","permalink":"https://unpluggedcoder.me/tags/RDS/"},{"name":"SQL","slug":"SQL","permalink":"https://unpluggedcoder.me/tags/SQL/"}]},{"title":"ÈòøÈáå‰∫ëRDSË°®Êï∞ÊçÆÂØºÂá∫ÔºàÂêåÊ≠•ÔºâËá≥AWS RedShift","slug":"rds-to-redshift","date":"2016-11-04T03:55:49.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2016/11/04/rds-to-redshift/","link":"","permalink":"https://unpluggedcoder.me/2016/11/04/rds-to-redshift/","excerpt":"","text":"Âà©Áî®DataPipeline(Ëá™Âä®) Âú®AWSÈ°µÈù¢‰∏äÊåâÁÖßÊåáÁ§∫ÂàõÂª∫‰∏Ä‰∏™DataPipeline‰ªªÂä°ÔºåÈÄâÊã©Ê®°ÊùøÔºö‚ÄùFull copy of RDS MySQL table to RedShift‚Äù ÊàñËÄÖ ‚ÄúIncremental copy of RDS MySQL table to RedShift‚ÄùÔºåÊåâÁÖßË°®Ê†ºÊèêÁ§∫ÁöÑÂèÇÊï∞Â°´ÂÜôÂç≥ÂèØ„ÄÇ Ê≥®ÊÑè‰∫ãÈ°πÔºö ÈòøÈáåÁöÑRDSË¶ÅÂ°´ÂÖ¨ÁΩëDNSÂú∞ÂùÄÔºåÂπ∂‰∏îÂºÄÊîæÁôΩÂêçÂçïÔºõ DataPipeline‰ºöÂ∞ÜRDSÊï∞ÊçÆÂÖàStageÂà∞ S3‰∏äÔºåÈÄâÊã©ÁöÑS3Ë¶ÅÂíåRedShiftÂú®Âêå‰∏Ä‰∏™Âå∫ÂüüÔºõ Â¶ÇÊûúÈÄâÊã©Â¢ûÈáèÊã∑Ë¥ùÔºåÈúÄË¶ÅË°®ÂåÖÂê´‰∏Ä‰∏™Last Modified ColumnÂ≠óÊÆµÔºõ S3toRedShiftËøô‰∏™ÊµÅÁ®ãÈúÄË¶ÅÊâãÂä®ËÆæÁΩÆCOPYÁöÑcommand optionÔºö * **CSV DELIMITER &#39;,&#39; COMPUPDATE OFF dateformat &#39;auto&#39; ACCEPTANYDATE IGNOREBLANKLINES** DataPipelineÂú®ÊâßË°åÊó∂‰ºöÂêØÂä®‰∏Ä‰∏™EC2Êù•Ë∑ë‰ªªÂä°ÔºåË∑ëÂÆåÈªòËÆ§2Â∞èÊó∂‰πãÂêéËøô‰∏™EC2‰ºöËá™Âä®terminateÔºåÊúüÈó¥Â¶ÇÊûúÊúâÈîôËØØÂèØ‰ª•Ê†πÊçÆÈîôËØØÊèêÁ§∫‰øÆÂ§çÔºåÂÜçÁ´ãÂç≥ÊâãÂä®RerunÂá∫ÈîôÁöÑÊ≠•È™§ÔºåÂêéÁª≠Ê≠•È™§‰ºöÂú®Âá∫ÈîôÊ≠•È™§ÊàêÂäüÂêéÊª°Ë∂≥ÂÖ∂dependencyËá™Âä®ÊâßË°åÔºå‰∏çÈúÄË¶ÅÈáçÂºÄ‰∏Ä‰∏™EC2„ÄÇ Âà©Áî®AWS S3(ÊâãÂä®) ËØ•ÊñπÂºè‰Ωú‰∏∫DataPipelineÂ§±ÊïàÊó∂ÔºàË∑®ÂõΩÁ∫øË∑ØÊïÖÈöúÁ≠âÁ≠â‚Ä¶ÔºâÁöÑÊâãÂä®Â§áÁî®ÊñπÊ°à„ÄÇ Áî®MySQLÂÆ¢Êà∑Á´ØÊàñ‰ªªÊÑèÊñπÂºèÂ∞ÜÊï∞ÊçÆÂØºÂá∫‰∏∫CSVÊñá‰ª∂Ôºå‰∏çÂê´headerÔºåCSV‰∏≠Â≠óÊÆµÈ°∫Â∫èÂøÖÈ°ªÂíåË°®Â≠óÊÆµÈ°∫Â∫è‰∏ÄËá¥ÔºÅ Â∞ÜCSVÊñá‰ª∂‰∏ä‰º†Ëá≥AWS S3; Áî®psqlËøûÊé•RedShiftÔºåËøûÊé•ÂëΩ‰ª§Ê†ºÂºèÔºö $ psql -h [Endpoint] -U [UserName] -d [DatabaseName] -p 5439_ ‰æãÂ¶ÇÔºö_psql -h ****.****.us-west-2.redshift.amazonaws.com -U user -d database -p 5439_ Áî®psqlËøûÊé•ÂêéÊâßË°å‰ª•‰∏ãÂëΩ‰ª§Âç≥ÂèØ:COPY [TableName] FROM &#39;s3://[BucketName]/path/to/data.csv&#39; CREDENTIALS &#39;aws_access_key_id=[S3_ACCESS_KEY];aws_secret_access_key=[S3_SECRET_KEY]&#39; CSV delimiter &#39;,&#39; dateformat &#39;auto&#39;;","categories":[{"name":"AWS","slug":"AWS","permalink":"https://unpluggedcoder.me/categories/AWS/"}],"tags":[{"name":"RDS","slug":"RDS","permalink":"https://unpluggedcoder.me/tags/RDS/"},{"name":"Aliyun","slug":"Aliyun","permalink":"https://unpluggedcoder.me/tags/Aliyun/"},{"name":"AWS","slug":"AWS","permalink":"https://unpluggedcoder.me/tags/AWS/"},{"name":"DataPipeline","slug":"DataPipeline","permalink":"https://unpluggedcoder.me/tags/DataPipeline/"},{"name":"RedShift","slug":"RedShift","permalink":"https://unpluggedcoder.me/tags/RedShift/"}]},{"title":"Mac‰∏ãÊê≠Âª∫PythonÂºÄÂèëÁéØÂ¢É","slug":"Mac‰∏ãÊê≠Âª∫PythonÂºÄÂèëÁéØÂ¢É","date":"2016-03-09T15:14:30.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2016/03/09/Mac‰∏ãÊê≠Âª∫PythonÂºÄÂèëÁéØÂ¢É/","link":"","permalink":"https://unpluggedcoder.me/2016/03/09/Mac%E4%B8%8B%E6%90%AD%E5%BB%BAPython%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","excerpt":"","text":"ËÆ∞ÂΩï‰∏ã‰πãÂâçÁöÑÂÆâË£ÖÊµÅÁ®ã ÂÆâË£ÖPython ÂÖàÂÆâË£Öhomebrew„ÄÇ Áî®homebrewÂÆâË£ÖpythonÔºåÊé®Ëçêpython3„ÄÇ Â¶ÇÊûúÂ∑≤ÁªèÁî®Ëá™Â∏¶ÁöÑ&#x2F;usr&#x2F;bin&#x2F;pythonÂÆâË£Ö‰∫ÜpipÁöÑËØùÂèØ‰ª•Áî®pip uninstall pipÊù•Âà†Èô§Ëá™Ë∫´ÔºåÈÅøÂÖçÂíåbrewÁöÑpipÁõ∏ÂÜ≤Á™Å„ÄÇ $ brew install python # Python 2.x $ brew install python3 ÂÆâË£ÖÂêé‰ºöÂú®/usr/local/bin‰∏≠ÂÆâË£ÖpythonÊàñpython3Ôºå‰∏éÁ≥ªÁªüÁöÑ/usr/bin/pythonÁéØÂ¢ÉÁã¨Á´ã„ÄÇ _&#x2F;usr&#x2F;local&#x2F;bin&#x2F;_‰∏≠‰πü‰ºöÊúâÂØπÂ∫îÁöÑpipÁâàÊú¨ÂÆâË£ÖÔºàpip2Âíåpip3ÔºâÔºå‰ΩøÁî®ÂØπÂ∫îÁöÑpipÂç≥ÂèØ„ÄÇ Â¶ÇÊûúÊòØÁî®brew install pythonÂÆâË£Ö‰∫ÜPython 2.xÔºåÈÇ£‰πàwhich -a python‰ºöÂá∫Áé∞‰∏§‰∏™pythonË∑ØÂæÑ„ÄÇ $ which -a python &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python &#x2F;usr&#x2F;bin&#x2F;python ËøôÈáåÊàë‰∏çÊé®ËçêÁî®ÊõøÊç¢„ÄÅÈìæÊé•Á≠âÊñπÂºèÊù•ÊåáÂÆöÈªòËÆ§ÁöÑpythonÁâàÊú¨ÔºåÂõ†‰∏∫ÊâÄÊúâÁöÑPythonÈ°πÁõÆÈÉΩÊòØÂú®virtualenvÂÜÖÈÉ®‰∏≠ÊûÑÂª∫ÔºåÂ§ñÈÉ®ÁâàÊú¨Ê≥®ÊÑèÂå∫ÂàÜÂç≥ÂèØ„ÄÇ ‰ΩøÁî®virtualenvwrapperÈöîÁ¶ªÈ°πÁõÆÁéØÂ¢ÉÊØè‰∏™È°πÁõÆÂ∫îÂΩì‰ΩøÁî®Ëá™Ë∫´ÁöÑÂåÖ‰æùËµñÁéØÂ¢ÉÔºåÂ¶ÇÊûúÂ§ö‰∏™È°πÁõÆÂÖ±Áî®‰∏Ä‰∏™pip‰∏ãÁöÑÂåÖÁéØÂ¢É‰ºöÈÄ†ÊàêÂæàÂ§öÊ∑∑‰π±ÔºåÂêåÊ†∑ÁªôÈÉ®ÁΩ≤Â∏¶Êù•Âõ∞Èöæ„ÄÇ Âõ†Ê≠§ËøôÈáåÂ∞±Ë¶ÅÁî®Âà∞virtualenvÊù•ÂàõÂª∫ËôöÊãüÁöÑpythonÁéØÂ¢ÉÔºåÂÆÉÁöÑ‰∏Ä‰∏™Êõ¥Â•ΩÂ∞ÅË£ÖÊòØvirtualenvwrapper„ÄÇ ÂÆâË£Övirtualenvwrapper $ pip3 install virtualenvwrapper ËÆæÁΩÆvirtualenvwrapperÁéØÂ¢ÉÂèòÈáèÔºåÊ∑ªÂä†‰∏ãÈù¢ÂÜÖÂÆπÂà∞~&#x2F;.bash_profile 12345678910111213# set where virutal environments will liveexport WORKON_HOME=$HOME/.virtualenvs# ensure all new environments are isolated from the site-packages directoryexport VIRTUALENVWRAPPER_VIRTUALENV_ARGS=&#x27;--no-site-packages&#x27;# use the same directory for virtualenvs as virtualenvwrapperexport PIP_VIRTUALENV_BASE=$WORKON_HOME# makes pip detect an active virtualenv and install to itexport PIP_RESPECT_VIRTUALENV=trueif [[ -r /usr/local/bin/virtualenvwrapper.sh ]]; thensource /usr/local/bin/virtualenvwrapper.shelseecho &quot;WARNING: Can&#x27;t find virtualenvwrapper.sh&quot;fi ÈáçÊñ∞ÊâìÂºÄshellÁ™óÂè£ÔºåÊàñËÄÖsource ~/.bash_profileÔºåËæìÂÖ•mkvirtualenv ‚ÄîhelpÊ≤°ÊúâÊä•Èîô‰ª£Ë°®ÂÆâË£ÖÊàêÂäü Âà©Áî®mkvirtualenvÂàõÂª∫ËôöÊãüÁöÑPythonÁéØÂ¢É $ mkvirtualenv test_env ÈªòËÆ§ÈááÁî®$(which python)ÁöÑÁâàÊú¨ÂàõÂª∫ÔºåÈÄöÂ∏∏ÊòØPython 2.x, ÊàñËÄÖÁî®-pÂèÇÊï∞ÊåáÂÆöÂü∫‰∫éÊüê‰∏™ÁâàÊú¨pythonÊù•ÂàõÂª∫ÂØπÂ∫îÁâàÊú¨ÁöÑËôöÊãüÁéØÂ¢ÉÔºåÈùûÂ∏∏ÁÅµÊ¥ª $ mkvirtualenv -p &#x2F;usr&#x2F;local&#x2F;bin&#x2F;python3 py3_env ËøõÂÖ•ËôöÊãüÁéØÂ¢ÉÂπ∂ÂÆâË£ÖÈ°πÁõÆ‰æùËµñÂ∫ì $ workon py3_env (py3_env) $ python ‚Äìversion Python 3.5.1 (py3_env) $ pip ‚Äìversion pip 8.0.3 from &#x2F;Users&#x2F;Bing&#x2F;.virtualenvs&#x2F;dataflow_env&#x2F;lib&#x2F;python3.5&#x2F;site-packages (python 3.5) (py3_env) $ pip install -r requirements.txt ÈÄÄÂá∫ËôöÊãüÁéØÂ¢É (py3_env) $ deactivate $","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Mac","slug":"Mac","permalink":"https://unpluggedcoder.me/tags/Mac/"},{"name":"pip","slug":"pip","permalink":"https://unpluggedcoder.me/tags/pip/"}]},{"title":"For Â∏ïÂ∞îÂìàÊèê","slug":"For Â∏ïÂ∞îÂìàÊèê","date":"2016-01-13T13:13:51.000Z","updated":"2022-09-20T15:52:15.854Z","comments":true,"path":"2016/01/13/For Â∏ïÂ∞îÂìàÊèê/","link":"","permalink":"https://unpluggedcoder.me/2016/01/13/For%20%E5%B8%95%E5%B0%94%E5%93%88%E6%8F%90/","excerpt":"My early years sketch.","text":"My early years sketch.","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]},{"title":"[ËØë] WPF MVVM Âæ™Â∫èÊ∏êËøõ(‰ªéÂü∫Á°ÄÂà∞È´òÁ∫ß)","slug":"[ËØë] WPF MVVM Âæ™Â∫èÊ∏êËøõ(‰ªéÂü∫Á°ÄÂà∞È´òÁ∫ß)","date":"2015-11-27T03:03:30.000Z","updated":"2022-09-15T15:51:05.350Z","comments":true,"path":"2015/11/27/[ËØë] WPF MVVM Âæ™Â∫èÊ∏êËøõ(‰ªéÂü∫Á°ÄÂà∞È´òÁ∫ß)/","link":"","permalink":"https://unpluggedcoder.me/2015/11/27/[%E8%AF%91]%20WPF%20MVVM%20%E5%BE%AA%E5%BA%8F%E6%B8%90%E8%BF%9B(%E4%BB%8E%E5%9F%BA%E7%A1%80%E5%88%B0%E9%AB%98%E7%BA%A7)/","excerpt":"","text":"ËøôÊòØ‰∏ÄÂπ¥Â§öÂâçÂèëË°®Âú®CodeProject‰∏äÁöÑ‰∏ÄÁØáÊñáÁ´†, ËÆ≤ÁöÑÊòØWPFÁöÑMVVMÊ°ÜÊû∂, Áé∞Âú®Êù•ÁúãWindowsËá™ÂÆ∂ÁöÑÊ°åÈù¢ÊäÄÊúØÂ∑≤ÁªèÊ≤°ÊúâÂΩìÂàùÁöÑÂÖâÁéØ‰∫Ü, Êàë‰πüÊòØÂõ†‰∏∫ÊúÄËøëÂ∑•‰ΩúÈúÄË¶Å, Â≠¶‰π†ÁøªÈòÖ‰∫ÜÂæàÂ§öËøôÊñπÈù¢ËµÑÊñô. ËßâÂæóMVVMÊ°ÜÊû∂ÁöÑÁ°ÆÂú®‰∏ÄÂÆöÁ®ãÂ∫¶‰∏äÁÆÄÂåñ‰∫ÜUIÁöÑÂºÄÂèë, ÂØπË±°,Ê®°ÂûãÂêÑÂè∏ÂÖ∂ËÅå. ËÄåËøôÁØáÊñáÁ´†ÁÆóÊòØÊàëÁúãÂà∞ÁöÑÊØîËæÉÂÖ®Èù¢ÁöÑMVVMÂÖ•Èó®ÊïôÁ®ã, ÂÖ≥‰∫é‰∏∫‰ªÄ‰πà, ÊÄé‰πàÊ†∑, Â¶Ç‰ΩïÂÅöÁöÑÈóÆÈ¢òÈÉΩËØ¥ÂæóÂæàËØ¶ÁªÜ. ÂΩìÁÑ∂ËøôÂè™ÊòØMVVM‰ªéÂÖ•Èó®Âà∞È´òÁ∫ßÁöÑÊñáÁ´†, ÂÖ≥‰∫éÊõ¥Â§öÁöÑMVVMÈ´òÁ∫ßÁöÑÊäÄÂ∑ßÂú®ÊñáÁ´†ÊúÄÂêéÊúâÂá†‰∏™Âª∂‰º∏ÈòÖËØª, ÊúâËøôÊñπÈù¢ÈúÄÊ±ÇÁöÑÂêåÂ≠¶ÂèØÁúãÁúã. Êú¨ÊñáÁøªËØëËá™Shivprasad koiralaÂú®CodeProject‰∏äÁöÑÊñáÁ´†:WPF MVVM step by step (Basics to Advance Level) [TOC] ÁÆÄ‰ªã‰ªéÊàë‰ª¨ËøòÊòØÂÑøÁ´•Âà∞Â≠¶‰π†ÊàêÈïø‰∏∫ÊàêÂπ¥‰∫∫Ôºå ÁîüÂëΩ‰∏ÄÁõ¥ÈÉΩÂú®ÊºîÂèò„ÄÇ ÂØπ‰∫éËΩØ‰ª∂Êû∂ÊûÑÔºå ÂêåÊ†∑ÈÄÇÁî®Ëøô‰∏™ÈÅìÁêÜÔºå ‰ªé‰∏Ä‰∏™Âü∫Á°ÄÁöÑÊû∂ÊûÑÂºÄÂßãÔºå ÈöèÁùÄÊØè‰∏™ÈúÄÊ±ÇÂíåÊÉÖÂ¢ÉÂú®‰∏çÊñ≠ÊºîÂåñ„ÄÇ Â¶ÇÊûú‰Ω†ÈóÆ‰ªª‰Ωï‰∏Ä‰∏™.NETÂºÄÂèëËÄÖÔºå ‰ªÄ‰πàÊòØÊúÄÂ∞èÁöÑÂü∫Á°ÄÊû∂ÊûÑÔºå È¶ñÂÖàÊµÆÁé∞ÁöÑÂ∞±ÊòØ‚Äù‰∏âÂ±ÇÊû∂ÊûÑ‚Äù„ÄÇ Âú®Ëøô‰∏™Ê°ÜÊû∂‰∏≠Ôºå Êàë‰ª¨ÊääÈ°πÁõÆÂàÜ‰∏∫‰∏â‰∏™ÈÄªËæëÂ±ÇÊ¨°: UIÂ±ÇÔºå ‰∏öÂä°ÈÄªËæëÂ±ÇÂíåÊï∞ÊçÆËÆøÈóÆÂ±ÇÔºå ÊØè‰∏ÄÂ±ÇÈÉΩË¥üË¥£ÂêÑËá™ÂØπÂ∫îÁöÑÂäüËÉΩ„ÄÇ UIË¥üË¥£ÊòæÁ§∫ÂäüËÉΩÔºå ‰∏öÂä°ÈÄªËæëÂ±ÇË¥üË¥£Ê†°È™åÔºå Êï∞ÊçÆËÆøÈóÆÂ±ÇË¥üË¥£SQLËØ≠Âè•„ÄÇ 3Â±ÇÊû∂ÊûÑÊúâÂ¶Ç‰∏ãÁöÑÂ•ΩÂ§Ñ: ÂåÖÂÆπÂèòÂåñ: ÊØè‰∏ÄÂ±ÇÁöÑÂèòÂåñ‰∏ç‰ºöÈáçÂ§çË∑®Ë∂äÂà∞ÂÖ∂ÂÆÉÂ±ÇÊ¨°„ÄÇ ÈáçÁî®ÊÄß: Â¢ûÂº∫ÂèØÈáçÁî®ÊÄßÔºå Âõ†‰∏∫ÊØè‰∏ÄÂ±ÇÈÉΩÊòØÂàÜÁ¶ªÔºå Ëá™ÂåÖÂÆπÁöÑÁã¨Á´ãÂÆû‰ΩìMVVMÊòØ‰∏âÂ±ÇÊû∂ÊûÑÁöÑ‰∏Ä‰∏™ÊºîÂåñ„ÄÇ ÊàëÁü•ÈÅìÊàëÊ≤°Êúâ‰∏Ä‰∏™ÂéÜÂè≤ÂéªËØÅÊòéËøôÁÇπÔºå ‰ΩÜÊòØÊàë‰∏™‰∫∫ÂØπMVVMËøõË°å‰∫ÜÊºîÂåñÂíåËßÇÂØü„ÄÇ ÈÇ£Êàë‰ª¨ÂÖà‰ªé‰∏âÂ±ÇÂü∫Á°ÄÊû∂ÊûÑÂºÄÂßãÔºå ÂéªÁêÜËß£‰∏âÂ±ÇÊû∂ÊûÑÂ≠òÂú®ÁöÑÈóÆÈ¢òÔºå ÁúãMVVMÊû∂ÊûÑÊòØÂ¶Ç‰ΩïËß£ÂÜ≥Ëøô‰∫õÈóÆÈ¢òÔºå ÁÑ∂ÂêéÂçáÁ∫ßÂà∞ÂéªÂàõÂª∫‰∏Ä‰∏™Ëá™ÂÆö‰πâÁöÑMVVMÊ°ÜÊû∂‰ª£Á†Å„ÄÇ ‰∏ãÈù¢ÊòØÊú¨ÊñáÊé•‰∏ãÊù•ÁöÑË∑ØÁ∫øÂõæ„ÄÇ ÁÆÄÂçïÁöÑ‰∏âÂ±ÇÊû∂ÊûÑÁ§∫‰æãÂíåGLUE(ËÉ∂Ê∞¥)‰ª£Á†ÅÈóÆÈ¢òÈ¶ñÂÖàÔºå ËÆ©Êàë‰ª¨Êù•ÁêÜËß£‰∏âÂ±ÇÊû∂ÊûÑ‰ª•ÂèäÂÆÉÂ≠òÂú®ÁöÑÈóÆÈ¢òÔºå ÁÑ∂ÂêéÁúãMVVMÂ¶Ç‰ΩïËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò„ÄÇ Áõ¥ËßâÂíåÁé∞ÂÆûÊòØ‰∏§Áßç‰∏çÂêåÁöÑ‰∫ãÁâ©„ÄÇ ÂΩì‰Ω†ÁúãÂà∞‰∏âÂ±ÇÊû∂ÊûÑÁöÑÂõæÔºå ‰Ω†È¶ñÂÖàÁöÑÁõ¥ËßâÊòØÊØè‰∏™ÂäüËÉΩÂèØËÉΩÈÉΩÂàÜÂ∏ÉÂú®ÂêÑËá™Â±ÇÊ¨°„ÄÇ ‰ΩÜÊòØÂΩì‰Ω†ÂÆûÈôÖÁºñÂÜô‰ª£Á†ÅÊó∂Ôºå Êúâ‰∫õÂ±ÇÊ¨°Ë¢´Âº∫Ëø´ÂéªÂÅö‰∏Ä‰∫õÂÆÉ‰ª¨‰∏çÂ∫îËØ•ÂÅöÁöÑÈ¢ùÂ§ñÁöÑÂ∑•‰Ωú(Á†¥Âùè‰∫ÜSOLIDÂéüÂàô)„ÄÇ Â¶ÇÊûú‰Ω†ÂØπSOLIDÂéüÂàôËøò‰∏çÁÜüÊÇâÂèØ‰ª•ÂèÇËÄÉËøô‰∏™ËßÜÈ¢ë: SOLID principle video(ËØëËÄÖÊ≥®: SOLIDÊåáSingle responsibilityÔºå Open-closedÔºå Liskov substitutionÔºå Interface segregation and Dependency inversionÔºå Âç≥Âçï‰∏ÄÂäüËÉΩ„ÄÅÂºÄÈó≠ÂéüÂàô„ÄÅÈáåÊ∞èÊõøÊç¢„ÄÅÊé•Âè£ÈöîÁ¶ª‰ª•Âèä‰æùËµñÂèçËΩ¨)„ÄÇ ËøôÈÉ®ÂàÜÈ¢ùÂ§ñÂ∑•‰ΩúÂ∞±Âú®UI‰∏éModel‰πãÈó¥Ôºå ‰ª•ÂèäModel‰∏éData access‰πãÈó¥„ÄÇ Êàë‰ª¨ÊääËøôÁ±ª‰ª£Á†ÅÁß∞‰∏∫‚ÄùGLUE‚Äù(ËÉ∂Ê∞¥Ôºå ËØëËÄÖÊ≥®:Áî±‰∫é‰ΩúËÄÖÂÖ®Áî®Â§ßÂÜôÂ≠óÊØçË°®Á§∫Ôºå Âõ†Ê≠§ÂêéÁª≠Âª∂Áî®GLUE)‰ª£Á†Å„ÄÇ ‚ÄúGLUE‚Äù‰ª£Á†Å‰∏ªË¶ÅÊúâ‰∏§ÁßçÈÄªËæëÁ±ªÂûã:ÈÑô‰∫∫ÊµÖËßÅËñÑËØÜÔºå Â¶ÇÊûú‰Ω†ÊúâÊõ¥Â§öÁöÑ‚ÄùGLUE‚ÄùÁ±ªÂûãÂÆû‰æãÔºå ËØ∑Âú®ÁïôË®Ä‰∏≠ÊåáÂá∫„ÄÇ Êò†Â∞ÑÈÄªËæë(ÁªëÂÆöÈÄªËæë): ÊØè‰∏ÄÂ±ÇÈÄöËøáÂ±ûÊÄß„ÄÅÊñπÊ≥ïÂíåÈõÜÂêàÂíåÂÖ∂ÂÆÉÂ±ÇÈìæÊé•„ÄÇ‰æãÂ¶ÇÔºå ‰∏Ä‰∏™Âú®UIÂ±Ç‰∏≠Âêç‰∏∫‚ÄútxtCustomerName‚ÄùÁöÑTextboxÊéß‰ª∂ÔºåÂ∞ÜÂÖ∂Êò†Â∞ÑÂà∞customerÁ±ªÁöÑ‚ÄùCustomerName‚ÄùÂ±ûÊÄß„ÄÇ 1txtCustomerName.text = custobj.CustomerName; // Êò†Â∞Ñ‰ª£Á†Å Áé∞Âú®Ë∞ÅÂ∫îËØ•Êã•Êúâ‰∏äËø∞ÁªëÂÆöÈÄªËæë‰ª£Á†ÅÔºåUIËøòÊòØModelÔºüÂºÄÂèëËÄÖÂæÄÂæÄÊääËøô‰∏™‰ª£Á†ÅÊé®Âà∞UIÂ±ÇÊ¨°‰∏≠„ÄÇ ËΩ¨Êç¢ÈÄªËæëÔºöÊØè‰∏™Â±ÇÊ¨°‰ΩøÁî®ÁöÑÊï∞ÊçÆÊ†ºÂºèÈÉΩÊòØ‰∏çÂêåÁöÑ„ÄÇÊØîÂ¶Ç‰∏Ä‰∏™ModelÁ±ª‚ÄùPerson‚ÄùÊúâ‰∏Ä‰∏™ÊÄßÂà´Â±ûÊÄßÔºåÂèØÂèñÂÄºÂàÜÂà´‰∏∫‚ÄùF‚Äù(Female)Âíå‚ÄùM‚Äù(Male)ÂàÜÂà´‰ª£Ë°®Â•≥ÊÄßÂíåÁî∑ÊÄß„ÄÇ‰ΩÜÊòØÂú®UIÂ±Ç‰∏≠ÔºåÂ∏åÊúõÂ∞ÜËøô‰∏™ÂÄºÂèØËßÜÂåñ‰∏∫‰∏Ä‰∏™Â§çÈÄâÊ°ÜÊéß‰ª∂ÔºåÂãæÈÄâÂàô‰ª£Ë°®Áî∑ÊÄßÔºå‰∏çÂãæÈÄâÂàô‰ª£Ë°®Â•≥ÊÄß„ÄÇ‰∏ãÈù¢ÊòØ‰∏Ä‰∏™ËΩ¨Êç¢‰ª£Á†ÅÁ§∫‰æã„ÄÇ 12345678if (obj.Gender == ‚ÄúM‚Äù) // ËΩ¨Êç¢‰ª£Á†Å&#123; chkMale.IsChecked = true;&#125;else&#123; chkMale.IsChecked = false;&#125; Â§ßÂ§öÊï∞ÂºÄÂèëËÄÖÊúÄÁªà‰ºöÂ∞Ü‚ÄùGLUE‚Äù‰ª£Á†ÅÂÜôÂà∞UIÂ±Ç‰∏≠„ÄÇÈÄöÂ∏∏ÂèØ‰ª•Âú®ÂêéÂè∞‰ª£Á†Å‰∏≠ÂÆö‰ΩçÂà∞ËøôÁ±ª‰ª£Á†ÅÔºå‰æãÂ¶Ç.csÊñá‰ª∂„ÄÇÂ¶ÇÊûúUIÊòØXAMLÔºåÂàôÂØπÂ∫îÁöÑXAML.csÂåÖÂê´GLUE‰ª£Á†ÅÔºõÂ¶ÇÊûúUIÊòØASPXÔºåÂàôÂØπÂ∫îÁöÑASPX.csÂåÖÂê´GLUE‰ª£Á†ÅÔºå‰ª•Ê≠§Á±ªÊé®„ÄÇ ÈÇ£‰πàÈóÆÈ¢òÊù•‰∫ÜÔºöÊòØUIË¥üË¥£ËøôÁ±ªGLUE‰ª£Á†ÅÂêóÔºüËÆ©Êàë‰ª¨Áúã‰∏ãWPFÂ∫îÁî®‰∏≠ÁöÑ‰∏Ä‰∏™ÁÆÄÂçïÁöÑ‰∏âÂ±ÇÁªìÊûÑ‰æãÂ≠êÔºå‰ª•ÂèäÊõ¥ËØ¶ÁªÜÁöÑGLUE‰ª£Á†ÅÁªÜËäÇ„ÄÇ ‰∏ãÈù¢ÊòØ‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊ®°ÂûãÁ±ª‚ÄùCustomer‚ÄùÔºåÂÆÉÊúâ‰∏â‰∏™Â±ûÊÄß‚ÄúCustomerName‚Äù, ‚ÄúAmount‚Äù Âíå‚ÄúMarried‚Äù „ÄÇ ‰ΩÜÊòØÔºåÂΩìËøô‰∏™Ê®°ÂûãÊòæÁ§∫Âà∞UI‰∏äÊó∂ÂÆÉÂèàË°®Áé∞Â¶Ç‰∏ã„ÄÇÊâÄ‰ª•Ôºå‰Ω†ÂèØ‰ª•ÁúãÂá∫Êù•ÂÆÉÂåÖÂê´‰∫ÜËØ•Ê®°ÂûãÁöÑÊâÄÊúâÂ±ûÊÄßÔºå‰ª•Âèä‰∏Ä‰∫õÈ¢ùÂ§ñÁöÑÂÖÉÁ¥†ÔºöÈ¢úËâ≤Ê†áÁ≠æÂíåMarriedÂ§çÈÄâÊ°ÜÊéß‰ª∂„ÄÇ ‰∏ãÈù¢Êúâ‰∏ÄÂº†ÁÆÄÂçïÁöÑË°®ÔºåÂ∑¶ËæπÊòØModelÔºåÂè≥ËæπÊòØUIÔºå‰∏≠Èó¥ÊòØË∞àËøáÁöÑÊò†Â∞ÑÂíåËΩ¨Êç¢ÈÄªËæë„ÄÇ ‰Ω†ÂèØ‰ª•ÁúãÂà∞Ââç‰∏§Ë°åÊ≤°ÊúâËΩ¨Êç¢ÈÄªËæëÔºåÂè™ÊúâÊò†Â∞ÑÈÄªËæëÔºåÂè¶Â§ñ‰∏§Ë°åÂàôÂêåÊó∂ÂåÖÂê´ËΩ¨Êç¢ÈÄªËæëÂíåÊò†Â∞ÑÈÄªËæë„ÄÇ Model GLUE CODE UI Customer Name No conversion needed only Mapping Customer Name Amount No conversion needed only Mapping Amount Amount Mapping + Conversion logic. &gt; 1500 &#x3D; BLUE, &lt; 1500 &#x3D; RED Married Mapping + Conversion logic. True ‚Äì Married, False - UnMarried Ëøô‰∫õËΩ¨Êç¢ÂíåÊò†Â∞ÑÈÄªËæë‰ª£Á†ÅÈÄöÂ∏∏‰ºöÂú®‚Äúxaml.cs‚ÄùÊñá‰ª∂‰∏≠„ÄÇ‰∏ãÈù¢ÊòØ‰∏äÂõæÂØπÂ∫îÁöÑÂêéÂè∞‰ª£Á†ÅÔºå‰Ω†ÂèØ‰ª•ÁúãÂà∞Êò†Â∞Ñ‰ª£Á†ÅÂíåÈ¢úËâ≤Âà§ÂÆö„ÄÅÊÄßÂà´Ê†ºÂºèËΩ¨Êç¢‰ª£Á†Å„ÄÇÊàëÂú®‰ª£Á†Å‰∏≠Áî®Ê≥®ÈáäÊ†áÊ≥®Âá∫Êù•ÔºåËøôÊ†∑‰Ω†ÂèØ‰ª•ÁúãÂà∞Âì™‰∫õÊòØÊò†Â∞Ñ‰ª£Á†ÅÔºåÂì™‰∫õÊòØËΩ¨Êç¢‰ª£Á†Å„ÄÇ 123456789101112131415161718lblName.Content = o.CustomerName; // Êò†Â∞Ñ‰ª£Á†ÅlblAmount.Content = o.Amount; // Êò†Â∞Ñ‰ª£Á†Åif (o.Amount &gt; 2000) // ËΩ¨Êç¢‰ª£Á†Å&#123; lblBuyingHabits.Background = new SolidColorBrush(Colors.Blue);&#125;else if (o.Amount &gt; 1500) // ËΩ¨Êç¢‰ª£Á†Å&#123; lblBuyingHabits.Background = new SolidColorBrush(Colors.Red);&#125;if (obj.Married == ‚ÄúMarried‚Äù) // ËΩ¨Êç¢‰ª£Á†Å&#123; chkMarried.IsChecked = true;&#125;else&#123; chkMarried.IsChecked = false;&#125; Áé∞Âú®Ëøô‰∫õGLUE‰ª£Á†ÅÂ≠òÂú®ÁöÑÈóÆÈ¢òÔºö Âçï‰∏ÄË¥£‰ªªÂéüÂàôË¢´Á†¥ÂùèÔºàSRPViolationÔºâÔºö ÊòØUIË¥üË¥£Ëøô‰∫õGLUE‰ª£Á†ÅÂêóÔºüËøôÁßçÊÉÖÂÜµ‰∏ãÊîπÂèò‰∫ÜAmountÊï∞ÈáèÔºåÂêåÊó∂‰πüÈúÄË¶Å‰øÆÊîπUI‰ª£Á†Å„ÄÇÁé∞Âú®ÔºåÊï∞ÊçÆÁöÑÊîπÂèò‰∏∫‰ªÄ‰πà‰ºöËÆ©ÊàëÂéª‰øÆÊîπUIÁöÑ‰ª£Á†ÅÔºüËøôÈáåÂèØ‰ª•ÈóªÂà∞Âùè‰ª£Á†ÅÁöÑÂë≥ÈÅì„ÄÇUIÂ∫îËØ•Âè™Âú®Êàë‰øÆÊîπÊ†∑ÂºèÔºåÈ¢úËâ≤ÂíåÂ∏ÉÂ±ÄÁöÑÊó∂ÂÄôÊâçÊîπÂèò„ÄÇ ÈáçÁî®ÊÄßÔºö Â¶ÇÊûúÊàëÊÉ≥ÊääÂêåÊ†∑ÁöÑÈ¢úËâ≤ÈÄªËæëÂíåÊÄßÂà´Ê†ºÂºèËΩ¨Êç¢Áî®Âà∞‰∏ãÈù¢ÁöÑÁºñËæëÁïåÈù¢ÔºåÊàëËØ•ÊÄé‰πàÂÅöÔºüÊã∑Ë¥ùÁ≤òÂ∏ñÈáçÂ§çÁöÑ‰ª£Á†ÅÔºü Â¶ÇÊûúÊàëÊÉ≥Ëµ∞ÂæóÊõ¥Ëøú‰∏ÄÁÇπÔºåÊääËøô‰∏™GLUE‰ª£Á†ÅÁî®Âú®‰∏çÂêåÁöÑUIÊäÄÊúØ‰ΩìÁ≥ª‰∏äÔºåÊØîÂ¶ÇMVC„ÄÅWindows FormÊàñËÄÖMobileÂ∫îÁî®‰∏ä„ÄÇ ![Reusability](https://www.codeproject.com/KB/WPF/819294/7.png) ‰ΩÜÊòØËøôÈáåË∑®UIÊäÄÊúØÂπ≥Âè∞ÁöÑÈáçÁî®ÂÆûÈôÖ‰∏äÊòØ‰∏çÂèØËÉΩÁöÑÔºåÂõ†‰∏∫ÊØè‰∏™Âπ≥Âè∞UIËÉåÂêéÈÉΩÂíåÂêÑËá™ÁöÑUIÊäÄÊúØ‰ΩìÁ≥ªËÄ¶ÂêàÂæóÂæàÁ¥ßÂØÜ„ÄÇ ÊØîÂ¶ÇÔºå‰∏ãÈù¢ÁöÑÂêéÂè∞‰ª£Á†ÅÊòØÁªßÊâøËá™‚ÄúWindows‚ÄùÁ±ªÔºåËÄå‚ÄúWindows‚ÄùÁ±ªÊòØÈõÜÊàêÂú®WPF UI‰ΩìÁ≥ª‰∏≠„ÄÇÂ¶ÇÊûúÊàë‰ª¨ÊÉ≥Âú®WebÂ∫îÁî®ÊàñËÄÖMVC‰∏≠Â∫îÁî®Ëøô‰∫õÈÄªËæëÔºåÂç¥ÂèàÊó†Ê≥ïÂéªÂàõÂª∫‰∏Ä‰∏™ËøôÊ†∑ÁöÑÁ±ªÂØπË±°Êù•‰ΩøÁî®„ÄÇ 12345MainWindow : Window&#123; // Behind code is here&#125; ÈÇ£‰πàÊàë‰ª¨Ë¶ÅÊÄé‰πàÈáçÁî®ÂêéÂè∞‰ª£Á†ÅÔºüÊÄé‰πàÈÅµÂæ™SRPÂéüÂàôÔºü Á¨¨‰∏ÄÊ≠•ÔºöÊúÄÁÆÄÂçïÁöÑMVVMÁ§∫‰æã - ÊääÂêéÂè∞‰ª£Á†ÅÁßªÂà∞Á±ª‰∏≠ÊàëÊÉ≥Â§ßÈÉ®ÂàÜÂºÄÂèëËÄÖÂ∑≤ÁªèÁü•ÈÅìÊÄé‰πàËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢ò„ÄÇÊØ´Êó†ÁñëÈóÆÂú∞ÊääÂêéÂè∞‰ª£Á†ÅÔºàGLUE‰ª£Á†ÅÔºâÁßªÂà∞‰∏Ä‰∏™Á±ªÂ∫ì‰∏≠„ÄÇËøô‰∏™Á±ªÂ∫ì‰ª£Ë°®‰∫ÜÊèèËø∞‰∫ÜUIÁöÑÂ±ûÊÄßÂíåË°å‰∏∫„ÄÇ‰ªª‰ΩïÁßªÂÖ•Âà∞Ëøô‰∏™Á±ªÂ∫ìÁöÑ‰ª£Á†ÅÈÉΩÂèØ‰ª•ÁºñËØëÊàêDLLÔºåÁÑ∂ÂêéË¢´ÊâÄÊúâ.NETÈ°πÁõÆÔºàWindows, WebÁ≠âÁ≠âÔºâÊâÄÂºïÁî®„ÄÇ Âõ†Ê≠§ÔºåÂú®Ëøô‰∏ÄËäÇÊàë‰ª¨Â∞ÜÂàõÂª∫‰∏Ä‰∏™ÊúÄÁÆÄÂçïÁöÑMVVMÁ§∫‰æãÔºåÁÑ∂ÂêéÂú®ÂêéÁª≠ÁöÑÁ´†ËäÇ‰∏≠Êàë‰ª¨Â∞ÜÂü∫‰∫éËøô‰∏™Á§∫‰æãÂàõÂª∫Êõ¥È´òÁ∫ßÁöÑMVVMÁ§∫‰æã„ÄÇ Êàë‰ª¨ÂàõÂª∫‰∏Ä‰∏™‚ÄúCustomerViewModel‚ÄùÁ±ªÊù•ÂåÖÂê´GLUE‰ª£Á†Å„ÄÇ‚ÄúCustomerViewModel‚ÄùÁ±ª‰ª£Ë°®‰∫Ü‰Ω†ÁöÑUIÔºåÊâÄ‰ª•Êàë‰ª¨ÊÉ≥‰øùÊåÅÂÆÉÁöÑÂ±ûÊÄßÂíåUIÂëΩÂêçÁ∫¶ÂÆö‰∏ÄËá¥„ÄÇ‰Ω†ÂèØ‰ª•‰ªé‰∏ãÂõæÁúãÂá∫Êù•‚ÄúCustomerViewModel‚ÄùÁ±ªÁöÑÂ±ûÊÄßÊòØÂ¶Ç‰Ωï‰ªé‰πãÂâçÁöÑCustomerModelÁ±ª‰∏≠Êò†Â∞ÑËøáÊù•: ‚ÄúTxtCustomerName‚ÄùÂØπÂ∫î‚ÄúCustomerName‚ÄùÔºå‚ÄúTxtAmount‚ÄùÂØπÂ∫î‚ÄúAmount‚ÄùÁ≠âÁ≠â„ÄÇ ‰∏ãÈù¢ÊòØÂÆûÈôÖ‰ª£Á†ÅÔºö 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849 public class CustomerViewModel&#123; private Customer obj = new Customer(); public string TxtCustomerName &#123; get &#123; return obj.CustomerName; &#125; set &#123; obj.CustomerName = value; &#125; &#125; public string TxtAmount &#123; get &#123; return Convert.ToString(obj.Amount) ; &#125; set &#123; obj.Amount = Convert.ToDouble(value); &#125; &#125; public string LblAmountColor &#123; get &#123; if (obj.Amount &gt; 2000) &#123; return &quot;Blue&quot;; &#125; else if (obj.Amount &gt; 1500) &#123; return &quot;Red&quot;; &#125; return &quot;Yellow&quot;; &#125; &#125; public bool IsMarried &#123; get &#123; if (obj.Married == &quot;Married&quot;) &#123; return true; &#125; else &#123; return false; &#125; &#125; &#125;&#125; ÂÖ≥‰∫é‚ÄúCustomerViewModel‚ÄùËøô‰∏™Á±ªÊúâ‰ª•‰∏ãÂá†ÁÇπÊ≥®ÊÑèÔºö Á±ªÂ±ûÊÄßÈÉΩ‰ª•UIÁöÑÂëΩÂêçÊñπÂºèÊù•Á∫¶ÂÆöÔºåËøôÊ†∑Áúã‰∏äÂéª‰ºöÊõ¥ÂΩ¢Ë±°‰∏Ä‰∫õÔºõ Ëøô‰∏™Á±ªË¥üË¥£‰∫ÜÁ±ªÂûãËΩ¨Êç¢ÁöÑ‰ª£Á†ÅÔºå‰ΩøÂæóUIÁúã‰∏äÂéªÊõ¥ËΩªÈáèÁ∫ß„ÄÇ‰æãÂ¶Ç‰ª£Á†Å‰∏≠ÁöÑ‚ÄúTxtAmount‚ÄùÂ±ûÊÄß„ÄÇÂú®ModelÁ±ª‰∏≠ÁöÑ‚ÄúAmount‚ÄùÂ±ûÊÄßÊòØÊï∞Â≠óÔºåËÄåËΩ¨Êç¢ÁöÑËøáÁ®ãÊòØÂú®ViewModelÁ±ª‰∏≠ÂÆåÊàê„ÄÇÊç¢Âè•ËØùËØ¥Ëøô‰∏™Á±ªË¥üË¥£‰∫ÜUIÊòæÁ§∫ÁöÑÊâÄÊúâËÅåË¥£ÔºàËØëËÄÖÊ≥®ÔºöÈÄªËæë‰∏äÁöÑ‰∏öÂä°ËÅåË¥£ÔºâËÆ©UIÂêéÂè∞‰ª£Á†ÅÁúã‰∏äÂéªÊõ¥ÁÆÄÊ¥ÅÔºõ ÊâÄÊúâËΩ¨Êç¢ÈÄªËæëÁöÑ‰ª£Á†ÅÈÉΩÂú®Ëøô‰∏™Á±ª‰∏≠Ôºå‰æãÂ¶Ç‚ÄúLblAmountColor‚ÄùÂ±ûÊÄßÂíå‚ÄúIsMarried‚ÄùÂ±ûÊÄßÔºõ ÊâÄÊúâÁöÑÂ±ûÊÄßÊï∞ÊçÆÈÉΩ‰øùÊåÅ‰∫ÜÁÆÄÂçïÁöÑÂ≠óÁ¨¶Á±ªÂûãÔºåËøôÊ†∑ÂèØ‰ª•Âú®Â§ßÂ§öUIÊäÄÊúØÂπ≥Âè∞‰∏äÈÄÇÁî®„ÄÇ‰æãÂ¶ÇÔºå‚ÄúLblAmountColor‚ÄùÂ±ûÊÄßÊääÈ¢úËâ≤ÂÄºÁî®Â≠óÁ¨¶‰∏≤Êù•‰º†ÈÄíÔºåËøôÊ†∑ÂèØ‰ª•Âú®‰ªª‰ΩïUIÁ±ªÂûã‰∏≠ÈáçÁî®ÔºåÂêåÊó∂Êàë‰ª¨‰πü‰øùÊåÅ‰∫ÜÊúÄÂ∞èÁöÑÊï∞ÊçÆÂÖ±ÊÄß„ÄÇ Áé∞Âú®‚ÄúCustomerViewModel‚ÄùÁ±ªÂåÖÂê´‰∫ÜÊâÄÊúâÁöÑÂêéÂè∞‰ª£Á†ÅÈÄªËæëÔºåÊàë‰ª¨ÂèØ‰ª•ÂàõÂª∫Ëøô‰∏™Á±ªÁöÑÂØπË±°Âπ∂ÁªëÂÆöÂà∞UIÂÖÉÁ¥†‰∏ä„ÄÇ‰Ω†ÂèØ‰ª•Âú®‰∏ãÈù¢‰ª£Á†ÅÁúãÂà∞Êàë‰ª¨Âè™Ââ©‰∏ã‰∫ÜÊò†Â∞ÑÈÄªËæëÁöÑ‰ª£Á†ÅÈÉ®ÂàÜÔºåËÄåËΩ¨Êç¢ÈÄªËæëÁöÑ‚ÄùGLUE‚Äù‰ª£Á†ÅÂ∑≤ÁªèÊ≤°Êúâ‰∫Ü„ÄÇ 12345678private void DisplayUi(CustomerViewModel o)&#123; lblName.Content = o.TxtCustomerName; lblAmount.Content = o.TxtAmount; BrushConverter brushconv = new BrushConverter(); lblBuyingHabits.Background = brushconv.ConvertFromString(o.LblAmountColor) as SolidColorBrush; chkMarried.IsChecked = o.IsMarried;&#125; Á¨¨‰∫åÊ≠•ÔºöÊ∑ªÂä†ÁªëÂÆö - Ê∂àÁÅ≠ÂêéÂè∞‰ª£Á†ÅÁ¨¨‰∏ÄÊ≠•ÁöÑÊñπÊ≥ïÂæàÂ•ΩÔºå‰ΩÜÊòØÊàë‰ª¨Áü•ÈÅìÂêéÂè∞‰ª£Á†Å‰ªçÁÑ∂ËøòÊúâÈóÆÈ¢òÔºåÂú®WPF‰∏≠Ê∂àÁÅ≠ÊâÄÊúâÂêéÂè∞‰ª£Á†ÅÊòØÂÆåÂÖ®ÂèØËÉΩÁöÑ„ÄÇÊé•‰∏ãÊù•WPFÁªëÂÆöÂíåÂëΩ‰ª§ÁôªÂú∫‰∫Ü„ÄÇ WPF‰ª•ÂÖ∂ÁªëÂÆöÔºàBindingÔºâ„ÄÅÂëΩ‰ª§ÔºàCommandsÔºâÂíåÂ£∞ÊòéÂºèÁºñÁ®ãÔºàDeclarative programmingÔºâËÄåËëóÁß∞„ÄÇÂ£∞ÊòéÂºèÁºñÁ®ãÊÑèÂë≥ÁùÄ‰Ω†ÂèØ‰ª•‰ΩøÁî®XMALÊù•Ë°®Ëææ‰Ω†ÁöÑC#‰ª£Á†ÅÔºåËÄå‰∏çÁî®ÁºñÂÜôÂÆåÊï¥ÁöÑC#‰ª£Á†Å„ÄÇÁªëÂÆöÂäüËÉΩÂ∏ÆÂä©‰∏Ä‰∏™WPFÂØπË±°ËøûÊé•Âà∞ÂÖ∂ÂÆÉÁöÑWPFÂØπË±°Ôºå‰ªéËÄå‰ªñ‰ª¨ÂèØ‰ª•ÂèëÈÄÅÂíåÊé•Êî∂Êï∞ÊçÆ„ÄÇ ÂΩìÂâçÁöÑÊò†Â∞ÑC#‰ª£Á†ÅÊúâ‰∏â‰∏™Ê≠•È™§Ôºö ÂØºÂÖ•Ôºö Êàë‰ª¨Ë¶ÅÂÅöÁöÑÁ¨¨‰∏Ä‰ª∂‰∫ãÊÉÖÊòØÂØºÂÖ•‚ÄúCustomerViewModel‚ÄùÂêçÁß∞Á©∫Èó¥„ÄÇ ÂàõÂª∫ÂØπË±°Ôºö ‰∏ã‰∏ÄÊ≠•Ë¶ÅÂàõÂª∫‚ÄúCustomerViewModel‚ÄùÁ±ªÁöÑÂØπË±°„ÄÇ ÁªëÂÆö‰ª£Á†ÅÔºö ÊúÄÂêéÂ∞ÜWPF UIÁªëÂÆöÂà∞Ëøô‰∏™ViewModelÂØπË±°„ÄÇ ‰∏ãÈù¢Ë°®Ê†ºÂ±ïÁ§∫‰∫ÜC#‰ª£Á†ÅÂíå‰∏éÂÖ∂ÂØπÂ∫îÁõ∏ÂêåÁöÑWPF XAML‰ª£Á†Å„ÄÇ Ê≠•È™§ C#‰ª£Á†Å XAML‰ª£Á†Å ÂØºÂÖ• using CustomerViewModel; xmlns:custns&#x3D;‚Äùclr-namespace:CustomerViewModel;assembly&#x3D;CustomerViewModel‚Äù ÂàõÂª∫ÂØπË±° CustomerViewModelobj &#x3D; new CustomerViewModel(); obj.CustomerName &#x3D; ‚ÄúShiv‚Äù; obj.Amount &#x3D; 2000; obj.Married &#x3D; ‚ÄúMarried‚Äù; &lt; Window.Resources&gt; &lt; custns: CustomerViewModel x:Key&#x3D;‚Äùcustviewobj‚Äù TxtCustomerName&#x3D;‚ÄùShiv‚Äù TxtAmount&#x3D;‚Äù1000‚Äù IsMarried&#x3D;‚Äùtrue‚Äù&#x2F;&gt; ÁªëÂÆöÂØπË±° lblName.Content &#x3D; o.CustomerName; &lt; Label x:Name&#x3D;‚ÄùlblName‚Äù Content&#x3D;‚Äù{Binding TxtCustomerName, Source&#x3D;{StaticResourcecustviewobj}}‚Äù&#x2F;&gt; ‰Ω†‰∏çÈúÄË¶ÅÂÜôÂêéÂè∞ÁöÑ‰ª£Á†ÅÔºåÊàë‰ª¨ÂèØ‰ª•ÈÄâ‰∏≠UIÂÖÉÁ¥†ÔºåÊåâF4ÔºåÂ¶Ç‰∏ãÂõæ‰∏≠ÈÄâÊã©ÊåáÂÆöÁªëÂÆö„ÄÇËøô‰∏™Ê≠•È™§‰ºöÊääÁªëÂÆö‰ª£Á†ÅÊèíÂÖ•Âà∞XAML‰∏≠„ÄÇ ÈÄâÊã©‚ÄúStaticResource‚ÄùÊù•ÊåáÂÆöÊò†Â∞ÑÔºåÁÑ∂ÂêéÂú®UIÂÖÉÁ¥†ÂíåViewModelÂØπË±°‰πãÈó¥ÊåáÂÆöÁªëÂÆöË∑ØÂæÑ„ÄÇ ËøôÊòØ‰Ω†Êü•ÁúãXAML.CSÊñá‰ª∂ÔºåÂÆÉÂ∑≤ÁªèÊ≤°Êúâ‰ªª‰ΩïGLUE‰ª£Á†ÅÔºåÂêåÊ†∑‰πüÊ≤°ÊúâËΩ¨Êç¢ÂíåÊò†Â∞Ñ‰ª£Á†Å„ÄÇÂîØ‰∏ÄÁöÑ‰ª£Á†ÅÂ∞±ÊòØÊ†áÂáÜÁöÑWPF UIÂàùÂßãÂåñ‰ª£Á†Å„ÄÇ 12345public partial class MVVMWithBindings : Window&#123; public MVVMWithBindings() &#123;InitializeComponent();&#125;&#125; Á¨¨‰∏âÊ≠•ÔºöÊ∑ªÂä†ÊâßË°åÂä®‰ΩúÂíå‚ÄúINotifyPropertyChanged‚ÄùÊé•Âè£Â∫îÁî®Á®ãÂ∫è‰∏ç‰ªÖ‰ªÖÂè™ÊòØÊúâtextboxs Âíå labelsÔºå ÂêåÊ†∑ËøòÈúÄË¶ÅÊâßË°åÂä®‰ΩúÔºåÊØîÂ¶ÇÊåâÈíÆÔºåÈº†Ê†á‰∫ã‰ª∂Á≠â„ÄÇ Âõ†Ê≠§ËÆ©Êàë‰ª¨Ê∑ªÂä†‰∏Ä‰∏™ÊåâÈíÆÊù•ÁúãÁúãÂ¶Ç‰ΩïÊääMVVMÁ±ªÂ∫îÁî®Ëµ∑Êù•„ÄÇ Êàë‰ª¨Âú®ÂêåÊ†∑ÁöÑUI‰∏äÊ∑ªÂä†‰∫Ü‰∏Ä‰∏™‚ÄòCalculate tax‚ÄôÊåâÈíÆÔºåÂΩìÁî®Êà∑Êåâ‰∏ãÊåâÈíÆÔºåÂÆÉÂ∞ÜÊ†πÊçÆ‚ÄúSales Amount‚ÄùÂÄºËÆ°ÁÆóÂá∫Á®éÂÄºÂπ∂ÊòæÁ§∫Âú®ÁïåÈù¢‰∏ä„ÄÇ Âõ†Ê≠§‰∏∫‰∫ÜÂú®ModelÁ±ªÂÆûÁé∞‰∏äÈù¢ÁöÑÂäüËÉΩÔºåÊàë‰ª¨Ê∑ªÂä†‰∏Ä‰∏™‚ÄúCalculateTax()‚ÄùÊñπÊ≥ï„ÄÇÂΩìËøô‰∏™ÊñπÊ≥ïË¢´ÊâßË°åÔºåÂÆÉÊ†πÊçÆËñ™Ê∞¥ËåÉÂõ¥ËÆ°ÁÆóÂá∫Á®éÂÄºÔºåÂπ∂Â∞ÜÂÄº‰øùÂ≠òÂú®‚ÄúTax‚ÄùÂ±ûÊÄßÂÄº‰∏≠„ÄÇ 123456789101112131415161718192021222324252627public class Customer&#123; .... .... .... .... private double _Tax; public double Tax &#123; get &#123; return _Tax; &#125; &#125; public void CalculateTax() &#123; if (_Amount &gt; 2000) &#123; _Tax = 20; &#125; else if (_Amount &gt; 1000) &#123; _Tax = 10; &#125; else &#123; _Tax = 5; &#125; &#125;&#125; Áî±‰∫éViewModelÁ±ªÊòØModelÁ±ªÁöÑ‰∏Ä‰∏™Â∞ÅË£ÖÔºåÂõ†Ê≠§Êàë‰ª¨ÈúÄË¶ÅÂú®ViewModelÁ±ª‰∏≠ÂàõÂª∫‰∏Ä‰∏™ÊñπÊ≥ïÊù•Ë∞ÉÁî®ModelÁöÑ‚ÄúCalculateTax‚ÄùÊñπÊ≥ï„ÄÇ 123456789101112public class CustomerViewModel&#123; private Customer obj = new Customer(); .... .... .... .... public void Calculate() &#123; obj.CalculateTax(); &#125;&#125; Áé∞Âú®ÔºåÊàë‰ª¨ÊÉ≥Ë¶ÅÂú®XAMLÁöÑËßÜÂõæ‰∏≠Ë∞ÉÁî®Ëøô‰∏™‚ÄúCalculate‚ÄùÊñπÊ≥ïÔºåËÄå‰∏çÊòØÂú®ÂêéÂè∞ÁºñÂÜô„ÄÇ‰∏çËøá‰Ω†‰∏çËÉΩÁõ¥Êé•ÈÄöËøáXAMLË∞ÉÁî®‚ÄúCalculate‚ÄùÊñπÊ≥ïÔºå‰Ω†ÈúÄË¶ÅÁî®WPFÁöÑcommandÁ±ª„ÄÇ Êàë‰ª¨ÈÄöËøá‰ΩøÁî®ÁªëÂÆöÂ±ûÊÄßÂ∞ÜÊï∞ÊçÆÂèëÈÄÅÁªôViewModelÁ±ªÔºåËÄåÂèëÈÄÅÊâßË°åÂä®‰ΩúÁªôViewModelÁ±ªÂàôÈúÄË¶Å‰ΩøÁî®ÂëΩ‰ª§„ÄÇ ÊâÄÊúâ‰ªéËßÜÂõæÂÖÉÁ¥†‰∫ßÁîüÁöÑÂä®‰ΩúÈÉΩÂèëÈÄÅÁªôcommandÁ±ªÔºåÊâÄ‰ª•Á¨¨‰∏ÄÊ≠•ÊòØÂàõÂª∫‰∏Ä‰∏™commandÁ±ª„ÄÇ‰∏∫‰∫ÜÂàõÂª∫Ëá™ÂÆö‰πâÁöÑcommandÁ±ªÔºåÊàë‰ª¨ÈúÄË¶ÅÂÆûÁé∞‚ÄùICommand‚ÄùÊé•Âè£ÔºàÂ¶Ç‰∏ãÂõæÔºâ„ÄÇ ‚ÄúICommand‚ÄùÊé•Âè£Êúâ‰∏§‰∏™ÂøÖÈ°ªË¶ÅÈáçËΩΩÁöÑÊñπÊ≥ïÔºö‚ÄúCanExecute‚Äù Âíå ‚ÄúExecute‚Äù„ÄÇÂú®‚ÄúExecute‚Äù‰∏≠Êàë‰ª¨ÊîæÁöÑÊòØÂ∏åÊúõÂä®‰ΩúÂèëÁîüÊó∂ÂÆûÈôÖÊâßË°åÁöÑÈÄªËæë‰ª£Á†ÅÔºàÊØîÂ¶ÇÊåâÈíÆÊåâ‰∏ãÔºåÂè≥ÈîÆÊåâ‰∏ãÁ≠âÔºâ„ÄÇÂú®‚ÄúCanExecute‚Äù‰∏≠Êàë‰ª¨ÊîæÁöÑÊòØÈ™åËØÅÈÄªËæëÊù•ÂÜ≥ÂÆö‚ÄúExecute‚Äù‰ª£Á†ÅÊòØÂê¶Â∫îËØ•ÊâßË°å„ÄÇ 12345678910111213141516public class ButtonCommand : ICommand&#123; public bool CanExecute(object parameter) &#123; // When to execute // Validation logic goes here &#125; public event EventHandler CanExecuteChanged; public void Execute(object parameter) &#123; // What to Execute // Execution logic goes here &#125;&#125; Áé∞Âú®ÊâÄÊúâÁöÑÂä®‰ΩúË∞ÉÁî®ÈÉΩÂèëÈÄÅÂà∞commandÁ±ªÔºåÁÑ∂ÂêéË¢´Ë∑ØÁî±Âà∞ViewModelÁ±ª„ÄÇÊç¢Âè•ËØùËØ¥ÔºåcommandÁ±ªÈúÄË¶ÅÁªÑÂêàViewModelÁ±ªÔºàËØëÊ≥®ÔºöcommandÁ±ªÈúÄË¶Å‰∏Ä‰∏™ViewModelÁ±ªÁöÑÂºïÁî®Ôºâ„ÄÇ ‰∏ãÈù¢ÊòØÁÆÄÁü≠ÁöÑ‰ª£Á†ÅÁâáÊÆµÔºåÊúâÂõõÁÇπÈúÄË¶ÅÊ≥®ÊÑèÔºö ViewModelÂØπË±°ÊòØ‰Ωú‰∏∫‰∏Ä‰∏™ÁßÅÊúâÁöÑÊàêÂëòÂØπË±°„ÄÇ ËØ•ViewModelÂØπË±°Â∞ÜÈÄöËøáÊûÑÈÄ†ÂáΩÊï∞ÂèÇÊï∞ÁöÑÊñπÂºè‰º†ÈÄíËøõÊù•„ÄÇ ÁõÆÂâç‰∏∫Ê≠¢ÔºåÊàë‰ª¨Ê≤°ÊúâÂú®‚ÄúCanExecute‚Äù‰∏≠Ê∑ªÂä†È™åËØÅÈÄªËæëÔºåÂÆÉÂßãÁªàËøîÂõûtrue„ÄÇ Âú®‚ÄúExecute‚ÄùÊñπÊ≥ï‰∏≠Êàë‰ª¨Ë∞ÉÁî®‰∫ÜViewModelÁ±ªÁöÑ‚ÄúCalculate‚ÄùÊñπÊ≥ï„ÄÇ 12345678910111213141516public class ButtonCommand : ICommand&#123; private CustomerViewModel obj; // Point 1 public ButtonCommand(CustomerViewModel _obj) // Point 2 &#123; obj = _obj; &#125; public bool CanExecute(object parameter) &#123; return true; // Point 3 &#125; public void Execute(object parameter) &#123; obj.Calculate(); // Point 4 &#125;&#125; ‰∏äÈù¢ÁöÑcommand‰ª£Á†Å‰∏≠ÔºåViewModelÂØπË±°ÊòØÈÄöËøáÊûÑÈÄ†ÂáΩÊï∞‰º†ÈÄíËøõÊù•„ÄÇÊâÄ‰ª•ViewModelÁ±ªÈúÄË¶ÅÂàõÂª∫‰∏Ä‰∏™commandÂØπË±°Êù•Êö¥Èú≤Ëøô‰∏™ÂØπË±°ÁöÑ‚ÄúICommand‚ÄùÊé•Âè£„ÄÇËøô‰∏™‚ÄúICommand‚ÄùÊé•Âè£Â∞ÜË¢´WPF XAML‰ΩøÁî®Âπ∂Ë∞ÉÁî®„ÄÇ‰∏ãÈù¢ÊòØ‰∏Ä‰∫õÂÖ≥‰∫é‚ÄúCustomerViewModel‚ÄùÁ±ª‰ΩøÁî®commandÁ±ªÁöÑË¶ÅÁÇπÔºö commandÁ±ªÊòØ‚ÄúCustomerViewModel‚ÄùÁ±ªÁöÑÁßÅÊúâÊàêÂëò„ÄÇ Âú®‚ÄúCustomerViewModel‚ÄùÁ±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞‰∏≠Â∞ÜÂΩìÂâçÂØπË±°ÁöÑÂÆû‰æã‰º†ÈÄíÁªôcommandÁ±ª„ÄÇÂú®‰πãÂâçËß£ÈáäcommandÁ±ªÁöÑ‰∏ÄËäÇ‰∏≠Êàë‰ª¨ËØ¥‰∫ÜcommandÁ±ªÊûÑÈÄ†ÂáΩÊï∞Ëé∑ÂèñViewModelÁ±ªÁöÑÂÆû‰æã„ÄÇÂõ†Ê≠§Âú®Ëøô‰∏ÄËäÇ‰∏≠Êàë‰ª¨Ê≠£ÊòØÂ∞ÜÂΩìÂâçÂÆû‰æã‰º†ÈÄíÁªôcommandÁ±ª„ÄÇ commandÂØπË±°ÊòØÈÄöËøá‰ª•‚ÄúICommand‚ÄùÊé•Âè£ÁöÑÂΩ¢ÂºèÊö¥Èú≤Âá∫Êù•ÔºåËøôÊ†∑ÊâçÂèØ‰ª•Ë¢´XAMLÊâÄ‰ΩøÁî®„ÄÇ 123456789101112131415161718192021using System.ComponentModel;public class CustomerViewModel&#123; ‚Ä¶ ‚Ä¶ private ButtonCommand objCommand; // Point 1 public CustomerViewModel() &#123; objCommand = new ButtonCommand(this); // Point 2 &#125; public ICommand btnClick // Point 3 &#123; get &#123; return objCommand; &#125; &#125; ‚Ä¶ ‚Ä¶&#125; Âú®‰Ω†ÁöÑUI‰∏≠Ê∑ªÂä†‰∏Ä‰∏™ÊåâÈíÆÔºåËøôÊ†∑Â∞±ÂèØ‰ª•ÊääÊåâÈíÆÁöÑÊâßË°åÂä®‰ΩúËøûÊé•Âà∞Êö¥Èú≤ÁöÑ‚ÄúICommand‚ÄùÊé•Âè£„ÄÇÁé∞Âú®ÊâìÂºÄbuttonÁöÑÂ±ûÊÄßÊ†èÔºåÈÄâÊã©commandÂ±ûÊÄßÔºåÂè≥ÂáªÂàõÂª∫‰∏Ä‰∏™Êï∞ÊçÆÁªëÂÆö„ÄÇ ÁÑ∂ÂêéÈÄâÊã©ÈùôÊÄÅËµÑÊ∫êÔºàStatic ResourceÔºâÔºåÂπ∂Â∞Ü‚ÄúButtonCommand‚ÄùÈôÑÂä†Âà∞button‰∏ä„ÄÇ ÂΩì‰Ω†ÁÇπÂáª‰∫ÜCalculate TaxÊåâÈíÆÔºåÂÆÉÂ∞±ÊâßË°å‰∫Ü‚ÄúCalculateTax‚ÄùÊñπÊ≥ï„ÄÇÂπ∂Â∞ÜÁ®éÂÄºÁªìÊûúÂ≠òÂú®‚Äú_tax‚ÄùÂèòÈáè‰∏≠„ÄÇÂÖ≥‰∫é‚ÄúCalculateTax‚ÄùÊñπÊ≥ï‰ª£Á†ÅÔºåÂèØ‰ª•ÈòÖËØªÂâçÈù¢ÁöÑÂ∞èËäÇ‚ÄúÁ¨¨‰∏âÊ≠•ÔºöÊ∑ªÂä†ÊâßË°åÂä®‰ΩúÂíå‚ÄúINotifyPropertyChanged‚ÄùÊé•Âè£‚Äù„ÄÇ Êç¢Âè•ËØùËØ¥ÔºåÁ®éÂÄºËÆ°ÁÆóËøáÁ®ãÂπ∂‰∏ç‰ºöËá™Âä®ÈÄöÁü•ÁªôUI„ÄÇÊâÄ‰ª•Êàë‰ª¨ÈúÄË¶Å‰ªéÂØπË±°ÂèëÈÄÅÊüêÁßçÈÄöÁü•ÁªôUIÔºåÂëäËØâÂÆÉÁ®éÂÄºÂ∑≤ÁªèÂèòÂåñ‰∫ÜÔºåUIÈúÄË¶ÅÈáçÊñ∞ËΩΩÂÖ•ÁªëÂÆöÂÄº„ÄÇ Âõ†Ê≠§ÔºåÂú®ViewModelÁ±ª‰∏≠Êàë‰ª¨ÈúÄË¶ÅÂèëÈÄÅINotify‰∫ã‰ª∂ÁªôËßÜÂõæ„ÄÇ ‰∏∫‰∫ÜËÆ©‰Ω†ÁöÑViewModelÁ±ªËÉΩÂ§üÂÆûÁé∞ÈÄöÁü•ÔºåÊàë‰ª¨ÂøÖÈ°ªÂÅö‰∏â‰ª∂‰∫ãÊÉÖ„ÄÇËøô‰∏â‰ª∂‰∫ãÊÉÖÈÉΩÂú®‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊ≥®Èáä‰∏≠ÊåáÂá∫Ôºå‰æãÂ¶ÇPoint1Ôºå Point2 Âíå Point3„ÄÇ Point1Ôºö Â¶Ç‰∏ãÈù¢‰ª£Á†ÅÈÇ£Ê†∑ÂÆûÁé∞‚ÄúINotifyPropertyChanged‚ÄùÊé•Âè£„ÄÇ‰∏ÄÊó¶‰Ω†ÂÆûÁé∞‰∫ÜËØ•Êé•Âè£ÔºåÂÆÉÂ∞±ÂàõÂª∫‰∫ÜÂØπË±°ÁöÑ‚ÄúPropertyChangedEventHandler‚Äù‰∫ã‰ª∂„ÄÇ Point2Âíå3Ôºö Âú®‚ÄúCalculate‚ÄùÊñπÊ≥ï‰∏≠Áî®‚ÄúPropertyChanged‚ÄùÂØπË±°ÂéªËß¶Âèë‰∫ã‰ª∂ÔºåÂπ∂Âú®ÂÖ∂‰∏≠ÊåáÂÆö‰∫ÜÊüê‰∏™Â±ûÊÄßÁöÑÈÄöÁü•„ÄÇÂú®ËøôÈáåÊòØ‚ÄúTax‚ÄùÂ±ûÊÄß„ÄÇÂÆâÂÖ®Ëµ∑ËßÅÔºåÊàë‰ª¨ÂêåÊ†∑‰πüË¶ÅÊ£ÄÊü•‚ÄúPropertyChanged‚ÄùÊòØÂê¶‰∏ç‰∏∫Á©∫„ÄÇ 12345678910111213141516public class CustomerViewModel : INotifyPropertyChanged // Point 1&#123; ‚Ä¶. ‚Ä¶. public void Calculate() &#123; obj.CalculateTax(); if (PropertyChanged != null) // Point 2 &#123; PropertyChanged(this,new PropertyChangedEventArgs(&quot;Tax&quot;)); // Point 3 &#125; &#125; public event PropertyChangedEventHandler PropertyChanged;&#125; Â¶ÇÊûú‰Ω†ËøêË°åÁ®ãÂ∫èÔºå‰Ω†Â∫îËØ•ÂèØ‰ª•ÁúãËßÅÂΩìÁÇπÂáªÊåâÈíÆÂêé‚ÄúTax‚ÄùÂÄºË¢´Êõ¥Êñ∞‰∫Ü„ÄÇ Á¨¨ÂõõÊ≠•ÔºöÂú®ViewModel‰∏≠Ëß£ËÄ¶ÊâßË°åÂä®‰ΩúÂà∞ÁõÆÂâç‰∏∫Ê≠¢ÔºåÊàë‰ª¨Áî®MVVMÊ°ÜÊû∂ÂàõÂª∫‰∫Ü‰∏Ä‰∏™ÁÆÄÂçïÁöÑÁïåÈù¢„ÄÇËøô‰∏™ÁïåÈù¢ÂêåÊó∂ÂåÖÂê´‰∫ÜÂ±ûÊÄßÂíåÂëΩ‰ª§ÂÆûÁé∞„ÄÇÊàë‰ª¨Êã•Êúâ‰∫Ü‰∏Ä‰∏™ËßÜÂõæÔºåÂÆÉÁöÑUIËæìÂÖ•ÂÖÉÁ¥†Ôºà‰æãÂ¶ÇtextboxÔºâÈÄöËøáÁªëÂÆöÂíåViewModelËøûÊé•Ëµ∑Êù•ÔºåÂÆÉÁöÑ‰ªª‰ΩïÊâßË°åÂä®‰ΩúÔºà‰æãÂ¶ÇÊåâÈíÆÁÇπÂáªÔºâÈÄöËøáÂëΩ‰ª§ÂíåViewModelËøûÊé•Ëµ∑Êù•„ÄÇViewModelÂíåÂÜÖÈÉ®ÁöÑModelÈÄöËÆØ„ÄÇ ‰ΩÜÊòØÂú®‰∏äÈù¢ÁöÑÁªìÊûÑ‰∏≠ËøòÊúâ‰∏Ä‰∏™ÈóÆÈ¢òÔºöcommandÁ±ªÂíåViewModelÁ±ªÂ≠òÂú®ÁùÄËøáÂ∫¶ËÄ¶ÂêàÁöÑÊÉÖÂÜµ„ÄÇÂ¶ÇÊûú‰Ω†ËøòËÆ∞ÂæócommandÁ±ª‰ª£Á†ÅÔºàÊàëÂú®‰∏ãÈù¢Ë¥¥Âá∫Êù•‰∫ÜÔºâ‰∏≠ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÊòØ‰º†ÈÄí‰∫ÜViewModelÂØπË±°ÔºåËøôÊÑèÂë≥ÁùÄËøô‰∏™commandÁ±ªÊó†Ê≥ïË¢´ÂÖ∂ÂÆÉÁöÑViewModelÁ±ªÊâÄÂ§çÁî®„ÄÇ 1234567891011public class ButtonCommand : ICommand&#123; private CustomerViewModel obj; // Point 1 public ButtonCommand(CustomerViewModel _obj) // Point 2 &#123; obj = _obj; &#125; ...... ...... ......&#125; ‰ΩÜÊòØÂú®ËÄÉËôë‰∫ÜÊâÄÊúâÊÉÖÂÜµ‰πãÂêéÔºåËÆ©Êàë‰ª¨ÈÄªËæëÂú∞ÊÄùËÄÉ‰∏ã‚Äú‰ªÄ‰πàÊòØ‰∏Ä‰∏™Âä®‰ΩúÔºü‚Äù„ÄÇÂÆÉÊòØ‰∏Ä‰∏™‰∫ã‰ª∂ÔºåÂèØ‰ª•Áî±Áî®Êà∑‰ªéÈº†Ê†áÁÇπÂáªÔºàÂ∑¶ÈîÆÊàñÂè≥ÈîÆÔºâÔºåÊåâÈíÆÁÇπÂáªÔºåËèúÂçïÁÇπÂáªÔºåÂäüËÉΩÈîÆÊåâ‰∏ãÁ≠â„ÄÇÊâÄ‰ª•Â∫îËØ•Êúâ‰∏ÄÁßçÊñπÂºèÈÄöÁî®ÂåñËøô‰∫õÂä®‰ΩúÔºåÂπ∂‰∏îËÆ©ÂêÑÁßçViewModelÊúâ‰∏ÄÁßçÊõ¥ÈÄöÁî®ÁöÑÊñπÊ≥ïÂéªÁªëÂÆöÂÆÉ„ÄÇ ÈÄªËæë‰∏äËÆ≤ÔºåÂ¶ÇÊûú‰Ω†ËÆ§‰∏∫‰ªªÂä°Âä®‰ΩúÊòØ‰∏Ä‰∫õÊñπÊ≥ïÂíåÂáΩÊï∞ÁöÑÂ∞ÅË£ÖÈÄªËæë„ÄÇÈÇ£Êúâ‰ªÄ‰πàÊòØ‚ÄúÊñπÊ≥ï‚ÄùÂíå‚ÄúÂáΩÊï∞‚ÄùÁöÑÈÄöÁî®Ë°®ËææÊñπÂºèÂë¢Ôºü‚Ä¶‚Ä¶Âä™ÂäõÊÉ≥ÊÉ≥‚Ä¶‚Ä¶.ÂÜçÊÉ≥ÊÉ≥‚Ä¶‚Ä¶.‚ÄúÂßîÊâò‚ÄùÔºå‚ÄúÂßîÊâò‚ÄùÔºåÊ≤°ÈîôÔºåËøòÊòØ‚ÄúÂßîÊâò‚Äù„ÄÇ Êàë‰ª¨ÈúÄË¶Å‰∏§‰∏™ÂßîÊâòÔºå‰∏Ä‰∏™Áªô‚ÄúCanExecute‚ÄùÔºåÂè¶‰∏Ä‰∏™Áªô‚ÄúExecute‚Äù„ÄÇ‚ÄúCanExecute‚ÄùËøîÂõû‰∏Ä‰∏™Â∏ÉÂ∞îÂÄºÁî®Êù•È™åËØÅ‰ª•ÂèäÊ†πÊçÆÈ™åËØÅÊù•‰ΩøËÉΩÔºàEnableÔºâÊàñËÄÖÁ¶ÅÁî®ÔºàDisableÔºâÁî®Êà∑ÁïåÈù¢„ÄÇ‚ÄúExecute‚ÄùÂßîÊâòÂàôÂ∞ÜÂú®‚ÄúCanExecute‚ÄùÂßîÊâòËøîÂõûtrueÊó∂ÊâßË°å„ÄÇ 123456789public class ButtonCommand : ICommand&#123; public bool CanExecute(object parameter) // Validations &#123; &#125; public void Execute(object parameter) // Executions &#123; &#125;&#125; Âõ†Ê≠§ÔºåÊç¢Âè•ËØùËØ¥ÔºåÊàë‰ª¨ÈúÄË¶Å‰∏§‰∏™ÂßîÊâòÔºå‰∏Ä‰∏™ËøîÂõûÂ∏ÉÂ∞îÂÄºÔºåÂè¶‰∏Ä‰∏™ÊâßË°åÂä®‰ΩúÂπ∂ËøîÂõûÁ©∫„ÄÇÊâÄ‰ª•ÔºåÂàõÂª∫‰∏Ä‰∏™‚ÄúFunc‚ÄùÂíå‰∏Ä‰∏™‚ÄúAction‚ÄùÂ¶Ç‰ΩïÔºü‚ÄúFunc‚ÄùÂíå‚ÄúAction‚ÄùÈÉΩÂèØ‰ª•Áî®Êù•ÂàõÂª∫ÂßîÊâò„ÄÇ Â¶ÇÊûú‰Ω†Ëøò‰∏çÁÜüÊÇâFuncÂíåActionÔºåÂèØ‰ª•Áúã‰∏ã‰∏ãÈù¢Ëøô‰∏™ËßÜÈ¢ë„ÄÇÔºàËØëÊ≥®Ôºö‰ΩúËÄÖÂú®ËøôÈáåÊèê‰æõ‰∫Ü‰∏Ä‰∏™YouTubeÁöÑËßÜÈ¢ëÈìæÊé•ÔºåÂ§ßÊ¶ÇËØ¥ÁöÑÂ∞±ÊòØC#‰∏≠Func&lt;&gt;ÂíåAction&lt;&gt;Ëøô‰∏§‰∏™ÂßîÊâòÁöÑÂå∫Âà´ÔºåÂâçËÄÖFunc&lt;&gt;Ê®°ÁâàÂèÇÊï∞ÂåÖÂê´ËøîÂõûÂÄºÁ±ªÂûãÔºåËÄåAction&lt;&gt;Ë°®Á§∫Êó†ËøîÂõûÂÄºÁöÑÊ≥õÂûãÂßîÊâòÔºåÂèÇËßÅËøôÈáåÔºâ ÈÄöËøá‰ΩøÁî®ÂßîÊâòÁöÑÊñπÊ≥ïÔºåÊàë‰ª¨ËØïÁùÄÂàõÂª∫‰∏Ä‰∏™ÈÄöÁî®ÁöÑcommandÁ±ª„ÄÇÊàë‰ª¨ÂØπcommandÁ±ªÂÅö‰∫Ü‰∏â‰∏™‰øÆÊîπÔºà‰ª£Á†ÅÂèÇËßÅ‰∏ãÈù¢ÔºâÔºåÂêåÊó∂Êàë‰πüÊ†áÊ≥®‰∫Ü‰∏âÁÇπPoint 1Ôºå2Âíå3„ÄÇ Point1Ôºö Êàë‰ª¨Âú®ÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÁßªÈô§‰∫ÜViewModelÂØπË±°ÔºåÊîπ‰∏∫Êé•Âèó‰∏§‰∏™ÂßîÊâòÔºå‰∏Ä‰∏™ÊòØ‚ÄúFunc‚ÄùÔºåÂè¶‰∏Ä‰∏™ÊòØ‚ÄúAction‚Äù„ÄÇ‚ÄúFunc‚ÄùÂßîÊâòÁî®‰ΩúÈ™åËØÅÔºà‰æãÂ¶ÇÈ™åËØÅ‰ΩïÊó∂Âä®‰ΩúÂ∞ÜË¢´ÊâßË°åÔºâÔºåËÄå‚ÄúAction‚ÄùÂßîÊâòÁî®Êù•ÊâßË°åÂä®‰Ωú„ÄÇ‰∏§‰∏™ÂßîÊâòÈÉΩÊòØÈÄöËøáÊûÑÈÄ†ÂáΩÊï∞ÂèÇÊï∞‰º†ÈÄíËøõÊù•ÔºåÂπ∂ËµãÂÄºÁªôÁ±ªÂÜÖÈÉ®ÁöÑÂØπÂ∫îÁßÅÊúâÊàêÂëòÂèòÈáè„ÄÇ Point2Âíå3Ôºö Func&lt;&gt;ÂßîÊâòÔºàWhentoExecuteÔºâË¢´‚ÄúCanExecute‚ÄùË∞ÉÁî®ÔºåÊâßË°åÂä®‰ΩúÁöÑÂßîÊâòWhattoexecuteÂàôÊòØÂú®‚ÄúExecute‚Äù‰∏≠Ë¢´Ë∞ÉÁî®„ÄÇ 123456789101112131415161718public class ButtonCommand : ICommand&#123; private Action WhattoExecute; private Func&lt;bool&gt; WhentoExecute; public ButtonCommand(Action What , Func&lt;bool&gt; When) // Point 1 &#123; WhattoExecute = What; WhentoExecute = When; &#125; public bool CanExecute(object parameter) &#123; return WhentoExecute(); // Point 2 &#125; public void Execute(object parameter) &#123; WhattoExecute(); // Point 3 &#125;&#125; Êàë‰ª¨Â∑≤ÁªèÁü•ÈÅìË¶ÅÊâßË°å‰ªÄ‰πà‰∫ÜÔºà‰æãÂ¶Ç‚ÄúCalculateTax‚ÄùÔºâÔºåÊàë‰ª¨‰πüÂàõÂª∫‰∏Ä‰∏™ÁÆÄÂçïÁöÑÂáΩÊï∞‚ÄúIsValid‚ÄùÊù•È™åËØÅ‚ÄúCustomer‚ÄùÁ±ªÊòØÂê¶ÊúâÊïà„ÄÇ 123456789101112131415161718192021222324252627282930public class Customer&#123; public void CalculateTax() &#123; if (_Amount &gt; 2000) &#123; _Tax = 20; &#125; else if (_Amount &gt; 1000) &#123; _Tax = 10; &#125; else &#123; _Tax = 5; &#125; &#125; public bool IsValid() &#123; if (_Amount == 0) &#123; return false; &#125; else &#123; return true; &#125; &#125;&#125; Âú®ViewModelÁ±ª‰∏≠Êàë‰ª¨ÂêåÊó∂‰º†ÈÄíÂáΩÊï∞ÂíåÊñπÊ≥ïÁªôcommandÁ±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºå‰∏Ä‰∏™Áªô‚ÄúFunc‚ÄùÔºå‰∏Ä‰∏™Áªô‚ÄúAction‚Äù„ÄÇ 12345678910public class CustomerViewModel : INotifyPropertyChanged&#123;private Customer obj = new Customer();privateButtonCommandobjCommand;publicCustomerViewModel() &#123;objCommand = new ButtonCommand(obj.CalculateTax,obj.IsValid); &#125;&#125; ËøôÊ†∑‰ΩøÂæóÊ°ÜÊû∂Êõ¥Â•ΩÔºåÊõ¥Ëß£ËÄ¶Ôºå ‰ΩøÂæóËøô‰∏™commandÁ±ªÂèØ‰ª•‰ª•‰∏Ä‰∏™ÈÄöÁî®ÁöÑÊñπÂºèË¢´ÂÖ∂ÂÆÉViewModelÂºïÁî®„ÄÇ‰∏ãÈù¢ÊòØÊîπÂñÑÂêéÁöÑÊû∂ÊûÑÔºå ÈúÄË¶ÅÊ≥®ÊÑèViewModelÂ¶Ç‰ΩïÈÄöËøáÂßîÊâòÔºàFuncÂíåActionÔºâÂíåcommandÁ±ª‰∫§‰∫í„ÄÇ Á¨¨‰∫îÊ≠•ÔºöÂà©Áî®PRISMÊúÄÂêéÂ¶ÇÊûúÊúâ‰∏Ä‰∏™Ê°ÜÊû∂ËÉΩÂ∏ÆÂä©ÂÆûÁé∞Êàë‰ª¨ÁöÑMVVM‰ª£Á†ÅÈÇ£Â∞±Êõ¥Â•Ω‰∫Ü„ÄÇPRISMÂ∞±ÊòØÂÖ∂‰∏≠‰∏Ä‰∏™ÂèØÂ§çÁî®ÁöÑÊ°ÜÊû∂„ÄÇPRISMÁöÑ‰∏ªË¶ÅÁî®ÈÄîÊòØ‰∏∫‰∫ÜÊèê‰æõÊ®°ÂùóÂåñÂºÄÂèëÔºå‰ΩÜÊòØÂÆÉÊèê‰æõ‰∫Ü‰∏Ä‰∏™ÂæàÂ•ΩÁöÑ‚ÄúDelegateCommand‚ÄùÁ±ªÊãøÊù•‰ª£ÊõøÊàë‰ª¨Ëá™Â∑±ÂàõÂª∫ÁöÑcommandÁ±ª„ÄÇ ÊâÄ‰ª•ÔºåÁ¨¨‰∏Ä‰ª∂‰∫ãÊÉÖÂ∞±ÊòØ‰ªéËøôÈáå‰∏ãËΩΩPRISMÔºåÁºñËØëËøô‰∏™Ëß£ÂÜ≥ÊñπÊ°àÔºåÊ∑ªÂä†‚ÄúMicrosoft.Practices.Prism.Mvvm.dll‚ÄùÂíå‚ÄúMicrosoft.Practices.Prism.SharedInterfaces.dll‚ÄùËøô‰∏§‰∏™DLLÂ∫ìÁöÑÂºïÁî®„ÄÇ ‰Ω†ÂèØ‰ª•ÂéªÊéâËá™ÂÆö‰πâÁöÑcommandÁ±ªÔºåÂØºÂÖ•‚ÄúMicrosoft.Practices.Prism.Commands‚ÄùÂêçÁß∞Á©∫Èó¥Ôºå ÁÑ∂Âêé‰ª•‰∏ãÈù¢‰ª£Á†ÅÁöÑÊñπÂºè‰ΩøÁî®DelegateCommand„ÄÇ 12345678910111213public class CustomerViewModel : INotifyPropertyChanged&#123; private Customer obj = new Customer(); private DelegateCommand objCommand; public CustomerViewModel() &#123; objCommand = new DelegateCommand(obj.CalculateTax, obj.IsValid); &#125; ... ... ... ...&#125; WPF MVVMÁöÑËßÜÈ¢ëÊºîÁ§∫ÊàëÂêåÊó∂‰πüÂú®‰∏ãÈù¢ÁöÑËßÜÈ¢ë‰∏≠‰ªéÂ§¥ÊºîÁ§∫‰∫ÜÂ¶Ç‰ΩïÂÆûÁé∞WPF MVVMÔºàËØëÊ≥®Ôºö‰∏Ä‰∏™YouTubeÈìæÊé•‚Ä¶Ôºâ„ÄÇ Âª∂‰º∏ÈòÖËØª WPF&#x2F;MVVM Quick Start Tutorial Simplifying the WPF TreeView by Using the ViewModel Pattern MVVM Â∫îÁî®Á®ãÂ∫è‰∏≠ÁöÑÂ§öÁ∫øÁ®ã‰∏éË∞ÉÂ∫¶ ÈíàÂØπÂºÇÊ≠• MVVM Â∫îÁî®Á®ãÂ∫èÁöÑÊ®°ÂºèÔºöÊï∞ÊçÆÁªëÂÆö ÈíàÂØπÂºÇÊ≠• MVVM Â∫îÁî®Á®ãÂ∫èÁöÑÊ®°ÂºèÔºöÂëΩ‰ª§ Using behaviours to bind to read-only properties in MVVM Cascading ComboBoxes in WPF using MVVM WPF&#x2F;MVVM: Binding the IsChecked Property of a CheckBox to Several Other CheckBoxes","categories":[{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/categories/Windows/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/tags/Windows/"},{"name":"c#","slug":"c","permalink":"https://unpluggedcoder.me/tags/c/"},{"name":"MVVM","slug":"MVVM","permalink":"https://unpluggedcoder.me/tags/MVVM/"},{"name":"WPF","slug":"WPF","permalink":"https://unpluggedcoder.me/tags/WPF/"}]},{"title":"Python3‰∏ãDjangoÁéØÂ¢ÉÊê≠Âª∫‰∏éÊ∑ªÂä†MySQLÊîØÊåÅ","slug":"Python3‰∏ãDjangoÁéØÂ¢ÉÊê≠Âª∫‰∏éÊ∑ªÂä†MySQLÊîØÊåÅ","date":"2015-10-01T14:30:00.000Z","updated":"2022-09-15T15:51:05.346Z","comments":true,"path":"2015/10/01/Python3‰∏ãDjangoÁéØÂ¢ÉÊê≠Âª∫‰∏éÊ∑ªÂä†MySQLÊîØÊåÅ/","link":"","permalink":"https://unpluggedcoder.me/2015/10/01/Python3%E4%B8%8BDjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B7%BB%E5%8A%A0MySQL%E6%94%AF%E6%8C%81/","excerpt":"","text":"‰∏ÄËà¨LinuxÂèëË°åÁâàÈÉΩÊòØÈªòËÆ§Python2.7.*ÁéØÂ¢É, ÈúÄË¶ÅÊâãÂä®ÂÆâË£ÖPython3, ÊàëÊòØÁî®CentOS7, Áî®yum install python34ÂÆâË£Ö, ÂÜçÂÆâË£ÖÊàñÂçáÁ∫ßpipÔºåÈúÄË¶Å‰∏ãËΩΩ get-pip.py, ËøôÈáåÊàëÁî®ÈªòËÆ§ÁöÑpython2.7ÂÆâË£ÖÁöÑpip, Êé•‰∏ãÊù•ÊòØvirtualenvÁéØÂ¢ÉÊê≠Âª∫: 1234$mkvirtualenv -p /usr/bin/python34 django_env$workon django_env(django_env)$pip install django(django_env)$django-admin startproject myproject ÂÆâË£ÖMysSQL backend 1(django_env)$pip install PyMySQL ÁÑ∂ÂêéÂú®DjangoÁ´ôÁÇπÁöÑ__init__.pyÊñá‰ª∂‰∏≠Ê∑ªÂä†Â¶Ç‰∏ã‰∏§Ë°å: 12import pymysqlpymysql.install_as_MySQLdb() Á°ÆËÆ§Âú®Python shell‰∏≠import MySQLdbÊó†ËØØÂç≥ÂèØÊ≠£Â∏∏‰ΩøÁî®django.db.backends.mysql 12345678910#settings.py DATABASES = &#123; &#x27;default&#x27;: &#123; &#x27;ENGINE&#x27;: &#x27;django.db.backends.mysql&#x27;, #Êï∞ÊçÆÂ∫ìÂºïÊìé &#x27;NAME&#x27;: &#x27;test&#x27;, #Êï∞ÊçÆÂ∫ìÂêç &#x27;USER&#x27;: &#x27;root&#x27;, #Áî®Êà∑Âêç &#x27;PASSWORD&#x27;: &#x27;root&#x27;, #ÂØÜÁ†Å &#x27;HOST&#x27;: &#x27;&#x27;, #Êï∞ÊçÆÂ∫ì‰∏ªÊú∫ÔºåÈªòËÆ§‰∏∫localhost &#x27;PORT&#x27;: &#x27;&#x27;, #Êï∞ÊçÆÂ∫ìÁ´ØÂè£ÔºåMySQLÈªòËÆ§‰∏∫3306 &#125;","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Django","slug":"Django","permalink":"https://unpluggedcoder.me/tags/Django/"}]},{"title":"Python‰ªéMySQLÂíåcsvËØªÂèñÂ§ßÈáèÊï∞ÊçÆ","slug":"Python‰ªéMySQLÂíåcsvËØªÂèñÂ§ßÈáèÊï∞ÊçÆ","date":"2015-07-27T03:12:50.000Z","updated":"2022-09-15T15:51:05.346Z","comments":true,"path":"2015/07/27/Python‰ªéMySQLÂíåcsvËØªÂèñÂ§ßÈáèÊï∞ÊçÆ/","link":"","permalink":"https://unpluggedcoder.me/2015/07/27/Python%E4%BB%8EMySQL%E5%92%8Ccsv%E8%AF%BB%E5%8F%96%E5%A4%A7%E9%87%8F%E6%95%B0%E6%8D%AE/","excerpt":"","text":"‰ªéMySQLdbÊé•Âè£ËØªÂèñÁôæ‰∏áÊù°‰ª•‰∏äËÆ∞ÂΩïÁöÑË°®Ê†º, ‰∏ªË¶ÅÊòØË¶ÅÊåáÂÆöÊ∏∏Ê†áÁöÑÁßçÁ±ª, Êâç‰∏ç‰ºöÈÄ†ÊàêÁ®ãÂ∫èÂÅúÁïôÂú®ÊâßË°åsqlËØ≠Âè•ÁöÑÁ≠âÂæÖËøîÂõûËøáÁ®ã‰∏≠. ÊúâÂõõÁßçCursor: Cursor SSCursor DictCursor SSDictCursor Ââç‰∏§ÁßçËøîÂõûtupleÁªìÊûÑ, Âêé‰∏§ÁßçËøîÂõûÂ≠óÂÖ∏ÁªìÊûÑ. Âè¶Â§ñ,Â∏¶ÊúâSSÂâçÁºÄÁöÑCursorÊòØÊú™Â∏¶ÁºìÂ≠òÁöÑÊ∏∏Ê†á(Unbuffered Cursor),ÂÆÉÊâßË°åÂëΩ‰ª§ÂêéÁªìÊûú‰∏ç‰ºö‰ªéMySQL server‰∏äÂèñ‰∏ãÊù•, ËÄåÊòØËÄåÊòØÁ´ãÂç≥ËøîÂõû, Âõ†Ê≠§‰ΩøÁî®ËØ•SSCursorÊúâ‰∏§ÁÇπË¶ÅÊ≥®ÊÑè: Áî®fetchone() Ëé∑ÂèñÊØè‰∏ÄË°åÁªìÊûúËøõË°åÂ§ÑÁêÜ ‰∏çË¶Å‰ΩøÁî®fetchall(), Âê¶ÂàôÂ∞Ü‰ºö‰ªéserver‰∏äÂèñ‰∏ãÊâÄÊúâÊï∞ÊçÆ, ÂêåÊ†∑‰ºöÈÄ†ÊàêÁ®ãÂ∫èÂç°‰Ωè. ‰ΩøÁî®ÊñπÊ≥ïÊúâ‰∏§Áßç: ‚Äã a. Âú®MySQLdb.connectionÂàùÂßãÂåñÈìæÊé•Êó∂ÊåáÂÆö: 123456import MySQLdbimport MySQLdb.cursorsdb = MySQLdb.Connection(host=db_host, user=db_username, passwd=db_password,charset=&quot;utf8&quot;, init_command=&quot;set names utf8&quot;,cursorclass=MySQLdb.cursors.SSDictCursor) ‚Äã b. Âú®CursorÊûÑÈÄ†Êó∂ÊåáÂÆö: 12345import MySQLdbfrom MySQLdb.cursors import SSCursordb = MySQLdb.connect(...)cursor = SSCursor(db) ‰ªécsvÊñá‰ª∂ËØªÂèñÂ§ßÈáèÊï∞ÊçÆ, ËøôÈáåË¶ÅÈáåÁî®pandasÂ∫ì ‰ª•‰∏ãÈù¢ÁöÑÊï∞ÊçÆ‰∏∫‰æãipnum,isp,isp_id16777216,,16777472,Áîµ‰ø°,10001716777728,Áîµ‰ø°,10001716777984,Áîµ‰ø°,100017 123456import pandas as pdfor df in pd.read_csv(&#x27;isp.txt&#x27;, chunksize=50000, iterator=True, encoding=&#x27;utf-8&#x27;, na_values=&#x27;&#x27;): mod_df = df.fillna(&#x27;Unknown&#x27;) # Â°´ÂÖÖÁ©∫Â≠óÊÆµ,Â°´ÂÖÖÂêéÁöÑÁªìÊûú‰ºöËøîÂõû for index, row in mod_df.iterrows(): print row[&#x27;ipnum&#x27;], row[&#x27;isp&#x27;], row[&#x27;isp_id&#x27;] chunksizeÊåáÂÆö‰∫ÜÊØèÊ¨°ËØªÂèñÁöÑÂùóÂ§ßÂ∞è, dfÊòØËø≠‰ª£ÁöÑDataFrame.Ê≥®ÊÑèdf.fillna( )Âπ∂‰∏ç‰ºö‰øÆÊîπdf,ËÄåÊòØÊää‰øÆÊîπÂêéÁöÑËøîÂõû.iterrows( )ÊñπÊ≥ïÂèØ‰ª•ËøîÂõûËø≠‰ª£ÁöÑindex Âíå Â≠óÂÖ∏ÂΩ¢ÂºèÁöÑÁªìÊûú.","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"MySQLdb","slug":"MySQLdb","permalink":"https://unpluggedcoder.me/tags/MySQLdb/"}]},{"title":"ËÆæÁΩÆXFSÊñá‰ª∂Á≥ªÁªüQuota","slug":"ËÆæÁΩÆXFSÊñá‰ª∂Á≥ªÁªüQuota","date":"2015-07-08T02:19:22.000Z","updated":"2022-09-15T15:51:05.354Z","comments":true,"path":"2015/07/08/ËÆæÁΩÆXFSÊñá‰ª∂Á≥ªÁªüQuota/","link":"","permalink":"https://unpluggedcoder.me/2015/07/08/%E8%AE%BE%E7%BD%AEXFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9FQuota/","excerpt":"","text":"CentOS7ÂºÄÂßãÈªòËÆ§XFSÊñá‰ª∂Á≥ªÁªü, ÊâÄ‰ª•‰πãÂâçÁöÑÊóß‰ª£Á†ÅÈúÄË¶Å‰∏Ä‰∫õÊõ¥Êîπ. Êü•ËØ¢XFSÊñá‰ª∂Á≥ªÁªüQuotaÁöÑÂá†‰∏™ÂëΩ‰ª§ 1234567# xfs_quota -x -c &#x27;report -h&#x27; /home# xfs_quota -x -c report /home# xfs_quota -c &#x27;df -h&#x27; /PATH/TO/QUOTA# xfs_quota -c &#x27;df -ih&#x27; /PATH/TO/QUOTA // ËäÇÁÇπinode ÈúÄË¶ÅÂÆâË£ÖxfsÁöÑÂ§¥Êñá‰ª∂: yum install xfsprogs-devel Sample Code: 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;sys/types.h&gt;#include &lt;sys/quota.h&gt;#include &lt;sys/statfs.h&gt;#include &lt;linux/quota.h&gt;#include &lt;linux/magic.h&gt;#include &lt;xfs/xqm.h&gt;void set_xfs_quota (int u_id, int limit)&#123; fs_disk_quota_t xfsquota; if (quotactl(QCMD(Q_XGETQUOTA, USRQUOTA), &quot;/dev/mapper/centos-home&quot;, u_id, (caddr_t)&amp;xfsquota) != 0) &#123; string errStr(strerror(errno)); cout &lt;&lt; &quot; errno(&quot;&lt;&lt; errno &lt;&lt; &quot;):&quot; &lt;&lt; errStr &lt;&lt; endl; &#125; // ËÆæÁΩÆlimit MBÁöÑQuota xfsquota.d_fieldmask = FS_DQ_LIMIT_MASK; xfsquota.d_blk_hardlimit = limit * 1024 * 2; // Ë¶Å‰πò‰ª•2 xfsquota.d_blk_softlimit = limit * 1024 * 2; if (quotactl(QCMD(Q_XSETQLIM, USRQUOTA), &quot;/dev/mapper/centos-home&quot;, u_id, (caddr_t)(&amp;xfsquota)) != 0) &#123; string errStr(strerror(errno)); cout &lt;&lt; &quot; errno(&quot;&lt;&lt; errno &lt;&lt; &quot;):&quot; &lt;&lt; errStr &lt;&lt; endl; &#125;&#125;","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://unpluggedcoder.me/tags/Linux/"},{"name":"quota","slug":"quota","permalink":"https://unpluggedcoder.me/tags/quota/"}]},{"title":"PythonÊäìÂèñÊ∑òÂÆùIPÂú∞ÂùÄÊï∞ÊçÆ","slug":"PythonÊäìÂèñÊ∑òÂÆùIPÂú∞ÂùÄÊï∞ÊçÆ","date":"2015-04-22T09:04:27.000Z","updated":"2022-09-15T15:51:05.346Z","comments":true,"path":"2015/04/22/PythonÊäìÂèñÊ∑òÂÆùIPÂú∞ÂùÄÊï∞ÊçÆ/","link":"","permalink":"https://unpluggedcoder.me/2015/04/22/Python%E6%8A%93%E5%8F%96%E6%B7%98%E5%AE%9DIP%E5%9C%B0%E5%9D%80%E6%95%B0%E6%8D%AE/","excerpt":"","text":"‰ªéhttps://ip.taobao.com‰∏äÊäìÂèñIPÂú∞ÂùÄÂ∫ì‰ø°ÊÅØ. ÁΩë‰∏äÊúâÂæàÂ§öËøôÊ†∑ÁöÑ‰æãÂ≠ê,‰ΩÜÂÆåÊï¥ÁöÑ‰ª£Á†Å‰∏çÂ§ö, ËøôÈáåÂàÜ‰∫´‰∏ãÊàëÂÜôÁöÑÁâàÊú¨. Âõ†‰∏∫Ê∑òÂÆùÊúâÈôêÂà∂ÊØèÁßí10Ê¨°ÁöÑËØ∑Ê±Ç, ‰∏çÁü•ÈÅìÊòØÊú∫Âô®ÊÄßËÉΩËøòÊòØpythonÊÄßËÉΩ‰∫¶ÊàñÊòØÊàë‰ª£Á†ÅÈóÆÈ¢ò, ÊîæÂºÄÈôêÂà∂ÊúÄÂ§ö‰πüÂ∞±Âπ≥ÂùáÊØèÁßí10Ê¨°ËÆøÈóÆ.ÂèØËÉΩÊòØÁî±‰∫éÊàëÁî®ÁöÑÊòØurllibÂêåÊ≠•ÊäìÂèñ,ÊîπÊàêÂºÇÊ≠•‰πüÂæàÁÆÄÂçï.ÂÖ∑‰ΩìËøêË°åÊà™ÂõæÂ¶Ç‰∏ã: ‰∏â‰∏™Á∫øÁ®ã:workerÁ∫øÁ®ãÊäìÂèñÂπ∂Ëß£ÊûêÊï∞ÊçÆ 1234567891011121314151617def worker(ratelimit, jobs, results, progress): global cancel while not cancel: try: ratelimit.ratecontrol() ip = jobs.get(timeout=2) # Wait 2 seconds ok, result = fetch(ip) if not ok: logging.error(&quot;Fetch information failed, ip:&#123;&#125;&quot;.format(ip)) progress.put(&quot;&quot;) # Notify the progress even it failed elif result is not None: results.put(&quot; &quot;.join(result)) jobs.task_done() # Notify one item except Queue.Empty: pass except: logging.exception(&quot;Unknown Error!&quot;) 1234567891011121314151617181920212223242526def fetch(ip): url = &#x27;https://ip.taobao.com/service/getIpInfo.php?ip=&#x27; + ip result = [] try: response = urllib.urlopen(url).read() jsondata = json.loads(response) if jsondata[u&#x27;code&#x27;] == 0: result.append(jsondata[u&#x27;data&#x27;][u&#x27;ip&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;country&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;country_id&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;area&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;area_id&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;region&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;region_id&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;city&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;city_id&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;county&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;county_id&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;isp&#x27;].encode(&#x27;utf-8&#x27;)) result.append(jsondata[u&#x27;data&#x27;][u&#x27;isp_id&#x27;].encode(&#x27;utf-8&#x27;)) else: return 0, result except: logging.exception(&quot;Url open failed:&quot; + url) return 0, result return 1, result processÁ∫øÁ®ãËæìÂá∫ÁªìÊûúÂà∞output 1234567891011def process(target, results, progress): global cancel while not cancel: try: line = results.get(timeout=5) except Queue.Empty: pass else: print &amp;gt;&amp;gt;target, line progress.put(&quot;&quot;) results.task_done() progprocÁ∫øÁ®ãËÆ∞ÂΩïËøõÂ∫¶,ÊàëÁî®‰∫ÜpipÂ∫ìÈáåprogressbar2Ëøô‰∏™ÂåÖ, ÂÆÉÈªòËÆ§ËæìÂá∫Âà∞stderr,‰∏çÂΩ±ÂìçÈªòËÆ§ÁöÑstdoutÁªìÊûúËæìÂá∫.‰ΩÜÊòØProgressBarÁ±ª‰∏çÊòØÁ∫øÁ®ãÂÆâÂÖ®ÁöÑ,ÊâÄ‰ª•Â∞±ÂºÄ‰∫ÜËøô‰∏™Á∫øÁ®ã. 123456789101112131415def progproc(progressbar, count, progress): &quot;&quot;&quot; Since ProgressBar is not a thread-safe class, we use a Queue to do the counting job, like two other threads. Use this thread do the printing of progress bar. By the way, it will print to stderr, which does not conflict with the default result output(stdout). &quot;&quot;&quot; idx = 1 while True: try: progress.get(timeout=5) except Queue.Empty: pass else: progressbar.update(idx) idx += 1 Áî®Ê≥ïÂæàÁÆÄÂçï: 123456789101112usage: main.py [-h][-o OUTPUT] iprangepositional arguments:iprange The string of IP range, such as:&quot;192.168.1.0-192.168.1.255&quot; : beginning-end&quot;192.168.1.0/24&quot; : CIDR&quot;192.168.1.*&quot; : wildcardoptional arguments:-h, --help show this help message and exit-o OUTPUT, --output OUTPUTThe output destination of result, default is stdout ÊîØÊåÅ‰∏âÁßçipËåÉÂõ¥ÁöÑË°®ËææÂºè,Ë∂≥Â§üÊäìÂèñÂêÑÁ±ªÁΩëÊÆµIP‰∫Ü,‰æãÂ¶Ç:CÁ±ªÁΩëÊÆµ: 192.168.*.1ÁöÑÂèÇÊï∞‰πüÊòØÊé•ÂèóÁöÑ. Â∑≤Áªè‰∏ä‰º†Âà∞Github‰∏ä‰∫Ü: taobaoip","categories":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"Áà¨Ëô´","slug":"Áà¨Ëô´","permalink":"https://unpluggedcoder.me/tags/%E7%88%AC%E8%99%AB/"}]},{"title":"Âú®Linux(CentOS)‰∏äÂºÄÂêØÂ∞èÂ∫¶WIFIÊó†Á∫øAPÊ®°Âºè","slug":"Âú®Linux(CentOS)‰∏äÂºÄÂêØÂ∞èÂ∫¶WIFIÊó†Á∫øAPÊ®°Âºè","date":"2015-01-29T03:31:35.000Z","updated":"2022-09-15T15:51:05.353Z","comments":true,"path":"2015/01/29/Âú®Linux(CentOS)‰∏äÂºÄÂêØÂ∞èÂ∫¶WIFIÊó†Á∫øAPÊ®°Âºè/","link":"","permalink":"https://unpluggedcoder.me/2015/01/29/%E5%9C%A8Linux(CentOS)%E4%B8%8A%E5%BC%80%E5%90%AF%E5%B0%8F%E5%BA%A6WIFI%E6%97%A0%E7%BA%BFAP%E6%A8%A1%E5%BC%8F/","excerpt":"","text":"‰ªéËøô‰∏™ÂçöÂÆ¢https://evilbinary.org/blog/article/6/ ‰∏ãËΩΩDPA_MT7601U_LinuxAP_ANDROID_20121211Ëøô‰∏™Êñá‰ª∂ Ëß£ÂéãÂêé‰øÆÊîπÂá†‰∏™Êñá‰ª∂: ÁõÆÂΩï‰∏ãÁöÑMakefile 12345678# Linux 2.6#LINUX_SRC = /lib/modules/$(shell uname -r)/build ËøôÈáåÊîπÊàêËá™Â∑±ÁöÑË∑ØÂæÑLINUX_SRC = /lib/modules/3.10.0-123.4.2.el7.x86_64/build# Linux 2.4 Change to your local setting#LINUX_SRC = /usr/src/linux-2.4LINUX_SRC_MODULE = /lib/modules/$(shell uname -r)/kernel/drivers/net/wireless/CROSS_COMPILE =endif os&#x2F;linux&#x2F;rt_linux.cËøô‰∏™Êñá‰ª∂Èáå918Ë°åÁöÑÂÆèË¶ÅÊîπÊàê(2.6‰ª•‰∏äÂÜÖÊ†∏): 12345678#if LINUX_VERSION_CODE &amp;lt; KERNEL_VERSION(2,6,29)pOSFSInfo-&amp;gt;fsuid = current-&amp;gt;fsuid;pOSFSInfo-&amp;gt;fsgid = current-&amp;gt;fsgid;current-&amp;gt;fsuid = current-&amp;gt;fsgid = 0;//#else Ê≥®ÈáäËøôÈáå// pOSFSInfo-&amp;gt;fsuid = current_fsuid() ;// pOSFSInfo-&amp;gt;fsgid = current_fsgid() ;#endif ÁÑ∂Âêémake, make install, ÂøΩÁï•lzmaÁöÑÂéãÁº©ÂëΩ‰ª§Êú™ÊâæÂà∞ modprobe mt7601Uap ÁÑ∂Âêélsmod | grep mt7601ÂèØ‰ª•ÁúãÂà∞mt7601Uap‰ª£Ë°®ÊàêÂäü, ÁÑ∂ÂêéÈáçÂêØ Êé•‰∏ãÊù•ÂèÇËÄÉËøôÈáå https://blog.csdn.net/sumang_87&#x2F;article&#x2F;details&#x2F;38168877 yum install dhcp -y ÁºñËæë sudo vim /etc/dhcp/dhcpd.conf Âä†‰∏ä‰∫Ü‰∏ãÈù¢‰∏ÄÊÆµ„ÄÇ„ÄÇ(ÊêúÁ¥¢ This is ÔºõÂè¶Â§ñÊ≥®ÊÑèDNSÔºàdomain-name-serversÔºâÔºå‰Ω†‰ª¨Ëá™Â∑±ÈÄâÊã©ÂêàÈÄÇ‰Ω†‰ª¨ÁöÑ) 12345678subnet 192.168.208.0 netmask 255.255.255.0 &#123; range 192.168.208.10 192.168.208.20; option routers 192.168.208.1; option domain-name-servers 114.114.114.114;&#125; Êää‰∏ãÈù¢ÁöÑ‰øùÂ≠òÊàêStartupWIFI.sh, ÂºÄÊú∫ÂêØÂä®Âç≥ÂèØ‚Ä¶. ÊàëÁöÑÂ∞èÂ∫¶WIFIÊòØra0, ‰ª•Â§™ÁΩëÊòØens33, ÂØπÂè∑ÂÖ•Â∫ß‰øÆÊîπÊàêËá™Â∑±ÁöÑ, ÂÜÖÁΩëIPË¶ÅÂíå‰∏äÈù¢ÁöÑdhcpd.conf‰∏ÄËá¥ 1234567ifconfig ra0 upifconfig ra0 192.168.208.1echo 1 | sudo tee /proc/sys/net/ipv4/ip_forwardiptables -t filter -Fiptables -t nat -Fiptables -t nat -A POSTROUTING -o ens33 -j MASQUERADEdhcpd ra0","categories":[{"name":"Unix/Linux","slug":"Unix-Linux","permalink":"https://unpluggedcoder.me/categories/Unix-Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://unpluggedcoder.me/tags/Linux/"},{"name":"Â∞èÂ∫¶WIFI","slug":"Â∞èÂ∫¶WIFI","permalink":"https://unpluggedcoder.me/tags/%E5%B0%8F%E5%BA%A6WIFI/"}]},{"title":"ATLÊ°ÜÊû∂‰∏ãÁºñÂÜôWindowsÊúçÂä°","slug":"ATLÊ°ÜÊû∂‰∏ãÁºñÂÜôWindowsÊúçÂä°","date":"2015-01-27T02:46:13.000Z","updated":"2022-09-15T15:51:05.342Z","comments":true,"path":"2015/01/27/ATLÊ°ÜÊû∂‰∏ãÁºñÂÜôWindowsÊúçÂä°/","link":"","permalink":"https://unpluggedcoder.me/2015/01/27/ATL%E6%A1%86%E6%9E%B6%E4%B8%8B%E7%BC%96%E5%86%99Windows%E6%9C%8D%E5%8A%A1/","excerpt":"ÂâçÊÆµÊó∂Èó¥Êúâ‰∏™ÂºÄÂèë‰∏Ä‰∏™WindowsÊúçÂä°ÁöÑÈúÄÊ±Ç,‰∏î‰∏çËÉΩ‰ΩøÁî®.NET, ‰πãÂêéÂú®ÂØπÊØî‰∫ÜWin32 Âíå ATL‰∏§ÁßçÁºñÂÜôWindowsÊúçÂä°ÁöÑÈÄîÂæÑ, ËøòÊòØÈÄâÊã©‰∫ÜÂêéËÄÖ. MarkÂá†‰∏™Âú∞Êñπ ÈáçËΩΩInitializeSecurity()ÂáΩÊï∞ 12345678910HRESULT InitializeSecurity() throw()&#123; // TODO : Ë∞ÉÁî® CoInitializeSecurity Âπ∂‰∏∫ÊúçÂä°Êèê‰æõÈÄÇÂΩìÁöÑ // ÂÆâÂÖ®ËÆæÁΩÆ // Âª∫ËÆÆ - PKT Á∫ßÂà´ÁöÑË∫´‰ªΩÈ™åËØÅ„ÄÅ // RPC_C_IMP_LEVEL_IDENTIFY ÁöÑÊ®°ÊãüÁ∫ßÂà´ // ‰ª•ÂèäÈÄÇÂΩìÁöÑÈùû NULL ÂÆâÂÖ®ËØ¥ÊòéÁ¨¶„ÄÇ return CoInitializeSecurity( NULL, -1, NULL, NULL, RPC_C_AUTHN_LEVEL_NONE,RPC_C_IMP_LEVEL_IDENTIFY, NULL, EOAC_NONE, NULL );&#125;","text":"ÂâçÊÆµÊó∂Èó¥Êúâ‰∏™ÂºÄÂèë‰∏Ä‰∏™WindowsÊúçÂä°ÁöÑÈúÄÊ±Ç,‰∏î‰∏çËÉΩ‰ΩøÁî®.NET, ‰πãÂêéÂú®ÂØπÊØî‰∫ÜWin32 Âíå ATL‰∏§ÁßçÁºñÂÜôWindowsÊúçÂä°ÁöÑÈÄîÂæÑ, ËøòÊòØÈÄâÊã©‰∫ÜÂêéËÄÖ. MarkÂá†‰∏™Âú∞Êñπ ÈáçËΩΩInitializeSecurity()ÂáΩÊï∞ 12345678910HRESULT InitializeSecurity() throw()&#123; // TODO : Ë∞ÉÁî® CoInitializeSecurity Âπ∂‰∏∫ÊúçÂä°Êèê‰æõÈÄÇÂΩìÁöÑ // ÂÆâÂÖ®ËÆæÁΩÆ // Âª∫ËÆÆ - PKT Á∫ßÂà´ÁöÑË∫´‰ªΩÈ™åËØÅ„ÄÅ // RPC_C_IMP_LEVEL_IDENTIFY ÁöÑÊ®°ÊãüÁ∫ßÂà´ // ‰ª•ÂèäÈÄÇÂΩìÁöÑÈùû NULL ÂÆâÂÖ®ËØ¥ÊòéÁ¨¶„ÄÇ return CoInitializeSecurity( NULL, -1, NULL, NULL, RPC_C_AUTHN_LEVEL_NONE,RPC_C_IMP_LEVEL_IDENTIFY, NULL, EOAC_NONE, NULL );&#125; ÈáçËΩΩRegisterAppIdÂáΩÊï∞,Ê≥®ÂÜåÊúçÂä°ÁöÑÁõ∏ÂÖ≥‰ø°ÊÅØ 123456789101112131415161718192021222324252627282930313233343536HRESULT CXXXXXServiceModule::RegisterAppId(bool bService = false) throw()&#123; HRESULT hr = S_OK; BOOL res = __super::RegisterAppId(bService); if (bService) &#123; if (IsInstalled()) &#123; SC_HANDLE hSCM = ::OpenSCManagerW(NULL, NULL, SC_MANAGER_ALL_ACCESS); SC_HANDLE hService = NULL; if (hSCM == NULL) hr = AtlHresultFromLastError(); else &#123; hService = ::OpenService(hSCM, m_szServiceName, SERVICE_ALL_ACCESS); if (hService != NULL) &#123; ::ChangeServiceConfig(hService, SERVICE_NO_CHANGE, SERVICE_AUTO_START, // ÊúçÂä°Ëá™ÂêØÂä® NULL, NULL, NULL, NULL, NULL, NULL, NULL, m_szServiceName); // ÈÄöËøá‰øÆÊîπËµÑÊ∫êIDS_SERVICENAME ‰øÆÊîπÊúçÂä°ÁöÑÊòæÁ§∫ÂêçÂ≠ó SERVICE_DESCRIPTION Description; TCHAR szDescription[1024]; ZeroMemory(szDescription, 1024); ZeroMemory(&amp;amp;Description, sizeof(SERVICE_DESCRIPTION)); lstrcpy(szDescription, _T(&quot;ËøôÈáåÊ∑ªÂä†ÊúçÂä°ÁöÑÊèèËø∞ÂÜÖÂÆπ&quot;)); Description.lpDescription = szDescription; ::ChangeServiceConfig2(hService, SERVICE_CONFIG_DESCRIPTION, &amp;amp;Description); ::CloseServiceHandle(hService); &#125; else hr = AtlHresultFromLastError(); ::CloseServiceHandle(hSCM); &#125; &#125; &#125; return hr;&#125; ÈáçËΩΩrun( )ÂáΩÊï∞, ÁΩë‰∏äÊúâÁöÑËØ¥ÈáçËΩΩPreMessageLoop( )ÂáΩÊï∞Ê∑ªÂä†Ëá™ÂÆö‰πâ‰ª£Á†Å,ÂÖ∂ÂÆûÁúãatlÂ§¥Êñá‰ª∂, ÈáçËΩΩrunÊØîËæÉ‚ÄùÊ≠£ÂÆó‚Äù. 12345HRESULT CXXXXXServiceModule::Run(int nShowCmd) throw()&#123; // Ê∑ªÂä†ÊúçÂä°ÂêØÂä®ÁöÑËá™ÂÆö‰πâ‰ª£Á†Å return __super::Run(nShowCmd);&#125; ÈáçËΩΩstop( )ÂáΩÊï∞, Ê∑ªÂä†ÊúçÂä°ÂÅúÊ≠¢ÁöÑÁõ∏ÂÖ≥‰ª£Á†Å. 12345void CXXXXXServiceModule::OnStop() throw()&#123; // ÈáäÊîæÊâÄÊúâËµÑÊ∫ê __super::OnStop();&#125; ‰ª•‰∏äËøô‰∫õÂáΩÊï∞ÈÉΩ‰∏çËÉΩÊäõÂá∫ÂºÇÂ∏∏,ËøôÁÇπÂæàÈáçË¶Å, ÊúÄÂ•ΩÈÉΩÁî®try&#123; &#125; catch()&#123;&#125;ÂùóÊçïËé∑, Â¶ÇÊûúÊúâÂºÇÂ∏∏ÁöÑËØùÊúçÂä°ÁöÑÊìç‰ΩúÂ∞±‰ºöÂ§±Ë¥•ÈÄ†ÊàêÊúçÂä°ÁöÑÊó†ÂìçÂ∫î.ÂêåÊó∂‰∏∫‰∫Ü‰∏çËÆ©ÊúçÂä°ÁöÑÂêØÂä®ÂíåÂÅúÊ≠¢Ë∂ÖÊó∂, ÊúÄÂ•ΩÂºÄÂêØÂà´ÁöÑÁ∫øÁ®ãÂéªÂÆåÊàê‰ªªÂä°. Ê≥®ÂÜåÊúçÂä°: MyService.exe &#x2F;ServiceÂç∏ËΩΩÊúçÂä°: MyService.exe &#x2F;UnRegServer Ë∞ÉËØï&#x2F;ÊµãËØïÊúçÂä°ÁöÑÊó∂ÂÄôÈöæÂÖç‰ºöÂØºËá¥ÊúçÂä°ËøõÁ®ãÁöÑÂ¥©Ê∫É, ÊúçÂä°ÂàóË°®‰∏äÊó†Ê≥ïÊìç‰Ωú, ËøôÊó∂ÂÄôÊ£ÄÊü•‰∏ãÈù¢Âá†ÁÇπÂéªÊ∏ÖÈô§&#x2F;Âç∏ËΩΩÊúçÂä°: Â¶ÇÊûúÊúâÂÆâË£ÖÁ®ãÂ∫è, Âú®Ê∑ªÂä†&#x2F;Âà†Èô§Á®ãÂ∫èÈáåÂç∏ËΩΩÊúçÂä°ÁöÑÁ®ãÂ∫è, ÂâçÊèêÊù°‰ª∂ÊòØÊúçÂä°ÊúâÂìçÂ∫î, Âπ∂‰∏îÂç∏ËΩΩÊúçÂä°ÁöÑÂëΩ‰ª§‰∏çËÉΩÊúâÂºÇÂ∏∏ÂíåÂ§±Ë¥•; Âú®Ê≥®ÂÜåË°®Ë∑ØÂæÑ[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services]‰∏≠ÊâæÂà∞Ëá™Â∑±ÁöÑÊúçÂä°,Âà†Èô§; Âú®Ê≥®ÂÜåË°®ÈáåÊêúÁ¥¢Ëá™Â∑±ÁöÑÊúçÂä°Âêç, Âà†Èô§ÊâÄÊúâÁöÑÈîÆÂÄº; ‰ªªÂä°ÁÆ°ÁêÜÂô®ÈáåÁªìÊùüÊúçÂä°ËøõÁ®ã.","categories":[{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/categories/Windows/"}],"tags":[{"name":"ATL","slug":"ATL","permalink":"https://unpluggedcoder.me/tags/ATL/"},{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/tags/Windows/"},{"name":"C#","slug":"C","permalink":"https://unpluggedcoder.me/tags/C/"}]},{"title":"Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ã)","slug":"Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ã)","date":"2014-11-21T03:12:25.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2014/11/21/Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ã)/","link":"","permalink":"https://unpluggedcoder.me/2014/11/21/Jabberd2%20%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%20(%E4%B8%8B)/","excerpt":"","text":"Êó∂ÈöîÂá†‰∏™ÊúàÊâçÂèëËøôÁØá‰∏ãÊñáÊòØÂõ†‰∏∫ÊúüÈó¥ÊØîËæÉÂøô, ÂÖ∂Ê¨°ÂèàËä±‰∫Ü‰∏Ä‰∏™ÊúàÁöÑÊó∂Èó¥Âú®ÂØπÂÆåÊàêÁöÑÁ¨¨‰∏Ä‰ªΩJabberd2sÂêéÂÅö‰∫ÜÈùûÂ∏∏Â§ßÁöÑÊîπÂä®.‰ΩÜÊòØ‰∏∫‰∫ÜËÉΩË°îÊé•Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ä) ÂÜÖÂÆπ, Êú¨ÊñáËøòÊòØÊé•ÁùÄÂÆÉÁöÑÊñπÊ≥ïÊääÂØπc2sÁöÑÊõ¥ÊîπpostÂá∫Êù•, ÂÖ∂ÂÆû‰πüÈùûÂ∏∏ÁÆÄÂçï, ÊúâÁúãËøá‰ª£Á†ÅÁöÑÂ∫îËØ•Â∞±Âæà‰∫ÜËß£‰∫Ü. ÊúÄÂêé, ÂØπÁé∞Âú®Jabberd2sÁöÑ‰øÆÊîπÁé∞Áä∂ÂÅö‰∫ÜÁÇπÁÆÄÂçïÊèèËø∞. ÊúÄÂ§çÊùÇÁöÑsmÈÉ®ÂàÜÂú®‰∏äÁØáÂ∑≤ÁªèËÆ≤Ëøá‰∫Ü, Âíåsm‰∏ÄÊ†∑, c2s‰πüÁª¥Êä§‰∫Ü‰∏Ä‰∏™hostsÁöÑÂàóË°®(ÂÖ∂ÂÆûÂè¶‰∏Ä‰∏™hostsÂàóË°®c2s-&gt;sm_avail Âú®‰∏ä‰∏ÄËäÇÂ∑≤ÁªèÁî±smÁª¥Êä§‰∫Ü)‰ª£Ë°®ÂèØÁî®ÁöÑÊúçÂä°ÂüüÂêç, Âú®ÂØπXMLÈÖçÁΩÆÊñá‰ª∂‰øÆÊîπÂêéÂêåÊ†∑Ë¶Å‰ΩøÂÖ∂ÁîüÊïà‰πüÊòØÂú®c2s&#x2F;main.cÈáåÈáçÊñ∞Âä†ËΩΩÈÖçÁΩÆ, Âä†ËΩΩÈÖçÁΩÆÁöÑÂáΩÊï∞Â§ßÈÉ®ÂàÜÂ∑≤ÁªèÊúâ‰∫Ü. È¶ñÂÖàÁî®ÂêåÊ†∑ÁöÑÊñπÊ≥ïËß¶ÂèëReConfig: 123456789101112131415161718// reload configurationsif(c2s_reconf) &#123; log_write(c2s-&gt;log, LOG_NOTICE, &quot;reloading some configuration items ...&quot;); config_t conf; conf = config_new(); if (conf &amp;&amp; config_load(conf, config_file) == 0) &#123; // expand with new configuration _c2s_hosts_expand_with_config(c2s, conf); config_free(conf); log_write(c2s-&gt;log, LOG_NOTICE, &quot;reconfig hosts mapping ...&quot;); &#125;else &#123; log_write(c2s-&gt;log, LOG_WARNING, &quot;couldn&#x27;t reload config (%s)&quot;, config_file); if (conf) config_free(conf); &#125; c2s_reconf = 0;&#125; _c2s_hosts_expand_with_configÊòØÊñ∞Â¢ûÁöÑÂáΩÊï∞, ÂÖ∂ÂÖ≥ÈîÆ‰ª£Á†Å: 12345678910111213141516171819202122232425262728293031323334353637/* Reconfig with sepecified configuration */static void _c2s_hosts_expand_with_config(c2s_t c2s, config_t conf)&#123; ... // ‰ªéconfig_tËØªÂèñÂπ∂Â°´ÂÖÖÂà∞newhosts newhosts = xhash_new(1021); for(i = 0; i &lt; elem-&gt;nvalues; i++) &#123; host_t host = (host_t) pmalloco(xhash_pool(newhosts), sizeof(struct host_st)); ... //Ê≠§Â§ÑÁöÑsx_ssl_server_addcertÊúâÁÇπÁº∫Èô∑ &#125; // ‰ª•‰∏äÂÜÖÂÆπÂíå _c2s_hosts_expandÂá†‰πé‰∏ÄÊ†∑. // update host pointer in sessions if(xhash_iter_first(c2s-&gt;sessions)) do &#123; xhv.sess_val = &amp;sess; xhash_iter_get(c2s-&gt;sessions, NULL, NULL, xhv.val); if(sess-&gt;resources != NULL) &#123; host_t currhost = xhash_get(newhosts, sess-&gt;resources-&gt;jid-&gt;domain); if(currhost!= NULL)&#123; // Update to new host pointer sess-&gt;host = currhost; &#125;else&#123; /* domain has been removed, close it`s session*/ sess-&gt;active = 0; if(sess-&gt;s) sx_close(sess-&gt;s); &#125; &#125; &#125; while(xhash_iter_next(c2s-&gt;sessions)); // replace current hosts table xhash_free(c2s-&gt;hosts); c2s-&gt;hosts = newhosts;&#125; ËøôÊ†∑Â∞±Êõ¥Êñ∞‰∫Üc2s-&gt;hosts, ÊúÄ‰∏ªË¶ÅÁöÑÊòØË¶ÅÊõ¥Êñ∞c2s-&gt;sessionsÈáåÁöÑhostÊåáÈíàÂÄº, Ââ©‰∏ãÁöÑc2sÈÉΩ‰ºöËá™Â∑±Â§ÑÁêÜ. ‰ΩÜÊòØËøôÈáåËøòÊúâ‰∏Ä‰∏™Áº∫ÁÇπ, Âú®sx_ssl_server_addcertÊ∑ªÂä†SSLËØÅ‰π¶‰ø°ÊÅØ‰∏≠,Â¶ÇÊûúÂØπÈáçÂ§çÂç≥Â∑≤Â≠òÂú®ÁöÑËØÅ‰π¶‰ø°ÊÅØ‰ºöÂà†Èô§ÂéüÊúâÂπ∂ÊõøÊç¢: 1234567891011121314/** args: name, pemfile, cachain, mode */int sx_ssl_server_addcert (...)&#123; ... /* remove an existing context with the same name before replacing it */ tmp = xhash_get(contexts, name); if(tmp != NULL) SSL_CTX_free((SSL_CTX *) tmp); xhash_put(contexts, name, ctx); return 0;&#125; ËøôÂèØ‰ª•Ëá™Âä®Êõ¥Êñ∞ËØÅ‰π¶, ‰ΩÜÊòØÂØπÂ∑≤ÁªèÁßªÈô§ÁöÑdomainËØÅ‰π¶Âç¥Ê≤°ÊúâÂà†Èô§, Ë¶ÅÂÆûÁé∞Ëøô‰∏™Âπ∂‰∏çÈöæ, ÂêéÊúü‰ºö‰øÆÂ§çËøô‰∏™bug. ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚ÄìÂàÜÂâ≤Á∫ø‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì ÁõÆÂâçÂØπJabberd2sÂ∑≤ÁªèÊúâ‰∫ÜÂæàÂ§ßÁöÑ‰øÆÊîπ, Â∑≤Áªè‰∏çÂÜç‰ªéXMLÈÖçÁΩÆÊñá‰ª∂ÈáåËØªÂèñhostsÁöÑÈÖçÁΩÆ‰ø°ÊÅØ, ÂèñËÄå‰ª£‰πãÂú®Êï∞ÊçÆÂ∫ìÈáåÊ∑ªÂä†‰∫Ü‰∏ÄÂº†hostË°®, ÊúâÊõ¥Âº∫ÁöÑÂèØÊéßÊÄß, ‰∏çËøáÁõÆÂâçÂè™ÊúâÂØπmysqlÊîØÊåÅ, Ê≤°ÊúâÁÖßÈ°æÂÖ∂ÂÆÉÁöÑÊï∞ÊçÆÂ∫ì(Ê≤°ÊúâÊõ¥Êñ∞Âà∞GitHubÁöÑÂéüÂõ†‰πã‰∏Ä). 1234567891011121314151617MariaDB [jabberd2]&gt; desc host;+------------------+------------+------+-----+---------+----------------+| Field | Type | Null | Key | Default | Extra |+------------------+------------+------+-----+---------+----------------+| domain | text | NO | PRI | NULL | || realm | tinytext | NO | MUL | NULL | || object-sequence | bigint(20) | NO | MUL | NULL | auto_increment || pemfile | text | YES | | NULL | || verify-mode | tinyint(4) | YES | | 0 | || cachain | text | YES | | NULL | || require-starttls | tinyint(4) | YES | | 0 | || register-enable | tinyint(4) | YES | | 0 | || register-oob | text | YES | | NULL | || instructions | mediumtext | YES | | NULL | || password-change | tinyint(4) | YES | | 0 | || status | tinytext | YES | | NULL | |+------------------+------------+------+-----+---------+----------------+ smÂíåc2sÈÉΩ‰ºöËØªÂèñËØ•Ë°®, ‰ΩÜËØ•Ë°®Áî±c2sÁª¥Êä§Ë¥üË¥£Âà†Êîπ,ÊúÄÂêé‰∏Ä‰∏™Â≠óÊÆµË°®ÊòéÁä∂ÊÄÅ, ÂèØ‰ª•Êúânormal, add, mod, offline, delete. Ê≠£Â∏∏ÊòØnormal, ÂàáÊç¢Áä∂ÊÄÅÂèØ‰ª•Áõ¥Êé•‰øÆÊîπÂÖ∂statusÂÄº, ÁÑ∂ÂêéÂèëÈÄÅSIGUSR1‰ø°Âè∑Ëß¶ÂèëReConfig. Áî±‰∫érouterÁöÑÊú∫Âà∂ÁºòÊïÖ, Êó†Ê≥ï‰ªéofflineÁä∂ÊÄÅÂàáÊç¢Âà∞delete, Ë¶ÅÂà†Èô§ÁöÑËØùÂæóÂÖàÂàáÊç¢Âà∞normalÁä∂ÊÄÅ, ÁÑ∂ÂêéÂÜçdelete. Êàë‰πüÂú®ÊÉ≥ÊàñËÆ∏‰∏çÈúÄË¶ÅdeleteÁä∂ÊÄÅ, Áõ¥Êé•‰ªéË°®Âà†Èô§Êù°ÁõÆ‰πüÊòØÂèØ‰ª•Êõ¥Êñ∞ÁöÑ(Ê≤°ÊúâÊõ¥Êñ∞Âà∞GitHubÁöÑÂéüÂõ†‰πã‰∫å), ÊàñËÆ∏ÂæÖÊõ¥ÂÆåÂñÑÊàñËÄÖÊúâÁ©∫‰∫Ü‰ºöÊõ¥Êñ∞Âà∞git‰∏ä.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨BoostÂ∫ì (ÂèäÁõ∏ÂÖ≥Â∫ìÁöÑÁºñËØë)","slug":"64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨BoostÂ∫ì (ÂèäÁõ∏ÂÖ≥Â∫ìÁöÑÁºñËØë)","date":"2014-11-09T04:43:59.000Z","updated":"2022-09-15T15:51:05.342Z","comments":true,"path":"2014/11/09/64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨BoostÂ∫ì (ÂèäÁõ∏ÂÖ≥Â∫ìÁöÑÁºñËØë)/","link":"","permalink":"https://unpluggedcoder.me/2014/11/09/64%E4%BD%8DLinux%E4%B8%8B%E7%BC%96%E8%AF%91x86%E7%89%88%E6%9C%ACBoost%E5%BA%93%20(%E5%8F%8A%E7%9B%B8%E5%85%B3%E5%BA%93%E7%9A%84%E7%BC%96%E8%AF%91)/","excerpt":"","text":"Áî®ÁöÑÊòØboost 1.55.0,Ê≠£Â∏∏ÁºñËØëÁöÑËØù‰∏ãÈù¢ÂëΩ‰ª§ÂèäÂèÇÊï∞Â∞±ÂèØ‰ª•‰∫Ü: 1./bjam --without-python --without-test --without-graph_parallel --without-graph --without-wave toolset=gcc cxxflags=&quot;-std=c++11&quot; install Â¶ÇÊûúË¶ÅÁºñËØë32‰ΩçÁâàÊú¨ÁöÑËØùÈúÄË¶ÅÂÖàÂÆâË£ÖboostÈúÄË¶ÅÁöÑÂá†‰∏™Â∫ìÁöÑx86ÁâàÊú¨ 12yum install libicu-devel.i686yum install bzip2-devel-1.0.5-7.el6_0.i686 Â¶ÇÊûúÊòØÁî®ICUÂ∫ìÁºñËØëboost.localeÂ∫ì, ÈÇ£Â∞±ÈúÄË¶ÅÁ¨¨‰∏ÄË°å,Â¶ÇÊûúÁî®libiconvÂ∫ìÂéªÁºñËØëboost.localeÂ∫ìÁöÑËØùÈúÄË¶ÅÊâãÂä®ÁºñËØëÂÆâË£ÖlibiconvÂ∫ì,‰∏ãËΩΩlibiconvÂ∫ì,Áî®‰∏ãÈù¢ÁöÑÂèÇÊï∞configure: 1./configure --prefix=/usr CFLAGS=&quot;-m32&quot; LDFLAGS=&quot;-m32&quot; --enable-static --enable-shared --build=x86_64-pc-linux-gnu --host=i686-pc-linux-gnu Êé•‰∏ãÊù•ÁºñËØëboost: 1./bjam --prefix=/usr --without-python --without-test --without-graph_parallel --without-graph --without-wave toolset=gcc address-model=32 architecture=x86 install ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞ÂæàÈáçË¶Å, Â¶ÇÊûúÂè™ÊòØÊåáÂÆö‰∫Üaddress-model&#x3D;32,‰ºöÁºñËØëÂá∫Â§ßÈÉ®ÂàÜÁöÑboostÂ∫ìÁöÑx86ÁâàÊú¨, ‰ΩÜÊòØ‰ºöÊèêÁ§∫ÊúâÂá†‰∏™target failed,Â∫ì‰∏çÂÆåÊï¥, Â∞§ÂÖ∂ÊòØboost.localeÂ∫ì,‰ºöÊèêÁ§∫: - iconv (libc) : no - iconv (separate) : no - icu : no - icu (lib64) : no Boost.Locale needs either iconv or ICU library to be built`. Boost.Locale needs either iconv or ICU library to be built.` Boost.Locale needs either iconv or ICU library to be built. ËÄå‰∫ãÂÆû‰∏äÂ∑≤ÁªèÂÆâË£Ö‰∫ÜicuÊàñËÄÖlibiconvÁöÑÊ≠£Á°ÆÁâàÊú¨,‰ΩÜÊòØboostÊó†Ê≥ïËØÜÂà´, ÈúÄË¶ÅÊåáÂÆöarchitecture&#x3D;x86 ÂêéÊâç‰ºöËØÜÂà´Âà∞,Âπ∂Ê≠£Á°ÆÂÆâË£Ö.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"Poco","slug":"Poco","permalink":"https://unpluggedcoder.me/tags/Poco/"},{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"GCC","slug":"GCC","permalink":"https://unpluggedcoder.me/tags/GCC/"}]},{"title":"64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨POCOÂ∫ì","slug":"64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨POCOÂ∫ì","date":"2014-11-09T04:30:07.000Z","updated":"2022-09-15T15:51:05.342Z","comments":true,"path":"2014/11/09/64‰ΩçLinux‰∏ãÁºñËØëx86ÁâàÊú¨POCOÂ∫ì/","link":"","permalink":"https://unpluggedcoder.me/2014/11/09/64%E4%BD%8DLinux%E4%B8%8B%E7%BC%96%E8%AF%91x86%E7%89%88%E6%9C%ACPOCO%E5%BA%93/","excerpt":"","text":"ÂÆòÊñπÊñáÊ°£Âú®ËøôÈáå, ÂæàËØ¶ÁªÜ. ‰ªîÁªÜÁúãÊù•‰∏ã, Áî±‰∫éPOCO‰∏∫‰∫ÜËÉΩÂ§üË∑®Âπ≥Âè∞Áî®Âú®Windows‰∏ãÁºñËØë, Áî®ÁöÑÊòØÂÆÉËá™Â∑±ÁöÑ‰∏ÄÂ•óBuild system, ËÄå‰∏çÊòØÊ†áÂáÜÁöÑAutoConf, automakeÈÇ£‰∏ÄÂ•ó. Ê≠£Â∏∏ÁöÑÁºñËØëÈÖçÁΩÆÊòØ: 1./configure --omit=Data/ODBC,Data/SQLite --prefix=/usr --cflags=-fPIC --cflags=-std=c++11 --static --shared --no-tests --no-samples --cflags=-std=c++11ÈÄâÈ°πË¶ÅÊ±ÇGCCÁâàÊú¨ÊîØÊåÅC++11,ËøôÊ†∑Ê≠£Â∏∏ÁºñËØëÂêémake install‰ºöÂ∞ÜPOCOÈùôÊÄÅÂ∫ìÂíåÂä®ÊÄÅÂ∫ìÂÆâË£ÖÂú®: prefix&#x2F;lib64ÁõÆÂΩï‰∏ã. ÂêéÊù•‰∏∫‰∫ÜÁºñËØë32‰ΩçÁâàÊú¨, ÁÆÄÂçïÁöÑÂä†‰∫Ü‰∏™ÂèÇÊï∞--cflags=-m32, ÁªìÊûúËøôÊ†∑Âè™ËÉΩÁºñËØëÂá∫ÁõÆÊ†áÊñá‰ª∂, Âõ†‰∏∫ÊòØÂº∫Âà∂Âú®CFLAGS‰∏äÂä†ÁöÑ-m32, Âä†‰∫ÜLDFLAGS=&quot;-m32&quot;‰πüÊó†Êïà,ÂêéÊù•ÊâçÁúã‰∫Ü‰∏ãÂÆÉÁöÑconfigure, Ê†πÊú¨‰πü‰∏çÊîØÊåÅLDFLAGSÂèÇÊï∞,‰∏çÊòØautoconfÁîüÊàêÁöÑ, Âè™ÊòØ‰∏Ä‰∏™shell. Êé•‰∏ãÊù•ÊâçÂõûÂà∞‰∏äÈù¢ÁöÑÂÆòÊñπÊñáÊ°£ÂéªÊü•ËØ¢, ÊâæÂà∞‰∫ÜPOCO_BASE&#x2F;build&#x2F;rules&#x2F;ÁõÆÂΩï‰∏ãÁöÑÂá†‰∏™ÈÖçÁΩÆÊñá‰ª∂,Êâç‰∫ÜËß£ÂÆÉÈúÄË¶ÅÁöÑÈÖçÁΩÆÂèÇÊï∞(ÊàñËÄÖËØ¥ÊòØÁéØÂ¢ÉÂèòÈáè),Ëøô‰∏™ÁõÆÂΩï‰∏ãÁöÑglobalÊñá‰ª∂ÊòØ‰∏ªË¶ÅÁöÑÈÖçÁΩÆ,ÂÖ≥ÈîÆÂá†Ë°åÂú®‰∏ãÈù¢: 12345678910111213141516171819202122232425262728## Check if a 64bit build is requested#ifndef OSARCH_64BITSOSARCH_64BITS = 0endififeq ($(OSARCH_64BITS),1)OSARCH_POSTFIX = 64elseOSARCH_POSTFIX =endif...ifeq ($(OSARCH_64BITS),1)CFLAGS += $(CFLAGS64)CXXFLAGS += $(CXXFLAGS64)SHLIBFLAGS += $(SHLIBFLAGS64)DYLIBFLAGS += $(DYLIBFLAGS64)LINKFLAGS += $(LINKFLAGS64)elseCFLAGS += $(CFLAGS32)CXXFLAGS += $(CXXFLAGS32)SHLIBFLAGS += $(SHLIBFLAGS32)DYLIBFLAGS += $(DYLIBFLAGS32)LINKFLAGS += $(LINKFLAGS32)endif ÂóØ, Â∞±ÈúÄË¶ÅËøôÂá†‰∏™ÁéØÂ¢ÉÂèòÈáè, ËøòÊòØÁî®‰∏äÈù¢ÁöÑconfigureÂëΩ‰ª§ÁöÑËØù, Â∞±ËøòÈúÄË¶ÅËÆæÁΩÆ‰∏ãÈù¢Âá†‰∏™ÁéØÂ¢ÉÂèòÈáè: 12345export DYLIBFLAGS=&quot;-m32&quot;export SHLIBFLAGS=&quot;-m32&quot;export OSARCH_64BITS=0export POCO_TARGET_OSARCH=i686./configure --omit=Data/ODBC,Data/SQLite --prefix=/usr --cflags=-fPIC --static --shared --no-tests --no-samples --cflags=-m32 ËøôÊ†∑Â∞±ÂèØ‰ª•‰∫Ü.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"Poco","slug":"Poco","permalink":"https://unpluggedcoder.me/tags/Poco/"},{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"GCC","slug":"GCC","permalink":"https://unpluggedcoder.me/tags/GCC/"}]},{"title":"Âú®Linux x64ÁéØÂ¢É‰∏ãgccÁºñËØë32‰ΩçÁ®ãÂ∫èÂèäLibrary","slug":"Âú®Linux x64ÁéØÂ¢É‰∏ãgccÁºñËØë32‰ΩçÁ®ãÂ∫èÂèäLibrary","date":"2014-11-07T09:36:00.000Z","updated":"2022-09-15T15:51:05.353Z","comments":true,"path":"2014/11/07/Âú®Linux x64ÁéØÂ¢É‰∏ãgccÁºñËØë32‰ΩçÁ®ãÂ∫èÂèäLibrary/","link":"","permalink":"https://unpluggedcoder.me/2014/11/07/%E5%9C%A8Linux%20x64%E7%8E%AF%E5%A2%83%E4%B8%8Bgcc%E7%BC%96%E8%AF%9132%E4%BD%8D%E7%A8%8B%E5%BA%8F%E5%8F%8ALibrary/","excerpt":"","text":"‰∏ÄÁõ¥ÈÉΩÂú®x64ÊúçÂä°Âô®‰∏äÂºÄÂèëÂíåÈÉ®ÁΩ≤, ÂÅ∂Â∞îÈÅáÂà∞‰∫ÜÂá†Âè∞x86ÊúçÂä°Âô®, Ëä±‰∫Ü‰∏ÄÂ§©ÁöÑÊó∂Èó¥ÂéªÁºñËØëÂá∫ÂêÑÁßçx86ÁâàÊú¨ÁöÑÂ∫ì, Âú®ÁΩë‰∏äÊêú‰∫Ü‰∏ãÂ§ßÂ§öÊï∞ÂõûÂ§çÈÉΩÂæàÁÆÄÂçï, ‰ΩÜÊòØÂÆûÈôÖ‰∏äÂØπ‰∫é‰∏Ä‰∏™ÂºïÁî®Â∫ìÊØîËæÉÂ§öÁöÑÁ®ãÂ∫èÂ∞±È∫ªÁÉ¶Â§ö‰∫Ü, ËøôÈáåËÆ∞ÂΩï‰∏ãÊàëÁöÑËøáÁ®ã, Áî®ÁöÑÊòØgcc. È¶ñÂÖà, Á®ãÂ∫èÁöÑÁºñËØëË¶ÅÂä†-m32ÈÄâÈ°π, ÂÖ∑‰ΩìÊÄé‰πàÂä†, Âä†Âú®Âì™ÈáåÊ†πÊçÆÈ°πÁõÆËá™Ë∫´ËÄåÂÆö.Ë¶ÅÊ≥®ÊÑèÁöÑÊòØ, ‰∏ç‰ªÖCXXFLAGS (or CFLAGS)Ë¶ÅÂä†, ÊúÄ‰∏ªË¶ÅÁöÑÊòØÈìæÊé•ÈÄâÈ°π‰πüË¶ÅÊúâ,Âê¶Âàôg++ ‚ÄìWL ‰πãÁ±ªÁöÑÈìæÊé•ÂëΩ‰ª§Âú®Ê≤°Êúâ-m32‰∏ã‰ºöÂØπÊâæÂà∞ÁöÑ32‰ΩçLibÊèêÁ§∫:‚ÄùSkip incompatible file type ‚Ä¶.‚Äù. ÊàëÁî®ÁöÑÊòØCMAKE, Âõ†Ê≠§Ë¶ÅÂú®‰∏ãÈù¢ÁöÑÁéØÂ¢ÉÂèòÈáèÈáåÂä†‰∏äËØ•ÈÄâÈ°π: 12SET(CMAKE_CXX_FLAGS &quot;$ENV&#123;CXXFLAGS&#125; -O0 -m32&quot;)SET(CMAKE_EXE_LINKER_FLAGS &quot;$&#123;CMAKE_EXE_LINKER_FLAGS&#125; -lrt -m32&quot;) ‰∏ä‰∏ÄÊ≠•‰ªÖ‰ªÖÊòØËÆæÂÆö‰∫ÜËá™Â∑±Á®ãÂ∫èÁöÑÁºñËØëÈÄâÈ°π, Ëøô‰πà‰∏ÄÊù•, ÊâÄÊúâË¶ÅÊ±ÇÂºïÁî®ÁöÑÂ∫ìÈÉΩË¶ÅÊ±ÇÁî®ELF 32ÁâàÊú¨, ÂæàÁÆÄÂçïfileÂëΩ‰ª§Â∞±ÂèØ‰ª•Êü•ÁúãÂ∫ìÁöÑÁâàÊú¨: 12[root@localhost ~]# file /usr/lib/libboost_system.so.1.55.0 /usr/lib/libboost_system.so.1.55.0: ELF 32-bit LSB shared object, Intel 80386, version 1 (SYSV), dynamically linked, not stripped &amp;nbsp; ÂØπ‰∫éC&#x2F;C++ÁöÑÊ†áÂáÜÂ∫ìËÄåË®ÄÂæàÁÆÄÂçï,ÂÆâË£ÖÂØπÂ∫îÁöÑÂåÖÂç≥ÂèØ, ÊàëÁöÑÊòØCentOS6.x,ÂØπÂ∫î‰∏ãÈù¢: 12yum install glibc-devel.i686yum install libstdc++-devel.i686 &amp;nbsp; ÂØπ‰∫éÂÖ∂ÂÆÉÂ∫ì‰πüÂèØ‰ª•Áî®Áõ∏ÂêåÁöÑÊñπÊ≥ï, ‰æãÂ¶Ç‰∏ãËΩΩÂÆâË£Ömysql-libs.x86_64ÂØπÂ∫îÁöÑmysql-libs.i686Âç≥ÂèØËß£ÂÜ≥libmysqlclient.so‰πãÁ±ªÁöÑÂ∫ìÂºïÁî®ÈóÆÈ¢ò. ‰ΩÜÊòØÂØπ‰∫é‰∏çÂ≠òÂú®‰∫éÂåÖÁÆ°ÁêÜÂÜÖÁöÑÁ¨¨‰∏âÊñπÂ∫ìÂ∞±Ê≤°ÈÇ£‰πàÂπ∏Ëøê‰∫Ü, ÂØπ‰∫éBoost C++ library ÂíåPOCO C++ library ,ÂèØ‰ª•ÂàÜÂà´ÂèÇÁÖßÂç≥Â∞ÜÂèëÁöÑ‰∏§ÁØáÊñáÁ´†.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"GCC","slug":"GCC","permalink":"https://unpluggedcoder.me/tags/GCC/"},{"name":"Linux","slug":"Linux","permalink":"https://unpluggedcoder.me/tags/Linux/"}]},{"title":"Maroon 5 - Won`t go home without you - Drum Cover","slug":"maroon-5-wont-go-home-without-you-drum-cover","date":"2014-09-28T01:23:38.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2014/09/28/maroon-5-wont-go-home-without-you-drum-cover/","link":"","permalink":"https://unpluggedcoder.me/2014/09/28/maroon-5-wont-go-home-without-you-drum-cover/","excerpt":"","text":"","categories":[{"name":"DrumCover","slug":"DrumCover","permalink":"https://unpluggedcoder.me/categories/DrumCover/"}],"tags":[{"name":"Drum","slug":"Drum","permalink":"https://unpluggedcoder.me/tags/Drum/"}]},{"title":"C#ÈùôÊÄÅÁ±ª Âíå C++ÈùôÊÄÅÂÆû‰æã ÁöÑÊûÑÈÄ†Âå∫Âà´","slug":"C#ÈùôÊÄÅÁ±ª Âíå C++ÈùôÊÄÅÂÆû‰æã ÁöÑÊûÑÈÄ†Âå∫Âà´","date":"2014-08-29T08:20:54.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2014/08/29/C#ÈùôÊÄÅÁ±ª Âíå C++ÈùôÊÄÅÂÆû‰æã ÁöÑÊûÑÈÄ†Âå∫Âà´/","link":"","permalink":"https://unpluggedcoder.me/2014/08/29/C#%E9%9D%99%E6%80%81%E7%B1%BB%20%E5%92%8C%20C++%E9%9D%99%E6%80%81%E5%AE%9E%E4%BE%8B%20%E7%9A%84%E6%9E%84%E9%80%A0%E5%8C%BA%E5%88%AB/","excerpt":"","text":"1234567891011121314151617181920/// Á£ÅÁõòÈÖçÈ¢ùËÆæÁΩÆÁ±ªstatic class DiskQuota&#123; static DiskQuotaControlClass _diskQuotaControl; const string FILESHAREVOLUME = @&quot;\\\\127.0.0.1\\d$\\&quot;; const int MBTOBYTES = 1048576; static DiskQuota() &#123; _diskQuotaControl = new DiskQuotaControlClass(); // Â¶ÇÊûúË∑ØÂæÑÊó†Ê≥ïËÆøÈóÆ, ËøôÈáåÂ∞ÜÂá∫Áé∞ÂºÇÂ∏∏ _diskQuotaControl.Initialize(FILESHAREVOLUME, true); &#125; static public void Print() &#123; Console.WriteLine(&quot;I`m alive&quot;); &#125;&#125; Âú®Ë∞ÉÁî®DiskQuotaÊó∂ÈÅáÂà∞‰∫ÜÂºÇÂ∏∏: &quot;****.DiskQuota‚ÄùÁöÑÁ±ªÂûãÂàùÂßãÂÄºËÆæÂÆöÈ°πÂºïÂèëÂºÇÂ∏∏„ÄÇ ËøôËÆ©ÊàëÂéª‰ªîÁªÜÁúã‰∫Ü‰∏ãMSDN‰∏äC#ÁöÑÈùôÊÄÅÁ±ªÁöÑËß£Èáä, ÊúâËøô‰πà‰∏ÄÂè•: ‚Äú‚Ä¶ However, it is guaranteed to be loaded and to have its fields initialized and its static constructor called before the class is referenced for the first time in your program. ‚Ä¶‚Äù ÂéüÊù•C#ÁöÑÈùôÊÄÅÁ±ªÂè™‰øùËØÅÂú®È¶ñÊ¨°Ë∞ÉÁî®ÂâçÂàùÂßãÂåñ, ËøôÈáåÁöÑÂàùÂßãÂåñÂåÖÊã¨ÈùôÊÄÅÊàêÂëòËµãÂÄº‰ª•ÂèäË∞ÉÁî®ÈùôÊÄÅÊûÑÈÄ†ÂáΩÊï∞.ËøôÊ†∑Á®ãÂ∫èÂ∞±ÂøÖÈ°ª‰øùËØÅÂú®È¶ñÊ¨°Ë∞ÉÁî®ÂâçÊçïËé∑ÂèØËÉΩÂèëÁîüÁöÑÂºÇÂ∏∏,ËÄå‰∏îÂ¶ÇÊûúÈ¶ñÊ¨°ÂàùÂßãÂåñÂèëÁîüÂºÇÂ∏∏,ÈÇ£‰πàÂêéÁª≠ÁöÑÂíåËØ•ÈùôÊÄÅÁ±ªÊúâÂÖ≥ÁöÑÊàêÂëò‰ª•ÂèäÊàêÂëòÂáΩÊï∞Ë∞ÉÁî®ÈÉΩ‰ºöÊúâÂºÇÂ∏∏: 123456789101112131415161718192021222324252627282930313233343536try &#123;// ÈùôÊÄÅÊûÑÈÄ†ÂáΩÊï∞ÂèëÁîüÂºÇÂ∏∏, PrintÊ†πÊú¨‰∏ç‰ºöË¢´Ë∞ÉÁî® DiskQuota.Print(); &#125; catch (Exception ex) &#123; Console.WriteLine(ex.Message); &#125; // Èô§ÈùûÈ¶ñÊ¨°ÈùôÊÄÅÊûÑÈÄ†ÊàêÂäü,Âê¶Âàô‰ªçÁÑ∂‰ºöË∞ÉÁî®ÈùôÊÄÅÊûÑÈÄ†ÂáΩÊï∞,Print‰πü‰∏ç‰ºöË¢´Ë∞ÉÁî® DiskQuota.Print();&lt;/pre&gt;ËøôÊ†∑Â¶ÇÊûú‰∏Ä‰∏™ÈùôÊÄÅÁ±ªÂú®ÂàùÂßãÊûÑÈÄ†ÂáΩÊï∞‰∏≠ÊúâÂºÇÂ∏∏,ÈÇ£ÊâÄÊúâÁöÑÊúâÂÖ≥Ë∞ÉÁî®ÈÉΩË¶ÅÊçïËé∑ÂºÇÂ∏∏?Â≤Ç‰∏çÊòØÈ∫ªÁÉ¶‰∫Ü...ÂÜçÊù•ÁúãÁúãC++ÊòØÊÄé‰πàÂÅöÁöÑ, C++Ê≤°ÊúâÈùôÊÄÅÁ±ª‰∏ÄËØ¥, ‰ΩÜÊòØÊúâÈùôÊÄÅÂÆû‰æã,Âõ†Ê≠§‰πüÂèØ‰ª•ÈÄöËøáÂÆö‰πâÈùôÊÄÅÁ±ªÂÆû‰æãÊù•ËææÂà∞ÈùôÊÄÅÂØπË±°ÁöÑÂàùÂßãÂåñ.```cppclass BadClass&#123;public: BadClass()&#123; throw runtime_error(&quot;Exception in constructor!&quot;); &#125; void print()&#123; cout &lt;&lt; &quot;I`m alive: &quot; &lt;&lt; typeid(this).name() &lt;&lt; endl; &#125;&#125;;class AClass&#123;public: static BadClass _badobj;&#125;;BadClass AClass::_badobj;static BadClass badobject; ‰∏§ÁßçÂΩ¢ÂºèÁöÑÈùôÊÄÅÂÆû‰æãÈÉΩ‰ºöÂú®mainÂáΩÊï∞‰πãÂâçÊäõÂá∫ÂºÇÂ∏∏, ËÄå‰∏îËøô‰∏™ÂºÇÂ∏∏Êó†Ê≥ïÊçïËé∑, Âè™ËÉΩÂú®ÂºÇÂ∏∏Ëß¶ÂèëÂêéÊçïËé∑Âà∞SIGABRT, Âú®mainÂáΩÊï∞ÂâçÊçïËé∑Ëøô‰∏™‰ø°Âè∑ÂèØ‰ª•ËøôÊ†∑ÂÅö: 12345678void SigABRTHandler(int signal)&#123; cout &lt;&lt; &quot;Receive SIG_ABT: &quot; &lt;&lt; signal &lt;&lt; endl;&#125;typedef void(*sighandler_t)(int);// Áî®ÈùôÊÄÅÂèòÈáèÁâπÊÄß‰ΩøÂÖ∂Âú®mainÂáΩÊï∞ÂâçËÆæÁΩÆ‰ø°Âè∑ÂõûË∞ÉÂáΩÊï∞static sighandler_t g_handler = signal(SIGABRT, SigABRTHandler); Linux‰∏ãÂèØËÉΩÁúãÂà∞ËøôÊ†∑ÁöÑËæìÂá∫: 123terminate called after throwing an instance of &#x27;std::runtime_error&#x27; what(): Exception in constructor!Receive SIG_ABT: 6 ËøôÊ†∑‰πüÂè™ÊòØÊçïËé∑Âà∞‰ø°Âè∑,‰ªÖÊ≠§ËÄåÂ∑≤,Êó†Ê≥ïÂ§ÑÁêÜÂºÇÂ∏∏,Âõ†Ê≠§C++Ë¶ÅÊ±ÇÊõ¥‰∏•Ê†º,Â≠òÂú®ÂºÇÂ∏∏ÁöÑÈùôÊÄÅÂÆû‰æãÊûÑÈÄ†ÁöÑÁ®ãÂ∫èËøûÂêØÂä®ÈÉΩË∞à‰∏ç‰∏ä. ÂèØËßÅÂêÑÊúâÂêÑÁöÑÂ•ΩÂ§Ñ: C#ÂÆûÁé∞‰∫Ü‰∏Ä‰∏™Á∫ØÈùôÊÄÅÁöÑÂçï‰ª∂Ê®°Âºè,ËÄå‰∏îÂÖÅËÆ∏ÊçïËé∑ÂÖ∂ÂºÇÂ∏∏(Â¶ÇÊûúÈúÄË¶ÅÂÆûÁé∞ÈùûÈùôÊÄÅÁöÑÂçï‰ª∂ÂÆû‰æãÂèØ‰ª•ÂèÇËÄÉËøôÈáå); C++Ë¶ÅÊ±ÇÊõ¥ÂÆâÂÖ®ÈùôÊÄÅÂàùÂßãÂåñËøáÁ®ã,ÂêåÊ†∑‰πüÂèØ‰ª•Áî®‰∫éÂçï‰ª∂Ê®°Âºè.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"},{"name":"ÊùÇÈ°π","slug":"C-C/ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/C-C/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C#","slug":"C","permalink":"https://unpluggedcoder.me/tags/C/"}]},{"title":"Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ä)","slug":"Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ä)","date":"2014-08-28T10:08:03.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2014/08/28/Jabberd2 Ê∑ªÂä†Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÂäüËÉΩ (‰∏ä)/","link":"","permalink":"https://unpluggedcoder.me/2014/08/28/Jabberd2%20%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E5%9F%9F%E5%90%8D%E7%AE%A1%E7%90%86%E5%8A%9F%E8%83%BD%20(%E4%B8%8A)/","excerpt":"","text":"Êú¨È°πÁõÆÊ∫êÁ†ÅÂ∑≤ÊâòÁÆ°Âú®Github‰∏ä, È°πÁõÆÂêçÁß∞: Jabberd2s Áî±Êù•Áî±‰∫é‰∏öÂä°ÈúÄÊ±ÇÈúÄË¶ÅÂØπJabberd2ËøõË°å‰∫Ü‰∫õ‰øÆÊîπ, ‰∏ªË¶ÅÊòØÂÆûÁé∞Âä®ÊÄÅÂüüÂêçÁÆ°ÁêÜÁöÑÂäüËÉΩ. Jabberd2 Êú¨Ë∫´ÂèØ‰ª•ÊîØÊåÅÂ§öÂüüÂêçÁöÑXMPPÊúçÂä°Âô®(‰æãÂ¶Ç: xmpp.server1.domain, xmpp.server2.domain, Á≠âÁ≠â‚Ä¶)ÂêåÊó∂ËøêË°å,‰ΩÜÊòØÊâÄÊúâXMPPÂüüÂêçÊúçÂä°ÈÖçÁΩÆ(‰Ωç‰∫éc2s.xmlÂíåsm.xml‰∏≠ÁöÑÈÖçÁΩÆ)ÂøÖÈ°ªÂú®ÊúçÂä°Âô®ÂêØÂä®Êó∂ÂÖ®ÈÉ®ÂàùÂßãÂåñÂÆåÊàê.ÂàùÂßãÂåñÂêéÂØπÂüüÂêç‰∏ãXMPPÊúçÂä°Âô®Â∞±Êó†Ê≥ïÂÅöÊõ¥Â§öÁöÑÊéßÂà∂.Âõ†Ê≠§,‰øÆÊîπJabberd2‰ª•ÊîØÊåÅÂÆûÊó∂ÊéßÂà∂ÂüüÂêçÊúçÂä°Âô®ÁöÑÁ¶ªÁ∫øÂíå‰∏äÁ∫ø‰ª•ÂèäÊúçÂä°Âô®ÈÖçÁΩÆÂÆûÊó∂‰øÆÊîπ.Ëøô‰∫õ‰øÆÊîπ‰∏ªË¶ÅÈíàÂØπÂ§öÂüüÂêç‰∏ªÊú∫ÁöÑÁÆ°ÁêÜ,ÊâÄ‰ª•GithubÁöÑÈ°πÁõÆÂêçÁß∞‰∏∫Jabberd2s. ÂÆûÁé∞ÁªÜËäÇ[ ÂÖàÁúãËøô‰∏™ÁÆÄÂçïÁöÑÂõæÁ§∫,ÁªøËâ≤ÈÉ®ÂàÜÊòØÂàùÂßãÂåñÂÜÖÂÆπ, Á≤âËâ≤ÈÉ®ÂàÜÊòØÊ∑ªÂä†ÁöÑÂäüËÉΩ. Ê∫êÁ†ÅËá™Ë∫´ÂàùÂßãÂåñËøáÁ®ã‰∏≠smÂú®Âª∫Á´ãÂíårouterÁöÑËøûÊé•ÂêéËß¶Âèëevent_OPEN‰∫ã‰ª∂, ‰ª£Á†Å1: 1234567891011121314151617181920212223242526// sm/sm.cint sm_sx_callback(sx_t s, sx_event_t e, void *data, void *arg) &#123; ... case event_OPEN: log_write(sm-&gt;log, LOG_NOTICE, &quot;connection to router established&quot;); ... if(xhash_iter_first(sm-&gt;hosts)) do &#123; xhash_iter_get(sm-&gt;hosts, (void *) &amp;domain, &amp;len, NULL); /* skip already requested SM id */ if (strlen(sm-&gt;id) == len &amp;&amp; strncmp(sm-&gt;id, domain, len) == 0) continue; nad = nad_new(); ns = nad_add_namespace(nad, uri_COMPONENT, NULL); elem = nad_append_elem(nad, ns, &quot;bind&quot;, 0); nad_set_attr(nad, elem, -1, &quot;name&quot;, domain, len); nad_append_attr(nad, -1, &quot;multi&quot;, &quot;to&quot;); log_debug(ZONE, &quot;requesting domain bind for &#x27;%.*s&#x27;&quot;, len, domain); sx_nad_write(sm-&gt;router, nad); &#125; while(xhash_iter_next(sm-&gt;hosts)); break; ...&#125; smÂèëÁªôrouter &lt;bind/&gt;ËäÇÂ£∞ÊòéÊñ∞Â¢ûÁöÑÁªëÂÆöÂüüÂêç: 1&lt;bind xmlns=&#x27;https://jabberd.jabberstudio.org/ns/component/1.0&#x27; multi=&#x27;to&#x27; name=&#x27;xmpp.server1.domain&#x27;/&gt; routerÂπøÊí≠&lt;presence/&gt;Áªôc2sÂíås2s, Â§ÑÁêÜbindÂíåunbindÁöÑÂàÜÂà´ÊòØ_router_process_bindÂíå_router_process_unbind, Ëøô‰∏§‰∏™ÂáΩÊï∞ÈÉΩÂæàÈïø,ÂÖ≥ÈîÆ‰ª£Á†ÅÂ¶Ç‰∏ã: 12345678910111213141516171819202122232425262728293031323334// router/router.cstatic void _router_process_bind(component_t comp, nad_t nad)&#123; ... /* advertise name */ // ÂπøÊí≠ÂüüÂêç‰ø°ÊÅØÁªôÊØèÊù°Ë∑ØÁî± // ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞ÂÜ≥ÂÆöÊòØÂê¶unavailable _router_advertise(comp-&gt;r, name-&gt;domain, comp, 0); /* tell the new component about everyone else */ // ‰∏ªÂä®ÂèçÂêëÂ∫îÁ≠îÁªôsm, &lt;presence .. from=&#x27;c2s&#x27;/&gt; xhash_walk(comp-&gt;r-&gt;routes, _router_advertise_reverse, (void *) comp); ...&#125;static void _router_process_unbind(component_t comp, nad_t nad)&#123; ... /* deadvertise name */ if(xhash_get(comp-&gt;r-&gt;routes, name-&gt;domain) == NULL) _router_advertise(comp-&gt;r, name-&gt;domain, comp, 1); // ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞‰∏∫1, Â∞ÜÂèëÈÄÅtype=&quot;unavailable&quot;Â±ûÊÄß ...&#125; ÁúüÊ≠£ÂèëÈÄÅ&lt;presence/&gt;ËäÇÁöÑÂú®_router_advertiseÂáΩÊï∞Èáå: 123456789101112131415161718192021222324// router/router.c/** domain advertisement */static void _router_advertise(router_t r, const char *domain, component_t src, int unavail)&#123; struct broadcast_st bc; int ns; log_debug(ZONE, &quot;advertising %s to all routes (unavail=%d)&quot;, domain, unavail); bc.r = r; bc.src = src; /* create a new packet */ bc.nad = nad_new(); ns = nad_add_namespace(bc.nad, uri_COMPONENT, NULL); nad_append_elem(bc.nad, ns, &quot;presence&quot;, 0); nad_append_attr(bc.nad, -1, &quot;from&quot;, domain); // ÊúÄÂêé‰∏Ä‰∏™ÂèÇÊï∞‰∏∫1, Â∞ÜÂèëÈÄÅtype=&quot;unavailable&quot;Â±ûÊÄß if(unavail) nad_append_attr(bc.nad, -1, &quot;type&quot;, &quot;unavailable&quot;); xhash_walk(r-&gt;routes, _router_broadcast, (void *) &amp;bc); nad_free(bc.nad);&#125; ÂØπ‰∫é&lt;bind/&gt;ËäÇrouterÂèëÈÄÅÂÜÖÂÆπ: 1&lt;presence xmlns=&#x27;https://jabberd.jabberstudio.org/ns/component/1.0&#x27; from=&#x27;xmpp.server1.domain&#x27;/&gt; ÂØπ‰∫é&lt;unbind/&gt;ËäÇrouterÂèëÈÄÅÂÜÖÂÆπ: 1&lt;presence xmlns=&#x27;https://jabberd.jabberstudio.org/ns/component/1.0&#x27; type=&#x27;unavailable&#x27; from=&#x27;xmpp.server1.domain&#x27;/&gt; ÂÜçÁúãc2sÊî∂Âà∞&lt;presence /&gt;ÂêéÊâÄÂÅöÁöÑÂèçÊò†: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// c2s/c2s.cstatic void _c2s_component_presence(c2s_t c2s, nad_t nad)&#123; int attr; char from[1024]; sess_t sess; union xhashv xhv; if((attr = nad_find_attr(nad, 0, -1, &quot;from&quot;, NULL)) &lt; 0) &#123; nad_free(nad); return; &#125; strncpy(from, NAD_AVAL(nad, attr), NAD_AVAL_L(nad, attr)); from[NAD_AVAL_L(nad, attr)] = &#x27;\\0&#x27;; if(nad_find_attr(nad, 0, -1, &quot;type&quot;, NULL) &lt; 0) &#123; log_debug(ZONE, &quot;component available from &#x27;%s&#x27;&quot;, from); log_debug(ZONE, &quot;sm for serviced domain &#x27;%s&#x27; online&quot;, from); // Ê≤°ÊúâtypeÂ±ûÊÄß, ÂàôÊ∑ªÂä†Âà∞c2s-&gt;sm_availÂìàÂ∏åÂ≠óÂÖ∏‰∏≠ xhash_put(c2s-&gt;sm_avail, pstrdup(xhash_pool(c2s-&gt;sm_avail), from), (void *) 1); nad_free(nad); return; &#125; if(nad_find_attr(nad, 0, -1, &quot;type&quot;, &quot;unavailable&quot;) &lt; 0) &#123; nad_free(nad); return; &#125; // ÊúâtypeÂ±ûÊÄß, ËÄå‰∏îÂ±ûÊÄßÂÄºÊòØunavailable log_debug(ZONE, &quot;component unavailable from &#x27;%s&#x27;&quot;, from); if(xhash_get(c2s-&gt;sm_avail, from) != NULL) &#123; log_debug(ZONE, &quot;sm for serviced domain &#x27;%s&#x27; offline&quot;, from); if(xhash_iter_first(c2s-&gt;sessions)) do &#123; xhv.sess_val = &amp;sess; xhash_iter_get(c2s-&gt;sessions, NULL, NULL, xhv.val); if(sess-&gt;resources != NULL &amp;&amp; strcmp(sess-&gt;resources-&gt;jid-&gt;domain, from) == 0) &#123; log_debug(ZONE, &quot;killing session %s&quot;, jid_user(sess-&gt;resources-&gt;jid)); // ÂÖ≥Èó≠ËØ•Âüü‰∏ãÁöÑÊâÄÊúâ‰ºöËØù sess-&gt;active = 0; if(sess-&gt;s) sx_close(sess-&gt;s); &#125; &#125; while(xhash_iter_next(c2s-&gt;sessions)); xhash_zap(c2s-&gt;sm_avail, from); &#125;&#125; Âõ†Ê≠§,‰ªésmÁöÑËßíÂ∫¶ÁúãÊâÄÊúâÁöÑÂüüÂêçÊúçÂä°Âô®ÈÉΩÊòØ‰∏Ä‰∏™‰ºöËØùÁ´ØÁÇπ,Âè™ÈúÄË¶ÅÂà†Èô§Ëøô‰∏™hostÂπ∂ÂèëÈÄÅ&lt;unbind/&gt;ÈÄöÁü•ÁªôrouterÂç≥ÂèØ‰ΩøÂÖ∂Á¶ªÁ∫ø: 1&lt;unbind xmlns=&#x27;https://jabberd.jabberstudio.org/ns/component/1.0&#x27; multi=&#x27;to&#x27; name=&#x27;xmpp.server1.domain&#x27;/&gt; Êñ∞Â¢ûÂáΩÊï∞_sm_hosts_reconfigÂíå‰ø°Âè∑ÈáèÂÄºsm_reconf, ‰øÆÊîπ‰∫ÜSIGUSR1‰ø°Âè∑Ëß¶ÂèëÁöÑÈÄªËæë, ÂéüÊú¨SIGUSR1ÂÖ≥Èó≠Ë∞ÉËØï, SIGUSR2ÂºÄÂêØË∞ÉËØï, Áé∞Âú®Êîπ‰∏∫SIGUSR2ÂàáÊç¢DebugÁä∂ÊÄÅ, SIGUSR1Ëß¶Âèë_sm_hosts_reconfig. 12345678910111213141516/* Use SIGUSR1 to reconfig hosts map */static void _sm_signal_usr1(int signum)&#123; // Original line //set_debug_flag(0); sm_reconf = 1;&#125;/* Use SIGUSR2 to switch debug flag */static void _sm_signal_usr2(int signum)&#123; //set_debug_flag(1); if(get_debug_flag()) set_debug_flag(0); else set_debug_flag(1);&#125; ‰ª£Á†Å2: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859// sm/main.c/* reconfig hosts with configurations and broadcast it */static void _sm_hosts_reconfig(sm_t sm, config_t conf)&#123; config_elem_t elem; char id[1024]; int len, i, ns, nelem; xht domains; char *host; nad_t nad; elem = config_get(conf, &quot;local.id&quot;); /* We only care about host reconfiguration at here, don`t set sm-&gt;id to hosts*/ if(!elem)return; domains = xhash_new(1021); for(i = 0; i &lt; elem-&gt;nvalues; i++) &#123; /* stringprep ids (domain names) so that they are in canonical form */ strncpy(id, elem-&gt;values[i], 1024); id[1023] = &#x27;\\0&#x27;; if (stringprep_nameprep(id, 1024) != 0) &#123; log_write(sm-&gt;log, LOG_ERR, &quot;cannot stringprep id %s, aborting&quot;, id); exit(1); &#125; if(xhash_get(sm-&gt;hosts, id) == NULL) &#123; // new host added, send bind information, Êñ∞Â¢û‰∏ªÊú∫ÂüüÂêç nad = nad_new(); ns = nad_add_namespace(nad, uri_COMPONENT, NULL); nelem = nad_append_elem(nad, ns, &quot;bind&quot;, 0); nad_set_attr(nad, nelem, -1, &quot;name&quot;, id, strlen(id)); nad_append_attr(nad, -1, &quot;multi&quot;, &quot;to&quot;); log_debug(ZONE, &quot;requesting domain bind for &#x27;%.*s&#x27;&quot;, strlen(id), id); sx_nad_write(sm-&gt;router, nad); &#125; else &#123; xhash_zap(sm-&gt;hosts, id); // eliminated host will stand at last &#125; xhash_put(domains, pstrdup(xhash_pool(domains), id), sm); &#125; // Ââ©‰∏ãÁöÑÈÉΩÊòØË¢´ÁßªÈô§‰∫ÜÁöÑ‰∏ªÊú∫ÂüüÂêç,ÂèëÈÄÅunbind // send unbind information for eliminated hosts if(xhash_iter_first(sm-&gt;hosts)) &#123; do &#123; xhash_iter_get(sm-&gt;hosts, (void *) &amp;host, &amp;len, NULL); nad = nad_new(); ns = nad_add_namespace(nad, uri_COMPONENT, NULL); nelem = nad_append_elem(nad, ns, &quot;unbind&quot;, 0); nad_set_attr(nad, nelem, -1, &quot;name&quot;, host, len); nad_append_attr(nad, -1, &quot;multi&quot;, &quot;to&quot;); log_debug(ZONE, &quot;requesting domain bind for &#x27;%.*s&#x27;&quot;, len, host); sx_nad_write(sm-&gt;router, nad); &#125;while(xhash_iter_next(sm-&gt;hosts)); &#125; // Âõ†‰∏∫sm-&gt;hostsËøô‰∏™ÂìàÂ∏åÂ≠óÂÖ∏Âú®sm‰∏≠Âè™Áî®Êù•Êü•ËØ¢,Ê≤°ÊúâÊäõÂá∫ÂÖ∂ÂÜÖÈÉ®ÊåáÈíà, // ÊâÄ‰ª•‰∏çÁî®ËÄÉËôëÂéüÊúâÁöÑhostsÊåáÈíàÂ§±Êïà, Áõ¥Êé•freeÊéâÊï¥‰∏™Êóßhosts,ÊõøÊç¢Êñ∞ÁöÑ // replace sm-&gt;hosts xhash_free(sm-&gt;hosts); sm-&gt;hosts = domains;&#125; ÊúÄÂêéÂú®mainÂáΩÊï∞ÁöÑwhileÂæ™ÁéØÈáåÂä†‰∏äsm_reconfËß¶Âèë: 1234567891011121314151617181920212223242526while(!sm_shutdown)&#123; mio_run(sm-&gt;mio, 5); // ... // reload configurations if(sm_reconf) &#123; log_write(sm-&gt;log, LOG_NOTICE, &quot;SIGUSR1: reloading some configuration items ...&quot;); sleep(20); config_t conf; conf = config_new(); if (conf &amp;&amp; config_load(conf, config_file) == 0) &#123; _sm_hosts_reconfig(sm, conf); config_free(conf); log_write(sm-&gt;log, LOG_NOTICE, &quot;reloading finished&quot;); &#125; else &#123; log_write(sm-&gt;log, LOG_WARNING, &quot;couldn&#x27;t reload config (%s)&quot;, config_file); if (conf) config_free(conf); &#125; sm_reconf = 0; &#125;&#125; Âà∞Ê≠§‰∏∫Ê≠¢, Â∑≤ÁªèÂèØ‰ª•ÊéßÂà∂Â∑≤ÊúâÊúçÂä°Âô®ÁöÑÁ¶ªÁ∫øÂíå‰∏äÁ∫ø,ÂéüÂõ†ÊòØÁî±‰∫éÂÆåÊï¥ÁöÑÊúçÂä°Âô®ÈÖçÁΩÆÁî±c2sÁÆ°ÁêÜ,Âõ†Ê≠§ËøòÈúÄË¶ÅÂØπc2s‰øÆÊîπ,‰ΩøÂÖ∂ÈáçÊñ∞ËΩΩÂÖ•Êñ∞ÁöÑc2s.xmlÈÖçÁΩÆ. Êú¨È°πÁõÆÊ∫êÁ†ÅÂ∑≤ÊâòÁÆ°Âú®Github‰∏ä, È°πÁõÆÂêçÁß∞: Jabberd2s","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã (‰∏ã)","slug":"Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã (‰∏ã)","date":"2014-08-14T04:42:40.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2014/08/14/Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã (‰∏ã)/","link":"","permalink":"https://unpluggedcoder.me/2014/08/14/Jabberd2%20%E9%80%9A%E4%BF%A1%E6%A1%86%E6%9E%B6(mio)%E6%A8%A1%E5%9E%8B%20(%E4%B8%8B)/","excerpt":"","text":"‰πãÂâçÁöÑÊñáÁ´†‰ªãÁªç‰∫ÜmioÁöÑÊï∞ÊçÆÁªìÊûÑÊ®°Âûã,‰ΩÜÊòØÂÆÉÂè™ÊòØÂÆö‰πâ‰∫ÜI&#x2F;OÂ§çÁî®ÁöÑÊ®°Âûã,‰∏ªË¶ÅÊòØË¥üË¥£I&#x2F;OÁ´ØÂè£‰∏äÁöÑËØªÂÜô‰∫ã‰ª∂ÁõëÂê¨,‰ΩÜÁúüÊ≠£ÁöÑËØª(recv)ÂíåÂÜô(send)Âπ∂‰∏çÊòØÁî±mioÂÆåÊàê,ËØªÂÜôÁöÑÂàÜÊûêÈÄªËæëÊ∂âÂèäÂà∞ÂçèËÆÆ,Âõ†Ê≠§jabberd2‰∏≠ËøôÈ°π‰ªªÂä°‰∫§Áªô‰∫ÜsxÊ®°ÂùóÂÆåÊàê,Ê∫êÁ†Å‰∏≠Ê≤°ÊúâÁúãÂà∞ÂØπsxËøô‰∏§‰∏™Â≠óÊØçÂÅöÂá∫ÁöÑËß£Èáä,ÂÖâÁúãÊ∫êÁ†ÅÁöÑsxÁõÆÂΩïÂæàÈöæÁúãÂá∫Ëøô‰∏™Ê®°ÂùóÂà∞Â∫ïÂÖ∑‰ΩìÁöÑËÅåË¥£,ÂÖ≥‰∫éÂÆÉÊó•ÂêéÂÜçËØ¥.ÂØπ‰∫émioÊù•ËØ¥, ÂèØ‰ª•ÊääsxÁúãÊàêÊòØËØªÂÜôÁöÑÊâßË°å‰Ωì, ËØªÂèñÂà∞xmlÁâáÊÆµÊÄé‰πàÂàÜÊûê, Ë¶ÅÂÜô‰ªÄ‰πàÂÜÖÂÆπÊù•ÂõûÂ§ç,ÈÉΩÁî±sxÂÆåÊàê. ÂÖ≥‰∫éÂ¶Ç‰ΩïË∞ÉËØïjabberd2Â∑≤ÁªèËÆ≤Ëøá, jabberd2Â∞ÜÊï¥‰∏™ÊúçÂä°Âô®‰∫§Áªô‰∫Ü4‰∏™ËøõÁ®ãÊ®°ÂùóÊù•ÊâßË°å,ÊàñËÆ∏Ëøô‰∏™ÂéüÂõ†, ‰ΩúËÄÖÂú®Ê®°Âùó‰∏≠Ê≤°ÊúâÁî®Â§öÁ∫øÁ®ã,Èù†‰∏Ä‰∏™‰∏ªÁ∫øÁ®ãÂÆåÊàêÂÖ®ÈÉ®Â∑•‰Ωú.ÊâÄ‰ª•Êï¥‰∏™Êû∂ÊûÑÈáåÂÖÖÊª°‰∫ÜÂáΩÊï∞ÂõûË∞É,ËÄå‰∏Ä‰∏™ÂõûË∞ÉÂáΩÊï∞ÂèØËÉΩÂú®ÂêÑÁßç‰∏çÂêåÁöÑÊÉÖÂÜµ‰∏ãË¢´Ë∞ÉÁî®,Âõ†Ê≠§‰ª£Á†ÅÁöÑ‰øÆÊîπ‰∏äÂøÖÈ°ªÂ∞èÂøÉÁøºÁøº,ËøôÊàñËÆ∏Âèà‰ΩøÂÖ∂Êâ©Â±ïÊÄßÂèóÂà∞‰∫ÜÊûÅÂ§ßÂú∞Á∫¶Êùü,ÁúãËøôÁ±ª‰ª£Á†ÅÈùûÂ∏∏Ë¥πÂä≤.ÊØ´Êó†‰æãÂ§ñÂú∞, mioÂíåsxÁöÑÈÖçÂêàËøáÁ®ã‰πüÊòØÈù†ÂõûË∞ÉÂÆåÊàê. ÂÖ∂ÂÆû‰ªécallbackÂáΩÊï∞ÁöÑÂëΩÂêç‰∏äÂèØ‰ª•ÁúãÂá∫ÂÆÉÁöÑÁî±Êù•,Á¨¨‰∏Ä‰∏™ÂçïËØç(c2s)ÊåáÊòé‰∫ÜÊâÄÂ±ûÁöÑËøõÁ®ãÊ®°Âùó,Á¨¨‰∫å‰∏™ÂçïËØç(router)Ë°®Á§∫Ëøô‰∏™ÂáΩÊï∞ÊâøËΩΩÁöÑÈÄö‰ø°ÂØπË±°,Á¨¨‰∏â‰∏™ÂçïËØç(mio)Ë°®Á§∫‰∫ÜË∞ÉÁî®Ëøô‰∏™ÂõûË∞ÉÂáΩÊï∞ÁöÑËß¶ÂèëËÄÖ,ÊúÄÂêé‰∏Ä‰∏™callbackÈ°æÂêçÊÄù‰πâ‰∫Ü.Âõ†Ê≠§c2s_router_mio_callbackË°®ÊòéÁöÑÊòØc2sÊ®°ÂùóÈáåÂíårouter‰∫§‰∫íÁöÑmioÊ®°ÂûãÂõûË∞ÉÂáΩÊï∞,Âú®jabberd2Êû∂ÊûÑÈáåËøôÁ±ªÂõûË∞ÉÂáΩÊï∞ÈÄöÂ∏∏ÈÉΩÊòØÊ≥®ÂÜåÂú®Á¨¨‰∏â‰∏™ÂçïËØç(ËøôÈáåÂç≥mio)ÁöÑÂÆû‰Ωì‰∏≠,Áî±ÂÖ∂Ëß¶Âèë.‰∏Ä‰∏™mio_callbackÂèØ‰ª•ÁÆ°ÁêÜ‰∏ÄÁ±ªÂØπË±°ÁöÑÈÄö‰ø°,ÈíàÂØπrouterÁöÑ‰∫§‰∫íÊ≥®ÂÜåÁöÑÊòØc2s_router_sx_callback,ÈíàÂØπÂÆ¢Êà∑Á´ØÂèëËµ∑ÁöÑËØ∑Ê±ÇÊ≥®ÂÜåÁöÑÊòØ_c2s_client_mio_callback,Ëøô‰∫õÂáΩÊï∞ÈÉΩÂú®c2s.c‰∏≠. ÂâçÈù¢ËØ¥Âà∞,mio‰∏çË¥üË¥£ÂÖ∑‰ΩìÁöÑËØªÂÜôÊìç‰Ωú,Âõ†Ê≠§ËøôÈáåÂèàÂºïÂÖ•‰∫ÜsxÊ®°ÂùóÁöÑÂõûË∞É,ÈíàÂØπÊØè‰∏Ä‰∏™(Êñá‰ª∂ÊèèËø∞Á¨¶FD)ËøûÊé•ÈÄö‰ø°,mio_callbackÈÉΩ‰ºöË∞ÉÁî®‰∏éÂÖ∂ÂØπÂ∫îÁöÑsx_callback.c2s_router_sx_callbackÂØπÂ∫î‰∫éc2s_router_mio_callback,ÂêéËÄÖ(mio)ÁöÑËØªÂèñËØ∑Ê±ÇÊìç‰ΩúÈÉΩÂèëÁªôÂâçËÄÖ(sx),Áî±‰∫érouterÂíåc2sÊòØ‰∏ÄÂØπ‰∏ÄÁöÑÂÖ≥Á≥ª,ÊâÄ‰ª•ËøõÂÖ•Ëøô‰∏§‰∏™ÂõûË∞ÉÁöÑËøûÊé•Âè•ÊüÑFDÈÉΩÊòØÂêå‰∏Ä‰∏™,Âõ†Ê≠§Áõ∏ÂØπÊØîËæÉÂÆπÊòìË∞ÉËØïÂíåÁêÜËß£,‰∏ãÂõæ‰πü‰ª•Ê≠§‰∏∫‰æãËß£Èáä.ËÄå‰∏Ä‰∏™c2sÂª∫Á´ãÁöÑÊúçÂä°Á´ØÂØπÂ∫îN‰∏™ÂÆ¢Êà∑Á´Ø,ÊâÄ‰ª•client_mio_callback‰ºöÈíàÂØπ‰∏çÂêåËøûÊé•ÂÅöÂá∫‰∏çÂêåclient_sx_callbackË∞ÉÁî®ËØ∑Ê±Ç.‰∏ãÂõæÊòØ‰ª•c2sÂíårouterÂª∫Á´ãËøûÊé•ÁöÑËøáÁ®ãÊù•Ë°®Á§∫. Âú®ËøõÂÖ•whileÂæ™ÁéØÂâçÈ¶ñÂÖàË¶ÅÂª∫Á´ãËµ∑‰∏érouterÁöÑËøûÊé•(_c2s_router_connect),whileÂæ™ÁéØÈù†mio_runÊù•È©±Âä®.Âú®ËøõÂÖ•Âæ™ÁéØÂâç,FD(m,fd)-&gt;typeÂ∑≤Ë¢´ËÆæÊàêtype_CONNECT_WRITE,Ë°®Á§∫È¶ñÊ¨°Âª∫Á´ãËøûÊé•Âπ∂Â∏åÊúõÂÜôÂÖ•Êï∞ÊçÆ.ËøôÈáåË¶ÅÊåáÂá∫‰∏ÄÁÇπ, ‰ªé_mio_readÂíå_mio_writeÁöÑÂå∫Âà´ÂèØ‰ª•ÁúãÂá∫Êù•Áî±‰∫éÈááÁî®ÁöÑÊòØReactorÊ®°Âºè, _mio_readÂÆûÈôÖ‰∏äÊòØÂª∂Êó∂ËØª,_mio_writeÊòØÂç≥Êó∂ÂÜô. 123456789101112131415161718192021222324252627282930313233343536/** start processing read events */static void _mio_read(mio_t m, mio_fd_t fd)&#123; if(m == NULL || fd == NULL) return; /* if connecting, do this later */ if(FD(m,fd)-&gt;type &amp; type_CONNECT) &#123; FD(m,fd)-&gt;type |= type_CONNECT_READ; return; &#125; MIO_SET_READ(m, FD(m,fd));&#125;/** try writing to the socket via the app */static void _mio_write(mio_t m, mio_fd_t fd)&#123; if(m == NULL || fd == NULL) return; /* if connecting, do this later */ if(FD(m,fd)-&gt;type &amp; type_CONNECT) &#123; FD(m,fd)-&gt;type |= type_CONNECT_WRITE; return; &#125; if(FD(m,fd)-&gt;type != type_NORMAL) return; // Ë∞ÉÁî®c2s_router_mio_callback if(ACT(m, fd, action_WRITE, NULL) == 0) return; /* not all written, do more l8r */ MIO_SET_WRITE(m, FD(m,fd));&#125; ÂÆûÈôÖÁöÑËØªÊìç‰ΩúË¶ÅÁ≠âÂæÖÂà∞‰∏ã‰∏ÄËΩÆFDËΩÆËØ¢Êó∂Êâç‰ºöÊâßË°å,ÊâÄ‰ª•ËøôÈáå‰ª•_mio__connectÊù•ËØ¥Êòé,Ê≠§Êó∂Â∏åÊúõÂÜôÂÖ•: 1234567891011121314/** internally change a connecting socket to a normal one */static void _mio__connect(mio_t m, mio_fd_t fd)&#123; mio_type_t type = FD(m,fd)-&gt;type; mio_debug(ZONE, &quot;connect processing for fd #%d&quot;, fd-&gt;fd); /* reset type and clear the &quot;write&quot; event that flags connect() is done */ FD(m,fd)-&gt;type = type_NORMAL; MIO_UNSET_WRITE(m,FD(m,fd)); /* if the app had asked to do anything in the meantime, do those now */ if(type &amp; type_CONNECT_READ) mio_read(m,fd); if(type &amp; type_CONNECT_WRITE) mio_write(m,fd);&#125; Êé•‰∏ãÊù•ÂÖ∂ÂÆûÂ∞±ÊòØÂáΩÊï∞ÂõûË∞É‰∫Ü, Ê≤°‰ªÄ‰πàÁâπÊÆäÁöÑ 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051int c2s_router_mio_callback(mio_t m, mio_action_t a, mio_fd_t fd, void *data, void *arg) &#123; c2s_t c2s = (c2s_t) arg; int nbytes; ... switch(a) &#123; ... case action_WRITE: log_debug(ZONE, &quot;write action on fd %d&quot;, fd-&gt;fd); return sx_can_write(c2s-&gt;router); ...&#125;int sx_can_write(sx_t s) &#123; /* Êï¥‰∏™ÂáΩÊï∞ÊúâÂ•ΩÂá†ÁßçËß¶Âèë_sx_eventÁöÑÊÉÖÂÜµ, event_WRITE ÊòØÂÆÉÁöÑ‰∏ªË¶ÅÁõÆÁöÑ */ sx_buf_t out; int ret, written; ... /* get the callback to do the write */ _sx_debug(ZONE, &quot;handing app %d bytes to write&quot;, out-&gt;len); written = _sx_event(s, event_WRITE, (void *) out); ...&#125;int __sx_event(const char *file, int line, sx_t s, sx_event_t e, void *data) &#123; int ret; _sx_debug(file, line, &quot;tag %d event %d data 0x%x&quot;, s-&gt;tag, e, data); s-&gt;reentry++; // Ë∞ÉÁî®c2s_router_sx_callback ret = (s-&gt;cb)(s, e, data, s-&gt;cb_arg); s-&gt;reentry--; return ret;&#125;int c2s_router_sx_callback(sx_t s, sx_event_t e, void *data, void *arg) &#123; c2s_t c2s = (c2s_t) arg; sx_buf_t buf = (sx_buf_t) data; ... switch(e) &#123; ... case event_WRITE: log_debug(ZONE, &quot;writing to %d&quot;, c2s-&gt;fd-&gt;fd); len = send(c2s-&gt;fd-&gt;fd, buf-&gt;data, buf-&gt;len, 0); if(len &gt;= 0) &#123; log_debug(ZONE, &quot;%d bytes written&quot;, len); return len; &#125; ...&#125; Ë∑üË∏™ÂÆÉ‰ª£Á†ÅÂêéÂèëÁé∞,‰∏érouterÂª∫Á´ãËøûÊé•ÂêéÊâçÂª∫Á´ãËµ∑ÁõëÂê¨ÊúçÂä°Á´Ø,ËÄå‰∏îËøò‰ºöÂÜçÁõëÂê¨‰∏Ä‰∏™FIFOÊñá‰ª∂ÁÆ°ÈÅì,‰ª£Á†ÅÂú®c2s/pbx.c Âíåc2s/pbx_commands.cÈáå, Áúã‰∏äÂéªÊòØÁî®Êù•ÊéßÂà∂jidË¥¶Êà∑ÁöÑÂ∞ètrick, ÂêåÊ†∑‰πüÊúâmioÂõûË∞É. ÊÄªÁªì, ÂõûË∞ÉÂæàÂ§ö, ÂæàÈöæ‰∏ÄÊó∂Èó¥Â∞±ÁúãÂá∫Êù•‰ΩúËÄÖÁöÑÂõûË∞ÉÂàÜÊîØÈáåÁöÑÁßçÁßçÊÑèÂõæ, ÁªßÁª≠Â≠¶‰π†.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"ÊúâÊÑü‰∫é„Ää‰ΩéÊô∫ÂïÜÁ§æ‰ºö„Äã","slug":"ÊúâÊÑü‰∫é„Ää‰ΩéÊô∫ÂïÜÁ§æ‰ºö„Äã","date":"2014-08-07T15:23:27.000Z","updated":"2022-09-15T15:51:05.353Z","comments":true,"path":"2014/08/07/ÊúâÊÑü‰∫é„Ää‰ΩéÊô∫ÂïÜÁ§æ‰ºö„Äã/","link":"","permalink":"https://unpluggedcoder.me/2014/08/07/%E6%9C%89%E6%84%9F%E4%BA%8E%E3%80%8A%E4%BD%8E%E6%99%BA%E5%95%86%E7%A4%BE%E4%BC%9A%E3%80%8B/","excerpt":"","text":"‰πãÂâç‰ªé‰∏ÄÂàôÂæÆÂçö‰∏äÁúãÂà∞‰∏ÄÊÆµËÆΩÂà∫‰∏≠ÂõΩÁ§æ‰ºöÁöÑËØùÔºåÂéüÊñáËÆ∞‰∏çÂæó‰∫ÜÔºå‰ΩÜËêΩÊ¨æÁΩ≤ÂêçÂá∫Ëá™Êó•Êú¨ÁªèÊµéÂ≠¶ÂÆ∂Â§ßÂâçÁ†î‰∏ÄÁöÑ„Ää‰ΩéÊô∫ÂïÜÁ§æ‰ºö„Äã‰∏Ä‰π¶ÔºåÈÅÇÂ∞ÜÂÖ∂ËØªÈÄöËØª‰∫Ü‰∏ÄÈÅç„ÄÇ ‰∏ç‰ªÖÊ≤°ÊúâÂú®‰π¶‰∏≠ÁúãÂà∞‰ΩúËÄÖÁõ¥Ë®ÄËÆΩÂà∫‰∏≠ÂõΩ‰πãÂ§ÑÔºåÁõ∏Âèç‰ΩúËÄÖÊä®ÂáªÁöÑÊòØÊó•Êú¨Á§æ‰ºöÔºåÂπ∂ÂØπ‰∏≠ÂõΩËøëÂπ¥Êù•ÁöÑÂèëÂ±ïË°®Á§∫‰∫Ü‰∏ÄÂÆöÁ®ãÂ∫¶‰∏äÁöÑËÇØÂÆöÔºåËÆ§‰∏∫Â¶ÇÊûúÊó•Êú¨‰∏çÈúÄÊ±ÇËΩ¨ÂèòÂøÖÁÑ∂Â∞ÜË¢´‰∏≠ÂõΩÔºåÂç∞Â∫¶Á≠âÂÖ∂‰ªñÂõΩÂÆ∂Ë∂ÖË∂ä„ÄÇÂèØËßÅÂæÆÂçöÊúâÂ§öÈªë‰∫ÜÔºåÈöè‰æøÊãø‰∏ÄÊÆµËØùÊù•Êñ≠Á´†Âèñ‰πâÔºåËØØÂØºÂ§ß‰ºó„ÄÇ‰ΩÜÊòØÂú®ÁΩëÁªú‰∏äËøòÊòØÊúâÂæàÂ§ö‰π¶ËØÑÊñáÁ´†ÂñúÊ¨¢Êää‰π¶ÈáåÊèèËø∞ÁöÑÁé∞Ë±°ÊãøÊù•Âíå‰∏≠ÂõΩÂØπÊØîÔºåÂÖ∂ÂÆûËØªËøáÊ≠§‰π¶Â∞±‰ºöÂèëÁé∞ËøôÊòØÁõ∏ÂΩìÁâáÈù¢ÁöÑÁúãÊ≥ï„ÄÇ ‰ªéÂ∞èÊó•Êú¨ÂÜôÁöÑ„ÄäDebug Hacks„ÄãÂèØ‰ª•ÁúãÂá∫Êó•Êú¨‰∫∫ÂÜô‰π¶ÁöÑ‰∏•ÂØÜÁöÑÊù°ÁêÜÂíåÈÄªËæëÊÄùÁª¥„ÄÇÊú¨‰π¶‰πü‰∏ç‰æãÂ§ñÔºå‰∏ÄÊú¨Â•Ω‰π¶ÔºåÂøÖÂÆöË¶ÅËÆ≤Ê∏ÖÊ•ö‰∏âÁÇπÔºöÊòØ‰ªÄ‰πà„ÄÅ‰∏∫‰ªÄ‰πà„ÄÅÊÄé‰πàÊ†∑Ôºå‰πüÂ∞±ÊòØWhat, Why, How„ÄÇ‰ΩúËÄÖÂ§ßÂâçÁ†î‰∏ÄËÆΩÂà∫Êó•Êú¨Â∏ÇÈù¢‰∏äÁöÑÊÑö‰∫∫‰π¶Á±çÂ§ßÂ§öÂè™ËØ¥Ââç‰∏§ÁÇπÔºåÁúüÊ≠£ÊåáÂá∫Â∞ñÈîêÁüõÁõæÁöÑÈóÆÈ¢òÊâÄÂú®Âπ∂ÊèêÂá∫Ëß£ÂÜ≥ÊñπÊ°àÁöÑ‰π¶Á±çÂØ•ÂØ•Êó†Âá†„ÄÇÊó•Êú¨ÁöÑ‰π¶Á±çÊòØ‰∏çÊòØÁúüÂ¶Ç‰ΩúËÄÖÊâÄËØ¥ÔºåÊú¨‰∫∫‰πüÊ≤°ÊúâÂéªËÄÉÁ©∂Ôºå‰ΩÜÊòØ‰ΩúËÄÖÂú®Êú¨‰π¶ÁöÑÊúÄÂêéÁöÑÁ°ÆÊèêÂá∫‰∫ÜËØ∏Â¶ÇÁ®éÂà∂ÊîπÈù©‰πãÁ±ªÁöÑÂá†Êù°Âª∫ËÆÆ„ÄÇÂÖ∂ÂÆûÔºåÂèçËßÇ‰ΩúËÄÖÂú®‰π¶‰∏≠ÁöÑËÆ∏Â§öÂú∞ÊñπÈÉΩÂº∫ÁÉàÁöÑÊä®Âáª‰∫ÜÊó•Êú¨ÊîøÂ∫úÁöÑÊó†ËÑëË°å‰∏∫ÔºåÁõ¥Ë®Ä‰∏çËÆ≥ÔºåÁõ∏ÊØî‰π¶ÁöÑÊú´Â∞æÊèêÂá∫ÁöÑÁ®éÂà∂ÊîπÈù©Âª∫ËÆÆÔºåÊàñËÆ∏‰ΩúËÄÖÊöóÁ§∫ÁúüÊ≠£ÈúÄË¶ÅÊîπÈù©ÁöÑÊòØÂâçËÄÖ„ÄÇÊâÄ‰ª•ÂÆåÂÖ®Â∞Ü‰π¶‰∏≠ÁöÑÊó•Êú¨‰∏é‰∏≠ÂõΩÂØπÊØîÊòØÊ¨†Â¶•ÁöÑÔºåÂõ†‰∏∫Âú®Ëµ∑‰∏ªÂØº‰ΩúÁî®ÁöÑÊîøÂ∫úË°å‰∏∫ÊàñËÄÖËØ¥ÊâßÊîøÂÖöÁöÑÂ§ßÂ±ÄËßÇ‰∏ä‰∏§ËÄÖÂÆåÂÖ®‰∏çÂêåÁöÑÔºå‰π¶‰∏≠ËÆ§‰∏∫Êó•Êú¨ÊîøÂ∫úÊ≠£Ë∂äÊù•Ë∂äËµ∞ÂêëÂ∞ÅÈó≠ÔºàÊàñËÆ∏ÊòØÂõ†‰∏∫Êüê‰∫õÂéüÂõ†ÔºâÔºåËÄå‰∏≠ÂõΩ‰∏çÊòØ„ÄÇ ÂâîÈô§ÊîøÊ≤ªÂõ†Á¥†„ÄÅÁ§æ‰ºöÂà∂Â∫¶ÂêéÔºåÊúÄËÉΩ‰ª£Ë°®Á§æ‰ºöÁé∞Áä∂ÁöÑ‰∏Ä‰∏™Âõ†Á¥†Â∫îËØ•Â∞±ÊòØÁæ§‰Ωì‰∫Ü„ÄÇÂÖ≥‰∫éÁæ§‰ΩìÁöÑÊèèËø∞ÔºåÊàëËßâÂæóÊ≠§‰π¶ÂÆåÂÖ®ÊòØ„Ää‰πåÂêà‰πã‰ºó„ÄãÔºà(Ê≥ï)Âè§ÊñØÂ°îÂ§´.ÂãíÂ∫ûÔºâÁöÑÁé∞ÂÆû‰æãËØÅ„ÄÇÊó•Êú¨Áæ§‰ºóÁöÑÁõ≤ÁõÆË∑üÈöèÂíå‰∏çÂÅáÊÄùÁ¥¢ÁöÑË°å‰∏∫‰∏çÊòØ‰∏ÄÂ§©‰∏§Â§©ÂΩ¢ÊàêÁöÑ„ÄÇ‰ªéË∫´ËæπÊù•ÁúãÔºåÂæàÊòéÊòæÁöÑ‰∏§ÁÇπË°®Áé∞Â∞±ÊòØÊó†ËÑëÁöÑÂ®±‰πêÁªºËâ∫ËäÇÁõÆÊ≥õÊª•ÂíåÊó•ÂíåÂºè‰Ωé‰øóÊº´ÁîªÂÖ¥Ëµ∑ÔºåÂÆåÂÖ®Êó†Ê≥ïÊÉ≥Ë±°Ëøô‰∏§ÁßçÊñáÂåñÂú®Êó•Êú¨ËøôÊ†∑‰∏Ä‰∏™ÂèëËææÂõΩÂÆ∂‰∏≠‰ºöÂ§ßÂèóÊ¨¢Ëøé„ÄÇ‰∏∫‰ªÄ‰πàËøôÁßç‰Ωé‰øóÈÄêÊ∏êÂú®‰º†Êí≠Âà∞‰∏≠ÂõΩÔºåËÄå‰∏îËøòË¢´ÂπøÂ§ßÊ∞ë‰ºóÊâÄÊ¥•Ê¥•‰πêÈÅìÔºüÁõ∏ÂèçÂú®Ê¨ßÁæéÁ≠âÂèëËææÂõΩÂÆ∂Êàë‰ª¨Âá†‰πéÁúã‰∏çÂà∞ËøôÁ±ªÊñáÂåñÁöÑË∏™ÂΩ±„ÄÇÂèñËÄå‰ª£‰πãÁöÑÊòØËÑ±Âè£ÁßÄ‰∏äÊøÄÁÉàÁöÑËæ©ËÆ∫ÂíåËÆΩÂà∫Ôºå‰ª•ÂèäÂ§ßÂèóÊ¨¢ËøéÁöÑÈ´òË¥®ÈáèÂâß‰ΩúÂíåÁ∫™ÂΩïÁâá„ÄÇÂõ†Ê≠§Â™í‰ΩìË¶ÅËÇ©Ë¥üÂæàÂ§ßÁöÑË¥£‰ªªÔºåÊó†ËÆ∫ÊòØÈò¥Ë∞ãËÆ∫ËøòÊòØÂÖ∂ÂÆÉÂéüÂõ†Ôºå‰∏ÄÁÇπÁÇπÊîπÂèòÔºàÊìçÁ∫µÔºâÁæ§‰ΩìÊô∫ÂïÜÁöÑÂêéÊûúÂøÖÂ∞ÜÁõ¥Êé•ÂΩ±ÂìçÂà∞ÂõΩÂÆ∂ÁöÑÂÖ¥Ë°∞Ôºà‰∏çÂ∏åÊúõÁúãÂà∞‰∏ã‰∏Ä‰ª£‰∫∫‰∏ÄË∞àÂà∞Ê¢¶ÊÉ≥Â∞±ÊòØÔºöÂî±Ê≠å‚Ä¶Ôºâ„ÄÇ ÂõûÂà∞Ëá™Â∑±ÁöÑË°å‰∏öÈáåÊù•ÁúãÔºåITË°å‰∏ö‰πüÊòØÂ¶ÇÊ≠§ÔºåÂ§ßÂ§öÊï∞ÁöÑÁ†ÅÂÜúÁæ§‰ΩìÂπ∂Ê≤°ÊúâÂõ†‰∏∫Ë∫´Âú®È´òÁßëÊäÄË°å‰∏öËÄåËµã‰∫àÈ´òÊô∫ÂïÜÁöÑË°®Áé∞ÔºåÈ´òÊô∫ÂïÜÁ≤æËã±Âú®ITË°å‰∏öÈáåÁöÑÊØî‰æãËøû‰∫åÂÖ´ÂéüÂàôÈÉΩË∞à‰∏ç‰∏äÔºåËÆ∞ÂæóÂΩìÂàùÊØîÂ∞îÁõñËå®ËØ¥Âè™Ë¶ÅËÆ©‰ªñÂ∏¶Ëµ∞ÂæÆËΩØÂâç20‰∏™È°∂Â∞ñ‰∫∫ÊâçÔºåÈÇ£ÂæÆËΩØÂ∞ÜÂèòÂæó‰∏çË∂≥ËΩªÈáçÔºåÂèØËßÅÁúüÊ≠£Âú®ÂàõÈÄ†Ê†∏ÂøÉÊäÄÊúØÁöÑ‰∫∫ÊàñËÆ∏Ëøû‰∏áÂàÜ‰πã‰∏ÄÈÉΩ‰∏çÂà∞„ÄÇ‰∏∫‰ªÄ‰πà‰ºöËøôÊ†∑ÔºüÂ§ßÂâçÁ†î‰∏ÄÂú®‰π¶‰∏≠ÁöÑ‰∏Ä‰∏™ËßÇÁÇπÊòØÁæ§‰ºóÁº∫‰πèËá™‰∏ªÊÄùËÄÉÁöÑË°å‰∏∫ËÉΩÂäõ„ÄÇÊ≤°ÈîôÔºåÁ≤æËã±Á†ÅÂÜúÂíåÊôÆÈÄöÁ†ÅÂÜúÊúÄÊòæËëóÁöÑÂå∫Âà´Â∞±Âú®‰∫éËá™‰∏ªÊÄùËÄÉÁöÑËÉΩÂäõÔºåÂâçËÄÖÂÖ∑ÊúâÊûÅÂº∫ÁöÑ‰∏ªËßÇÊÄùËÄÉËÉΩÂäõÔºåËøôÊâçÊòØÈ´òÊô∫ÂïÜÁöÑÂü∫Á°Ä„ÄÇÂú®‰∏≠ÂõΩÁ†ÅÂÜúÂúàÈáåÁªùÂ§ßÂ§öÊï∞Á†ÅÂÜúÊòØ‰∏∫‰∫ÜËß£ÂÜ≥Â∑•‰Ωú‰ªªÂä°ËÄåÂú®ËøõË°åÁîü‰∫ßÊ¥ªÂä®ÔºåÂíåÁ†åÁ†ñÂ∑•Ê≤°ÊúâÂ§öÂ§ßÁöÑÊú¨Ë¥®Âå∫Âà´ÔºåÁÖßÊê¨ÂõΩÂ§ñÁöÑÂ∫îÁî®Ê°ÜÊû∂ÔºåÂèÇËÄÉÊüêÊüêÂπ≥Âè∞ÂºÄÂèëAPIÔºåÁî®ÁùÄ‰∏çÊñ≠Êõ¥Êñ∞ÁöÑÈ´òÂ§ß‰∏äÊäÄÊúØ„ÄÇÂÖ∂ÂÆûÁ®çÂæÆÊÉ≥ÊÉ≥Â∞±ÂæàÂÆπÊòìÂéåÂÄ¶‰∫ÜËøôÊ†∑ÁöÑÂ∑•‰ΩúËäÇÂ•èÔºå‰∏Ä‰∏™Á†ÅÂÜú‰πü‰∏çÂèØËÉΩÂÆåÂÖ®Ë∑üÂæó‰∏äÊäÄÊúØÁöÑËø≠‰ª£Êõ¥Êñ∞ËäÇÂ•è„ÄÇË¶ÅÊÄé‰πàÂÅöÔºüÊúØ‰∏öÊúâ‰∏ìÊîªÔºåÈÄâÊã©‰∏Ä‰∏™ÊñπÂêëÔºåÊ∑±ÂÖ•ÁêÜËß£ÂÖ∂ÂÆûÁé∞ÁªÜËäÇÔºåÂ§öËØªÊ∫êÁ†ÅÔºåÂú®ËØªÊ∫êÁ†ÅÂâç‰∏ªÂä®ÊÄùËÄÉ‰∏Ä‰∏™ÈóÆÈ¢òÔºöÂ¶ÇÊûúÊòØÊàëË¶ÅËß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºåÊàë‰ºöÈááÁî®‰ªÄ‰πàÊâãÊ≥ïÔºåËÄåÂêéÂÜçÁúãÁúãÊ∫êÁ†Å‰ΩúËÄÖÊòØÂ¶Ç‰ΩïÂÆûÁé∞ÔºåÂØπÊØî‰∏çË∂≥‰∏é‰ºòÂäøÔºåËøôÊ†∑ÊâçÊúâÊî∂Ëé∑ÂíåËøõÊ≠•ÔºåÊõ¥ÈáçË¶ÅÁöÑÊòØËÆ©Ëá™Â∑±ÁöÑ‰∏ªÂä®ÊÄùËÄÉËÉΩÂäõ‰∏ÄÊ≠•Ê≠•ÈÄºËøëÈ°∂Á∫ßÊ∞¥ÂáÜÔºÅÂÆûÁé∞Êõ¥ÊúâÂàõÈÄ†ÂäõÁöÑ‰∫ßÂìÅÔºÅ ÊëÜËÑ±‰ΩéÊô∫ÂïÜÁ§æ‰ºö‰ªéËá™Ë∫´ÂÅöËµ∑„ÄÇ","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"‰ΩéÊô∫ÂïÜÁ§æ‰ºö","slug":"‰ΩéÊô∫ÂïÜÁ§æ‰ºö","permalink":"https://unpluggedcoder.me/tags/%E4%BD%8E%E6%99%BA%E5%95%86%E7%A4%BE%E4%BC%9A/"}]},{"title":"Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã(‰∏ä)","slug":"Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã(‰∏ä)","date":"2014-08-06T03:28:44.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2014/08/06/Jabberd2 ÈÄö‰ø°Ê°ÜÊû∂(mio)Ê®°Âûã(‰∏ä)/","link":"","permalink":"https://unpluggedcoder.me/2014/08/06/Jabberd2%20%E9%80%9A%E4%BF%A1%E6%A1%86%E6%9E%B6(mio)%E6%A8%A1%E5%9E%8B(%E4%B8%8A)/","excerpt":"","text":"ËøôÈÉ®ÂàÜÊòØjabberdÁöÑÊ†∏ÂøÉÈÄö‰ø°Ê°ÜÊû∂,ÊúâÁÇπÂ§çÊùÇ,ÊâÄËø∞‰πãÂ§ÑÂ¶ÇÊúâÁñèÊºèÈîôËØØ,ËøòÊúõÊåáÊ≠£. ‰ªéÊï∞ÊçÆÁªìÊûÑÂÖ•ÊâãÊúÄÂÆπÊòìÁúãÊ∏Ö‰ª£Á†Å‰ΩúËÄÖÁöÑÊÄùË∑Ø,ËøôÈáåÊúâ4‰∏™‰∏ªË¶ÅÁöÑÁªìÊûÑ‰ΩìÊù•ÊâøÊãÖI&#x2F;OÊï∞ÊçÆ,Âπ∂ÂàÜÂà´ÂàÜÂ∏ÉÂú®mio.hÂíåmio_impl.h‰∏≠.È°æÂêçÊÄù‰πâ,implÊòØI&#x2F;OÁöÑÊµÅÁ®ãÂÆûÁé∞,ÂêÑ‰∏™ÈùôÊÄÅÂáΩÊï∞ÈÉΩÁõ¥Êé•Âú®Â§¥Êñá‰ª∂‰∏≠ÂÜôÂÆå.‰ΩúËÄÖÁöÑÊÑèÂõæÂ∞±ÊòØËÆ©mio.hÁöÑÊï∞ÊçÆÂíåÂáΩÊï∞(ÂÖ∂ÂÆûËøô‰∏§‰∏™ÁªÑÂêàËµ∑Êù•Â∞±ÂíåÂØπË±°Ê≤°Â§öÂ§ßÂå∫Âà´‰∫Ü,Âõ†Ê≠§‰∏∫‰∫ÜÊñπ‰æøÁêÜËß£Á¥¢ÊÄßÂ∞±Áî®UMLÁ±ªÂõæË°®Á§∫)Êö¥Èú≤Áªôc2s,routerÂíåsmÂêÑ‰∏™Ê®°Âùó,Ëøô‰∫õÊ®°ÂùóÂØπ‰∫émioÊù•ËØ¥‰∏çÈúÄË¶ÅÂÖ≥ÂøÉÂÆûÁé∞ÁªÜËäÇ. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950typedef struct mio_fd_st&#123; int fd;&#125; *mio_fd_t;typedef struct mio_priv_fd_st&#123; struct mio_fd_st mio_fd; mio_type_t type; /* app event handler and data */ mio_handler_t app; void *arg; MIO_FD_VARS&#125; *mio_priv_fd_t;typedef struct mio_st&#123; void (*mio_free)(struct mio_st **m); struct mio_fd_st *(*mio_listen)(struct mio_st **m, int port, const char *sourceip, mio_handler_t app, void *arg); struct mio_fd_st *(*mio_connect)(struct mio_st **m, int port, const char *hostip, const char *srcip, mio_handler_t app, void *arg); struct mio_fd_st *(*mio_register)(struct mio_st **m, int fd, mio_handler_t app, void *arg); void (*mio_app)(struct mio_st **m, struct mio_fd_st *fd, mio_handler_t app, void *arg); void (*mio_close)(struct mio_st **m, struct mio_fd_st *fd); void (*mio_write)(struct mio_st **m, struct mio_fd_st *fd); void (*mio_read)(struct mio_st **m, struct mio_fd_st *fd); void (*mio_run)(struct mio_st **m, int timeout);&#125; **mio_t;/** now define our master data type */typedef struct mio_priv_st&#123; struct mio_st *mio; int maxfd; MIO_VARS&#125; *mio_priv_t; Â∏¶Êúâ_fd_ÂêçÁß∞ÁöÑÁªìÊûÑ‰Ωì‰ª£Ë°®ÊØè‰∏Ä‰∏™I&#x2F;OÂÆû‰ΩìËøûÊé•,ËÄåmio_st(ÊàñËÄÖËØ¥mio_priv_st, Manager I&#x2F;O)ÊòØÁÆ°ÁêÜÊï¥‰∏™Á®ãÂ∫èÁöÑI&#x2F;OËΩΩ‰Ωì,Âú®Á®ãÂ∫èÁªìÊùüÂâçÈÉΩÂßãÁªàÂ≠òÂú®,ÊúâÊïà.Ëøô‰∏§ËÄÖÂú®‰ª£Á†Å‰∏≠ÁöÑ‰ΩìÁé∞Âç≥ÊòØ‰∏ãÈù¢Ëøô‰∏§‰∏™ÂÆè, Âõ†Ê≠§ÊñáÁ´†‰πüÊåâÊ∫êÁ†ÅÁöÑÊèèËø∞Áî®FD Âíå MIOÊù•ÂàÜÂà´Êåá‰ª£‰∫åËÄÖ: 123/* lazy factor */#define MIO(m) ((mio_priv_t) m)#define FD(m,f) ((mio_priv_fd_t) f) MIOÂÖ∂ÂÆûÂØπmioÊ®°ÂùóÁöÑ‰ΩøÁî®ËÄÖÊù•ËØ¥ÊòØÈÄèÊòéÁöÑ,Âõ†‰∏∫mio.hÊö¥Èú≤ÁªôÂ§ñÈÉ®ÁöÑÂÆûÈôÖ‰∏äÂ∞±ÊòØFDÂíå‰∏Ä‰∏™ÂåÖÂê´Ëã•Âπ≤Êé•Âè£ÁöÑÂÆû‰æã(Âç≥MIO),‰ΩúËÄÖÂ∞ÜÂÆèÂèëÊå•Âà∞ÊûÅËá¥,ÁîöËá≥ËøûÊâÄÊúâÁöÑÊé•Âè£‰πüÂ∞ÅË£ÖÊàêÂÆè,‰∏ãÈù¢Â∞±ËØ¥ËØ¥‰ΩúËÄÖÂ¶Ç‰ΩïÂà©Áî®Ëøô‰∏§Â§ßÁªìÊûÑ‰ΩìÊù•ÂÆåÊàêÊ°ÜÊû∂ÁöÑËÄ¶Âêà‰∏éËß£ËÄ¶. Ê∫êÁ†ÅÁöÑ‰ΩúËÄÖÂà©Áî®‰∫Ü‰∏§‰∏™Â∞èÊäÄÂ∑ßÊù•ÂÆûÁé∞‰∏éÂ∫ïÂ±ÇI&#x2F;OÊ®°ÂûãÊó†ÂÖ≥ÁöÑÈÄöÁî®ÈÄö‰ø°Ê°ÜÊû∂: Âà©Áî®structÂÜÖÂ≠òÂ∏ÉÂ±ÄÊ®°ÊãüÁªßÊâøÂÖ≥Á≥ªÂàùÂßãÂåñÁöÑ_mio_newÂáΩÊï∞ÂèØ‰ª•ÁúãÂá∫‰ΩúËÄÖÊäõÂá∫ÁöÑÊòØ**mio_st,‰ΩÜÊòØÂ∫ïÂ±ÇÁöÑÂÖ∑‰ΩìÂÆûÁé∞ÈúÄË¶ÅÁî±mio_priv_stÂÆåÊàê,Âõ†Ê≠§ÂØπ‰∫é‰∏çÂêåÁöÑÂÆûÁé∞ÈúÄË¶ÅÊúâ‰∏çÂêåÁöÑÂèòÈáèÂ∏ÉÂ±ÄÂú®mio_priv_st‰∏≠. 12345678910111213141516171819202122232425262728static mio_t _mio_new(int maxfd)&#123; static struct mio_st mio_impl = &#123; _mio_free, _mio_listen, _mio_connect, _mio_setup_fd, _mio_app, _mio_close, _mio_write, _mio_read, _mio_run &#125;; mio_t m; ... /* allocate and zero out main memory */ if((m = calloc(1, sizeof(struct mio_priv_st))) == NULL) &#123; fprintf(stderr,&quot;Cannot allocate MIO memory! Exiting.\\n&quot;); exit(EXIT_FAILURE); &#125; /* set up our internal vars */ *m = &amp;amp;mio_impl; MIO(m)-&amp;gt;maxfd = maxfd; MIO_INIT_VARS(m); return m;&#125; Âà©Áî®ÂÆèÊâ©Â±ïÊäΩË±°Âá∫ÈÄöÁî®I&#x2F;OÊ®°ÂûãÈÄöËøáÂÆèÂÆö‰πâÂú®ÁºñËØëÊó∂ÊúüÁ°ÆÂÆö‰ΩøÁî®ÁöÑÂ∫ïÂ±ÇI&#x2F;OÂ§çÁî®Ê®°Âûã.‰∏çÂæó‰∏ç‰Ω©Êúç‰ΩúËÄÖËÉΩÂ∞ÜÂêÑÁßçÊ®°ÂûãÁöÑÈÄöÁî®I&#x2F;OÊèêÁÇºÂá∫Êù•,Ëøë‰πéÂÆûÁé∞‰∫Ü‰∏Ä‰∏™Â∞èÂûãÁöÑlibeventÂ∫ì.Âú®mio.c‰∏≠ÈÄöËøáÈ¢ÑÂÆö‰πâÁöÑÂÆèÊù•Á°ÆÂÆöË∞ÉÁî®Âì™ÁßçÂÆûÁé∞.ÂØπÂ∫î‰∏ä‰∏ÄÁÇπ,MIO‰∏≠ÁöÑMIO_INIT_VARSÂÆèÂ∞±ÂøÖÈ°ªÊâ©Â±ï‰∏∫ÂØπÂ∫îI&#x2F;OÁöÑÂèòÈáè,epoll‰∏≠Â∞±ÈúÄË¶ÅÂåÖÂê´epollÁöÑÊñá‰ª∂ÊèèËø∞Á¨¶Âíåepoll_eventÈõÜÂêà, ËÄåFD‰∏≠ÁöÑMIO_FD_VARSÂÆèÂàôÊâ©Â±ï‰∏∫Âú®epollÁöÑ‰∫ã‰ª∂Á±ªÂûãÊé©Á†Å.ÁÑ∂ÂêéÂú®_mio_newÁöÑÊúÄÂêé‰πüË¶ÅÊ±ÇÊâ©Â±ïI&#x2F;OÂàùÂßãÂåñÁöÑÂÆèMIO_INIT_VARS,‰ª•ÂÆåÊàêÂàùÂßãÂåñÂä®‰Ωú,‰æãÂ¶Çepoll_create.Ëøô‰∫õÂÆèÊâ©Â±ïÈÉΩÂåÖÂê´Âú®ÂØπÂ∫îÁöÑmio_***.h‰∏≠. 1234567#define MIO_FD_VARS \\ uint32_t events;#define MIO_VARS \\ int defer_free; \\ int epoll_fd; \\ struct epoll_event res_event[32]; Èô§Ê≠§‰πãÂ§ñËøòË¶ÅÊ±ÇÂÆèÂÆûÁé∞ÂØπFDÁöÑÈáäÊîæÂíåËÆæËØªÂÜô‰ΩçÁöÑ‰∏Ä‰∫õÂÖ∂ÂÆÉÊìç‰Ωú. Âà∞ÁõÆÂâç‰∏∫Ê≠¢ËßâÂæómioÊ®°ÂùóËøòÊòØÂæàÊ∏ÖÊô∞ÊòéÊúóÁöÑ,ÂØπÂ∫ïÂ±ÇÂíåÂ§ñÈÉ®ÁöÑËß£ËÄ¶ÂÅöÂæóÂæàÂ•Ω.‰ΩÜÊòØ‰∏™‰∫∫ÊÑüËßâÂÆûÈôÖÊìç‰ΩúËµ∑Êù•Âç¥ÂíåÂè¶‰∏Ä‰∏™XMPPÂçèËÆÆÁõ∏ÂÖ≥Ê®°Âùó(sx)ÁöÑ‰∫§‰∫íÂæàÁπÅÁêê(ÁΩë‰∏äËØÑËÆ∫ËØ¥jabberd2ÁöÑÊâ©Â±ïÊÄßÂ∑ÆÊòØ‰∏çÊòØÂ∞±Âú®ËøôÈáå?). mioÁöÑÊï∞ÊçÆÁªìÊûÑÂ∞±ÊòØËøô‰πàÂ§ö,ÂÖ∂ËøêË°åÊú∫Âà∂‰∏ãÁØáÂÜçÁªßÁª≠post.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"Jabberd2 ÂÆâË£ÖÈÖçÁΩÆÂèäË∞ÉËØï","slug":"Jabberd2 ÂÆâË£ÖÈÖçÁΩÆÂèäË∞ÉËØï","date":"2014-08-05T09:33:30.000Z","updated":"2022-09-15T15:51:05.345Z","comments":true,"path":"2014/08/05/Jabberd2 ÂÆâË£ÖÈÖçÁΩÆÂèäË∞ÉËØï/","link":"","permalink":"https://unpluggedcoder.me/2014/08/05/Jabberd2%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%8F%8A%E8%B0%83%E8%AF%95/","excerpt":"","text":"‰ªéÂÆòÁΩë‰∏ä‰∏ãËΩΩÊ∫êÁ†ÅÂêéËß£Âéã, Ê≠£Â∏∏ÂÆâË£Ö‰æùÊ¨°ËæìÂÖ•‰ª•‰∏ãÂëΩ‰ª§Â∞±OK: 123456789101112$ ./configure --prefix=/path/to/prefix$ make; make install``Áº∫Â∞ë‰ªÄ‰πàÂ∫ìÂ∞±‰æùÊ¨°ÂÆâË£Ö,Âç∞Ë±°‰∏≠ÊòØÈúÄË¶Ålibz, pcre, sasl Âíå sslÂ∫ì.Â¶ÇÊûú‰Ωú‰∏∫‰∫åÊ¨°ÂºÄÂèëÈúÄË¶ÅÂºÄÂêØË∞ÉËØïÂäüËÉΩÂ∞±ÈúÄË¶ÅÂú®ÁºñËØëÊó∂ÊúüÊåáÂÆö‰∫õÂèÇÊï∞:```bash$ export CFLAGS+=&quot;-g -O0 -Wall&quot; // ÈªòËÆ§Â∫îËØ•ÊòØ-O2, ‰ΩÜÊòØ‰ºòÂåñËøáÂêéÂæà‰∏çÊñπ‰æøË∞ÉËØï, ÊâÄ‰ª•ÂÖ≥Èó≠‰ºòÂåñ$ ./configure --prefix=/usr/local --enable-mio=epoll --enable-debug --enable-mio-debug$ make; make install ‚Äìenable-mioÂèÇÊï∞ÊåáÂÆö‰ΩøÁî®ÁöÑI&#x2F;OÂ§çÁî®Ê®°Âûã. ‚Äìenable-debugÂèÇÊï∞ÂºÄÂêØË∞ÉËØï,ÂêØÁî®Ëøô‰∏™ÂèÇÊï∞ÂêéËøòÈúÄË¶Å‰øÆÊîπÂØπÂ∫îÁöÑxmlÈÖçÁΩÆÊñá‰ª∂,ÂºÄÂêØXMLÁöÑlog.debug‰ΩçÁΩÆÊù•ÊåáÂÆöË∞ÉËØï‰ø°ÊÅØËæìÂá∫,‰ª•‰∏ãÊòØÊàëÁöÑÈÖçÁΩÆ 1234567891011121314151617&lt;!-- Log configuration - type is &quot;syslog&quot;, &quot;file&quot; or &quot;stdout&quot; --&gt;&lt;log type=&#x27;file&#x27;&gt;&lt;!-- If logging to syslog, this is the log ident --&gt;&lt;ident&gt;jabberd/c2s&lt;/ident&gt;&lt;!-- If logging to syslog, this is the log facility(local0 - local7) [default: local3] --&gt;&lt;facility&gt;local3&lt;/facility&gt;&lt;!-- If logging to file, this is the filename of the logfile --&gt;&lt;file&gt;/usr/local/var/jabberd/log/c2s.log&lt;/file&gt;&lt;!-- Filename of the debug logfile --&gt;&lt;debug&gt;/usr/local/var/jabberd/log/debug-$&#123;id&#125;.log&lt;/debug&gt;&lt;/log&gt; ‚Äìenable-mio-debugÂèÇÊï∞ÂºÄÂêØmioË∞ÉËØï,mio‰ø°ÊÅØ‰ºöËæìÂá∫Âà∞stderr ÁõÆÂâçÈúÄË¶ÅÁöÑÂ∞±ÊòØËøô‰πàÂ§ö. Â¶ÇÊûúÊòØÁõ¥Êé•Áî®Netbeans IDEËΩΩÂÖ•Ê∫êÁ†ÅÂú®ËøúÁ®ã‰∏ªÊú∫‰∏äÁºñËØëÁöÑËØù‰ºöÂ§±Ë¥•, Âª∫ËÆÆÈÄöËøáÊñá‰ª∂ÂÖ±‰∫´ÊàñËÄÖÊòØÂ∞ÜÊï¥‰∏™Ê∫êÁ†ÅËß£ÂéãÂà∞NetbeansÂú®ËøúÁ®ãÊú∫Âô®ÁöÑÂØπÂ∫îÁõÆÂΩï‰∏ãË¶ÜÁõñ,ÁÑ∂Âêéconfigure‰∏ã,ËøôÊ†∑NetbeansÂ∞±ÂèØ‰ª•ÁºñËØë‰∫Ü,ËÄå‰∏îÂèØ‰ª•ËøúÁ®ãÊü•Áúã‰ª£Á†ÅÂπ∂Ë∞ÉËØï. Ë∞ÉËØïÂâçÈúÄË¶ÅÈÖçÁΩÆJabberd2ÁöÑÊúçÂä°Âô®ËÆæÁΩÆ,ÂÖ∑‰ΩìÂ¶Ç‰ΩïÈÖçÁΩÆÂÆòÁΩë‰∏äÊúâÂæàËØ¶ÁªÜÁöÑËØ¥Êòé,ËøôÈáåÁªôÂá∫ÈìæÊé•,Â∞±‰∏çÂ§öÂ∫üËØù‰∫Ü. Jabberd2ÂÆâË£ÖÈÖçÁΩÆ(‰∏≠Êñá) Jabberd2ÂÆâË£ÖÈÖçÁΩÆ(Ëã±Êñá) Ë∞ÉËØï Êó¢ÁÑ∂NetbeansÂèØ‰ª•ËÉú‰ªªË∞ÉËØï,ÂΩìÁÑ∂Â∞±‰∏ç‰ºöÊâãÂä®ÂéªÁî®GDB‰∫Ü. ÁºñËØëÂÆåÊàêÂêéÂèØ‰ª•Áõ¥Êé•Áî®make install,‰πüÂèØ‰ª•ÂçïÁã¨Â∞ÜË¶ÅË∞ÉËØïÁöÑÂèØÊâßË°åÊñá‰ª∂ÊõøÊç¢Âà∞ÂØπÂ∫îÁöÑÂÆâË£ÖÁõÆÂΩï‰∏ã. Áî®‰∏ãÈù¢ÁöÑÂëΩ‰ª§ÂêØÂä®jabberd2ÊúçÂä°Âô®. $ jabberd ‚ÄìD ‚ÄìB &amp; ÂÆûÈôÖ‰∏äËøôÊòØ‰∏™perlËÑöÊú¨,‰∏çËøáÊàë‰ª¨ÂÖ≥ÂøÉÁöÑÊòØÂêØÂä®ÁöÑËøõÁ®ã,ËÑöÊú¨ÈáåÂêØÂä®‰∫Ürouter,sm,c2sÂíås2sÂõõ‰∏™ËøõÁ®ã.Âú®NetbeansËèúÂçïÈÄâÊã©‚ÄùË∞ÉËØï‚Äù-‚ÄúËøûÊé•Ë∞ÉËØïÂô®‚Äù, Âú®ËøûÊé•ÂØπËØùÊ°ÜÈáåÈÄâÊã©ËøúÁ®ã‰∏ªÊú∫. ‰ª•c2sËøõÁ®ã‰∏∫‰æã,Âú®ËøáÊª§Âô®ÈáåËæìÂÖ•c2sÂ∞±ÂèØ‰ª•ÁúãÂà∞ÂÆÉÁöÑËøõÁ®ã, ÂÆÉÁöÑÂÆûÈôÖÊâßË°åÂèÇÊï∞ÊòØ: $ &#x2F;usr&#x2F;local&#x2F;bin&#x2F;c2s -c &#x2F;usr&#x2F;local&#x2F;etc&#x2F;c2s.xml ‚ÄìD ÊúÄÂêéË¶ÅËÆ∞ÂæóÂú®‚ÄùÈ°πÁõÆ‚Äù‰∏ÄÊ†èÊåáÂÆö‰Ω†ÁöÑÊ∫êÁ†ÅÈ°πÁõÆ. Á°ÆÂÆöÂêéÂ∞±ÂèØ‰ª•ÂºÄÂßãË∞ÉËØï. ÂØπ‰∫éËøôÁ±ªÊúçÂä°Á´ØÁ®ãÂ∫èÂ¶ÇÊûúË¶ÅË∞ÉËØïÂÖ•Âè£Â§ÑÂàùÂßãÂåñ‰πãÁ±ªÁöÑÂáΩÊï∞,Â∞±Âú®mainÂáΩÊï∞ÈáåÂÜô‰∏™sleep,sleepÂçÅÂá†Áßí,Â•ΩËÆ©‰Ω†ÊúâÊó∂Èó¥Áî®Netbeans attachÂà∞ËøõÁ®ã‰∏ä. ÂàõÂª∫Áî®Êà∑ ÂàõÂª∫Áî®Êà∑ÂèØ‰ª•ÈÄöËøá‰∏Ä‰∫õXMPPÂÆ¢Êà∑Á´ØÊù•ÂÆûÁé∞,‰πüÂèØ‰ª•Áî®telnetÂëΩ‰ª§: telnet your.server.domain 5222 ÁÑ∂ÂêéËæìÂÖ•: 123456789101112131415&lt;stream:stream to=&#x27;**your.server.domain**&#x27; xmlns=&#x27;jabber:client&#x27; xmlns:stream=&#x27;https://etherx.jabber.org/streams&#x27;&gt;&lt;iq id=&#x27;reg1&#x27; type=&#x27;set&#x27;&gt; &lt;query xmlns=&#x27;jabber:iq:register&#x27;&gt; &lt;username&gt;**admin**&lt;/username&gt; &lt;password&gt;**123qwe**&lt;/password&gt; &lt;name&gt;**admin**&lt;/name&gt; &lt;email&gt;&lt;/email&gt; &lt;/query&gt;&lt;/iq&gt;&lt;/stream:stream&gt; ËøôÊ†∑Â∞±Êê≠Âª∫Â•Ω‰∫ÜJabberd2ÁöÑÂºÄÂèëÁéØÂ¢É.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"Èù¢ÂêëÂØπË±°‰πãÊÉë‚Äî‚ÄîÁºñÁ®ãÊùÇË∞à","slug":"Èù¢ÂêëÂØπË±°‰πãÊÉë‚Äî‚ÄîÁºñÁ®ãÊùÇË∞à","date":"2014-07-28T12:39:38.000Z","updated":"2022-09-15T15:51:05.354Z","comments":true,"path":"2014/07/28/Èù¢ÂêëÂØπË±°‰πãÊÉë‚Äî‚ÄîÁºñÁ®ãÊùÇË∞à/","link":"","permalink":"https://unpluggedcoder.me/2014/07/28/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B9%8B%E6%83%91%E2%80%94%E2%80%94%E7%BC%96%E7%A8%8B%E6%9D%82%E8%B0%88/","excerpt":"","text":"ÊúÄËøëÂá†‰∏™ÊúàÁúã‰∫Ü‰∏çÂ∞ëÊ∫êÁ†ÅÔºå‰Ωú‰∏∫‰∏ÄÁõ¥‰∏ªË¶Å‰ΩøÁî®C++ÁöÑ‰∫å‰ª£Á®ãÂ∫èÁåøÔºåÂú®Èù¢ÂêëÂØπË±°ÔºàOOPÔºâÁöÑËØ≠Ë®ÄÂ±ÇÈù¢‰∏äÊÑüËßâÂà∞‰∫Ü‰∏Ä‰∫õÂõ∞ÊÉë„ÄÇ ÊàëÊâÄÁúãÁöÑLinux‰∏äÁöÑÂá†‰∏™‰ºòÁßÄÂºÄÊ∫êÈ°πÁõÆ‰ª£Á†ÅÂá†‰πéÈÉΩÊòØCËØ≠Ë®ÄÂÜôÊàêÔºåÊâçÁü•ÈÅìÂéüÊù•Âπ∂‰∏çÊòØ‰ªª‰ΩïÊìç‰ΩúÈÉΩÈúÄË¶ÅÁî±‰∏Ä‰∏™ÂØπË±°ÂÆåÊàê„ÄÇÊ≤°ÊúâÊ®°ÊùøÔºåÊ≤°ÊúâÁªßÊâøÔºåÂèñËÄå‰ª£‰πãÁöÑÊòØÁü≠Â∞èÁ≤æÊÇçÁöÑÂáΩÊï∞ÂºèRoutineÔºåÁªìÊûÑ‰ΩìÂä†‰∏äËøô‰∫õÂáΩÊï∞‰πüÂèØ‰ª•Âæà‰ºòÈõÖÂú∞ÂÆåÊàêËÆ∏Â§öÂäüËÉΩ„ÄÇ‰∏ÄÁßçÂäüËÉΩÂú®‰∏çÂêåÂºÄÊ∫êÈ°πÁõÆ‰∏≠ÈÉΩÊúâÂêÑËá™ÁöÑÂÆûÁé∞ÔºåÊàñËÆ∏ÊúÄÂêàÈÄÇËá™Ë∫´È°πÁõÆÁöÑÂÆûÁé∞ÊâçÊòØÊúÄÂ•ΩÁöÑÂäüËÉΩÂÆûÁé∞„ÄÇÈô§‰∫ÜÊÄßËÉΩ‰∏äÁöÑËÄÉËôëÔºåÊàëÂè™ËÉΩÊÉ≥Âà∞ËøôÁßçËß£Èáä‰∫Ü„ÄÇ ‰∏∫‰ªÄ‰πà‰∏çÁî®C++Ôºå‰∏çÁî®OOPÔºü ÂèØËÉΩËøô‰∏™ÈóÆÈ¢ò‰∏çÂáÜÁ°ÆÔºåÁªìÊûÑ‰ΩìÁöÑÂÆû‰æã‰πüÂèØ‰ª•Áß∞‰πã‰∏∫‚ÄúÂØπË±°‚ÄùÔºå‰∏çËøáÊàëÁöÑÊÑèÊÄùÊòØ‰∏∫‰ªÄ‰πà‰∏çÁî®OOPÁöÑ‰∏Ä‰∫õÊÄùÊÉ≥ÔºüÊØîÂ¶ÇÂ§öÊÄÅÔºåÊ≥õÂûã„ÄÇÂèØËÉΩÊúâ‰∏ÄÁßçÁ≠îÊ°àÊòØÔºö‚ÄúLinuxÊ†πÊú¨‰∏çÈúÄË¶ÅOOP‚Äù„ÄÇÊàñËÆ∏ÊòØÂõ†‰∏∫ÂèóÂà∞Scott MeyersÁöÑÂΩ±ÂìçÔºåÂú®ËÄÉËôë‰∏Ä‰∏™ÈóÆÈ¢òÊó∂ÔºåÊàëÊÄª‰ºöÁ¨¨‰∏Ä‰∏™ÊÉ≥Âà∞ÊòØ‰ªÄ‰πàÔºåÂÆåÊàê‰ªÄ‰πàÂäüËÉΩÔºåÊúÄÂÆπÊòìÈòÖËØªÂíåÁÆÄÁªÉÁöÑË°®ËææÂ∫îËØ•ÊòØÊÄéÊ†∑ÔºüÁÑ∂ÂêéÂÜçÂèçËøáÊù•ÊÉ≥Â¶Ç‰ΩïÁî®C++ÁöÑÂêÑÁßçÁâπÊÄß‰ºòÈõÖÂú∞ÂÆûÁé∞ÂÆÉ„ÄÇ ÊØîÂ¶ÇÔºå‰∏Ä‰∏™ÁÆÄÂçïÁöÑTCPServerÔºåÊàëÂè™ÊÉ≥Ë¶ÅÔºö 12TCPServer server;server.start(); ÂΩìÁÑ∂ÔºåËøòË¶ÅÊúâC++Á®ãÂ∫èÁåøÈÉΩÂøÖÈ°ªËÄÉËôëÁöÑÈóÆÈ¢òÔºåÂÆûÈôÖ‰ª£Á†ÅÂèØËÉΩÊòØËøôÊ†∑Ôºö 12345678910111213141516try&#123; shared_ptr&lt;Poco::Net::TCPServer&gt;; server; server= shared_ptr&lt;Poco::Net::TCPServer&gt;( new TCPServer(‚Ä¶) ); server-&gt;start();&#125;catch(Poco::Exception &amp;amp; ex)&#123; ‚Ä¶&#125;catch(‚Ä¶)&#123; ‚Ä¶&#125; ËøôÊ†∑‰∏ç‰πüÊòØÂæàÂÆπÊòìÁêÜËß£‰πàÔºü‰ΩÜÊòØÂ¶ÇÊûúÁî®CÊù•Ë°®ËææÔºåÂèØËÉΩÂ∞±ÂÆåÂÖ®ÊòØÁõ∏ÂèçÁöÑÊÄùÁª¥ËøáÁ®ã‰∫Ü„ÄÇ Èù¢ÂêëËøáÁ®ãÁöÑÁºñÁ®ãÈ£éÊ†ºË¶ÅÊ±Ç‰Ω†Ë¶Å‰∏ÄÊ≠•Ê≠•Êää‰∏ÄÂ§ßÂ†ÜÊâéÂ†ÜÂºèÁöÑ‰ª£Á†ÅÊëÜ‰∏äÂè∞Èù¢ÔºåÂàùÂßãÂåñÂ•óÊé•Â≠óÔºåÁªëÂÆöÁ´ØÂè£ÔºåÁõëÂê¨ÔºåÂæ™ÁéØ‚Ä¶‚Ä¶ÔºåÁªô‰∫∫ÁöÑÊÑüËßâÂ¶ÇÊûúË¶ÅÂÆûÁé∞ÊüêÊ†∑ÂäüËÉΩÔºåÂ∞±ÂøÖÈ°ªÊåâÁÖßËøô‰∏™Â•óË∑ØÂá∫ÁâåÔºåÁ®ãÂ∫èÁªìÊûÑ‰∏äÊ≤°ÊúâÂ§™Â§öÁæéÊÑüÔºåÊàëÊòØËøô‰πàËÆ§‰∏∫ÁöÑ„ÄÇÂõ†‰∏∫ÊàëËßâÂæóC‰ª£Á†ÅÁöÑÂèØÈòÖËØªÊÄßËøú‰∏çÂ¶ÇC++ÔºåËÄåC++‰ª£Á†ÅÁöÑÂèØÈòÖËØªÊÄßÂèàËøú‰∏çÂ¶ÇÈÇ£‰∫õÂä®ÊÄÅËØ≠Ë®Ä„ÄÇÊúâÊúãÂèãËØ¥C++ËøôÈó®ËØ≠Ë®ÄÁî®ÁöÑ‰∫∫‰ºöÂæÄÁ≤æËã±ÂåñÊñπÂêëÂèëÂ±ïÔºåÁöÑÁ°ÆÔºå‰∏çËøáËøòÊúâ‰∏ÄÁßçÂèØËÉΩÊÄßÊòØÈÄâÊã©ÂêëÊñ∞ÁöÑÊäÄÊúØÔºàËØ≠Ë®ÄÔºâÈù†Êã¢„ÄÇ „ÄäÈªëÂÆ¢‰∏éÁîªÂÆ∂„Äã‰∏≠ËÆ§‰∏∫ÁºñÁ®ãËØ≠Ë®ÄÁöÑÂèëÂ±ïËøáÁ®ãÊòØËøôÊ†∑ÁöÑÔºåÂèØÈòÖËØªÊÄßË∂äÊù•Ë∂äÈ´òÔºåË∂äÊù•Ë∂äËÉΩË¢´ÊôÆÈÄö‰∫∫ÁêÜËß£„ÄÇÊàë‰πüËµûÂêåËøôÊ†∑ÁöÑÊÉ≥Ê≥ï„ÄÇËøôËøõÂåñÁöÑËÉåÂêéÊòØÊÄùÊÉ≥Âú®ËøõË°åÊÄéÊ†∑ÁöÑÂèòÂåñÔºüÊàë‰∏çÊéíÊñ•ËøôÊ†∑ÁöÑËøõÂåñÔºåÂõ†‰∏∫ÊàëÁü•ÈÅìËá™Ë∫´Â§ÑÂú®ËøôÊ†∑ÁöÑÂ§ßÊäÄÊúØÈù©ÂëΩÊµ™ÊΩÆ‰∏≠Ôºå‰ªª‰ΩïÊó∂ÂÄôÈÉΩË¶ÅÂáÜÂ§áÂ•ΩÊé•Ëß¶Êñ∞‰∫ãÁâ©Ôºå‰ΩÜÊòØÊàëËÆ§‰∏∫ÂæàÈáçË¶ÅÁöÑ‰∏ÄÁÇπÊòØË¶ÅÊòéÁôΩÊäÄÊúØÁöÑÂéÜÂè≤ÔºåÂéªÁêÜËß£‰∏∫‰ªÄ‰πàË¶ÅËøôÊ†∑ËøõÂåñ,ËøõÂåñÁöÑ‰∏ªÂπ≤ÁâàÊú¨Âú®Âì™Èáå„ÄÇ ÂóØÔºåÂêêÊßΩÂ∞±Ëøô‰∫õ~ PS.Êúâ‰∏ÄÁÇπÊàëÂèØ‰ª•ÈùûÂ∏∏ËÇØÂÆöÁöÑÊòØÔºöÁºñÁ®ãËØ≠Ë®ÄÊÄªÊòØÁ®ãÂ∫èÂëò‰ª¨ÁÉ≠Áà±ËÆ®ËÆ∫ÁöÑÈóÆÈ¢ò„ÄÇ","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"Unix/Linux","slug":"Unix-Linux","permalink":"https://unpluggedcoder.me/tags/Unix-Linux/"}]},{"title":"Jabberd 2 ÂìàÂ∏åË°®ËÆæËÆ°(xhashÊ∫êÁ†Å)","slug":"Jabberd 2 ÂìàÂ∏åË°®ËÆæËÆ°(xhashÊ∫êÁ†Å)","date":"2014-07-25T09:09:15.000Z","updated":"2022-09-15T15:51:05.344Z","comments":true,"path":"2014/07/25/Jabberd 2 ÂìàÂ∏åË°®ËÆæËÆ°(xhashÊ∫êÁ†Å)/","link":"","permalink":"https://unpluggedcoder.me/2014/07/25/Jabberd%202%20%E5%93%88%E5%B8%8C%E8%A1%A8%E8%AE%BE%E8%AE%A1(xhash%E6%BA%90%E7%A0%81)/","excerpt":"","text":"Ê†πÊçÆAndrew Binstock, ‚ÄúHashing Rehashed,‚Äù Dr. Dobb‚Äôs Journal, April 1996. Ëøô‰ΩçËÆ∫ÊñáÁöÑÁÆóÊ≥ïÁîüÊàê‰∏Ä‰∏™ÂìàÂ∏åÂÄº, ‰ª•ËØ•ÂÄºÊù•Á¥¢ÂºïÂÖ∂Âú®‰∏Ä‰∏™Âõ∫ÂÆöÈïøÂ∫¶ÁöÑÂìàÂ∏åË°®‰∏≠ÁöÑ‰ΩçÁΩÆ.Âõ†‰∏∫ÊòØÂÆöÈïøÂπ∂‰∏îÈááÁî®ÈìæÂú∞ÂùÄÊ≥ïÂ§ÑÁêÜÊï£ÂàóÂÜ≤Á™Å, ÊâÄ‰ª•ÂÆÉÁöÑÂìàÂ∏åË°®Áî®Êï∞ÁªÑÁöÑÂΩ¢ÂºèË°®Á§∫(zen[‚Ä¶]), ÊØè‰∏™Êï∞ÁªÑÂÖÉÁ¥†ÂàÜÂà´‰ª£Ë°®‰∏Ä‰∏™ÂìàÂ∏åÊ°∂ÁöÑheadËäÇÁÇπ(Êï¥‰∏™Ê°∂ÊòØÁî±_xhnËäÇÁÇπÁªÑÊàêÁöÑÂèåÂêëÈìæË°®ÊûÑÊàê). ‰∏ªË¶ÅÁöÑ‰∏§‰∏™ÁªìÊûÑ‰Ωì: 123456789101112131415161718192021typedef struct xhn_struct&#123; struct xhn_struct *next; struct xhn_struct *prev; const char *key; int keylen; void *val;&#125; *xhn, _xhn;typedef struct xht_struct&#123; pool_t p; int prime; int dirty; int count; struct xhn_struct *zen; struct xhn_struct *free_list; // list of zaped elements to be reused. int iter_bucket; xhn iter_node; int *stat;&#125; *xht, _xht; Âá†‰∏™‰∏ªË¶ÅÁöÑÂáΩÊï∞: 123456789101112131415161718static int _xhasher(const char *s, int len) // ÁîüÊàêhashÂÄº&#123; /* ELF hash uses unsigned chars and unsigned arithmetic for portability */ const unsigned char *name = (const unsigned char *)s; unsigned long h = 0, g; int i; for(i=0;i&lt;len;i++) &#123; /* do some fancy bitwanking on the string */ h = (h &lt;&lt; 4) + (unsigned long)(name[i]); if ((g = (h &amp; 0xF0000000UL))!=0) h ^= (g &gt;&gt; 24); h &amp;= ~g; &#125; return (int)h;&#125; static xhn _xhash_node_new(xht h, int index); Ëøô‰∏™ÂáΩÊï∞ËøîÂõûÂú®indexÊåáÂÆöÁöÑÊ°∂‰∏≠Ë¶ÅÈôÑÂä†‰∏Ä‰∏™ËäÇÁÇπÁöÑÁ°ÆÂàá‰ΩçÁΩÆ.Â¶ÇÊûú‰Ωç‰∫ézenÊï∞ÁªÑÁöÑÊ°∂ÁöÑÈ¶ñËäÇÁÇπ‰∏∫Á©∫,ÂàôÁõ¥Êé•ËøîÂõûzen[index% h-&gt;prime];Âê¶Âàô‰ªéfree_list‰∏≠ÁúãÊúâÊ≤°ÊúâË¢´Âà†Èô§ËøáÁöÑÂèØÁî®ËäÇÁÇπ.ÊúâÂàôÁõ¥Êé•ÂèñÂá∫ÊîπÁÇπ,Âê¶Âàô‰ªéÂÜÖÂ≠òÊ±†ÈáåÂàÜÈÖç‰∏Ä‰∏™.ÁÑ∂ÂêéÂ∞ÜËØ•ËäÇÁÇπÊîæÂú®Ê°∂ÁöÑÈ¶ñËäÇÁÇπÂêéÈù¢.‰ª£Á†ÅÊ≥®Èáä‰∏äÊúâËØØ,ËØ¥ÊòØÊ°∂ÁöÑÈ¶ñËäÇÁÇπ. 12345678910111213141516171819202122232425262728293031323334static xhn _xhash_node_new(xht h, int index)&#123; xhn n; int i = index % h-&gt;prime; /* track total */ h-&gt;count++;#ifdef XHASH_DEBUG h-&gt;stat[i]++;#endif // if the zen[i] is empty, reuse it, else get a new one. n = &amp;h-&gt;zen[i]; if( n-&gt;key != NULL ) &#123; if( h-&gt;free_list ) &#123; n = h-&gt;free_list; h-&gt;free_list = h-&gt;free_list-&gt;next; &#125;else n = pmalloco(h-&gt;p, sizeof(_xhn)); //add it to the bucket list head. n-&gt;prev = &amp;h-&gt;zen[i]; n-&gt;next = h-&gt;zen[i].next; if( n-&gt;next ) n-&gt;next-&gt;prev = n; h-&gt;zen[i].next = n; &#125; return n;&#125; static xhn _xhash_node_get(xht h, const char *key, int len, int index); ËøîÂõû‰∏Ä‰∏™ÂÆåÂÖ®ÂêªÂêàÁöÑÂìàÂ∏åËäÇÁÇπ. 123456789static xhn _xhash_node_get(xht h, const char *key, int len, int index)&#123; xhn n; int i = index % h-&gt;prime; for(n = &amp;h-&gt;zen[i]; n != NULL; n = n-&gt;next) if(n-&gt;key != NULL &amp;&amp; (n-&gt;keylen==len) &amp;&amp; (strncmp(key, n-&gt;key, len) == 0)) return n; return NULL;&#125; xht xhash_new(int prime); Êñ∞Âª∫‰∏Ä‰∏™È¢ÑËÆæÈïøÂ∫¶ÂìàÂ∏åË°®ÁªìÊûÑ(_xht),‰∏ªË¶ÅÁöÑÂàõÂª∫ÂáΩÊï∞. ÂÖàÂàõÂª∫ÂÜÖÂ≠òÊ±†, Áî±ËØ•ÂÜÖÂ≠òÊ±†ÁÆ°ÁêÜÊï¥‰∏™ÂìàÂ∏åÂØπË±°. 1234567891011121314151617181920212223242526272829303132xht xhash_new(int prime)&#123; xht xnew; pool_t p;/* log_debug(ZONE,&quot;creating new hash table of size %d&quot;,prime); */ /** * NOTE: * all xhash&#x27;s memory should be allocated from the pool by using pmalloco()/pmallocx(), * so that the xhash_free() can just call pool_free() simply. */ p = pool_heap(sizeof(_xhn)*prime + sizeof(_xht)); xnew = pmalloco(p, sizeof(_xht)); xnew-&gt;prime = prime; xnew-&gt;p = p; xnew-&gt;zen = pmalloco(p, sizeof(_xhn)*prime); /* array of xhn size of prime */ xnew-&gt;free_list = NULL; xnew-&gt;iter_bucket = -1; xnew-&gt;iter_node = NULL;#ifdef XHASH_DEBUG xnew-&gt;stat = pmalloco(p, sizeof(int)*prime );#else xnew-&gt;stat = NULL;#endif return xnew;&#125; void xhash_put(xht h, const char *key, void *val);void xhash_putx(xht h, const char *key, int len, void *val); Ê†πÊçÆÂÖ≥ÈîÆÂ≠ókeyÁöÑhashÂÄºÊèíÂÖ•‰∏Ä‰∏™ËäÇÁÇπ.Â¶ÇÊûúkeyÂ∑≤Â≠òÂú®ÂàôÁõ¥Êé•Â§çÂÜô. Â¶ÇÊûú‰∏çÂ≠òÂú®ÂàôÁî®‰∏äÈù¢ÁöÑ**_xhash_node_new**ËøîÂõûËäÇÁÇπ‰ΩçÁΩÆÂêéÂÜôÂÖ•. 1234567891011121314151617181920212223242526272829303132333435363738void xhash_putx(xht h, const char *key, int len, void *val)&#123; int index; xhn n; if(h == NULL || key == NULL) return; index = _xhasher(key,len); /* dirty the xht */ h-&gt;dirty++; /* if existing key, replace it */ if((n = _xhash_node_get(h, key, len, index)) != NULL) &#123;/* log_debug(ZONE,&quot;replacing %s with new val %X&quot;,key,val); */ n-&gt;key = key; n-&gt;keylen = len; n-&gt;val = val; return; &#125;/* log_debug(ZONE,&quot;saving %s val %X&quot;,key,val); */ /* new node */ n = _xhash_node_new(h, index); n-&gt;key = key; n-&gt;keylen = len; n-&gt;val = val;&#125;void xhash_put(xht h, const char *key, void *val)&#123; if(h == NULL || key == NULL) return; xhash_putx(h,key,strlen(key),val);&#125; void xhash_zap_inner( xht h, xhn n, int index); ÂâîÈô§‰∏Ä‰∏™ËäÇÁÇπ. Â¶ÇÊûúËäÇÁÇπ‰Ωç‰∫ézenÊï∞ÁªÑÁöÑÊ°∂È¶ñËäÇÁÇπÊàñËÄÖÊòØÂΩìÂâçËø≠‰ª£‰ΩçÁΩÆËäÇÁÇπÂàôÁõ¥Êé•ÂÜôNULLÊù•‰ª£Ë°®Âà†Èô§, Âê¶ÂàôÂä†ÂÖ•free_listÁöÑÂ§¥ÈÉ®, Ê°∂È¶ñËäÇÁÇπ‰∏çËÉΩÂä†ÂÖ•free_list. ÁúãÂá∫Âú®ËøôÁÇπÂà†Èô§‰∏äÊòØÂèØ‰ª•Âø´ÈÄüÂà†Èô§ÁöÑ, ËÄå‰∏î, Á¨¨‰∏ÄÊ¨°ÊèíÂÖ•‰πü‰∏çÈúÄË¶ÅÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠ò, ÈùûÂ∏∏È´òÊïà. 12345678910111213141516171819202122232425262728void xhash_zap_inner( xht h, xhn n, int index)&#123; int i = index % h-&gt;prime; // if element:n is in bucket list and it&#x27;s not the current iter if( &amp;h-&gt;zen[i] != n &amp;&amp; h-&gt;iter_node != n ) &#123; if(n-&gt;prev) n-&gt;prev-&gt;next = n-&gt;next; if(n-&gt;next) n-&gt;next-&gt;prev = n-&gt;prev; // add it to the free_list head. n-&gt;prev = NULL; n-&gt;next = h-&gt;free_list; h-&gt;free_list = n; &#125; //empty the value. n-&gt;key = NULL; n-&gt;val = NULL; /* dirty the xht and track the total */ h-&gt;dirty++; h-&gt;count--;#ifdef XHASH_DEBUG h-&gt;stat[i]--;#endif&#125; void xhash_walk(xht h, xhash_walker w, void *arg); ÈÅçÂéÜÊâÄÊúâÊ°∂ÁöÑÊâÄÊúâËäÇÁÇπ,Âπ∂Ë∞ÉÁî®ÂõûË∞ÉÂáΩÊï∞. 123456789101112131415void xhash_walk(xht h, xhash_walker w, void *arg)&#123; int i; xhn n; if(h == NULL || w == NULL) return;/* log_debug(ZONE,&quot;walking %X&quot;,h); */ for(i = 0; i &lt; h-&gt;prime; i++) for(n = &amp;h-&gt;zen[i]; n != NULL; n = n-&gt;next) if(n-&gt;key != NULL &amp;&amp; n-&gt;val != NULL) (*w)(n-&gt;key, n-&gt;keylen, n-&gt;val, arg);&#125; int xhash_iter_first(xht h); ÊääËø≠‰ª£‰ΩçÁΩÆËÆæ-1Âêé,Ë∞ÉÁî®‰∏ÄÊ¨°xhash_iter_next, Êù•ËÆ©Ëø≠‰ª£‰ΩçÁΩÆresetÂà∞È¶ñ‰Ωç. 123456789/** iteration */int xhash_iter_first(xht h) &#123; if(h == NULL) return 0; h-&gt;iter_bucket = -1; h-&gt;iter_node = NULL; return xhash_iter_next(h);&#125; int xhash_iter_next(xht h); Ëøô‰∏™ÂáΩÊï∞Áõ∏ÂØπÊØîËæÉÂ§çÊùÇ,ËÆ©Ëø≠‰ª£Âô®ÊåáÂêëÂΩìÂâç‰ΩçÁΩÆ‰∏ã‰∏Ä‰∏™‰∏ç‰∏∫Á©∫ÁöÑËäÇÁÇπ. 123456789101112131415161718192021222324252627282930313233//È¶ñÂÖàÂú®iter_nodeÂΩìÂâçÁöÑÊ°∂ÈáåÈÅçÂéÜ, /* next in this bucket */ h-&gt;iter_node = h-&gt;iter_node ? h-&gt;iter_node-&gt;next : NULL; while(h-&gt;iter_node != NULL) &#123; xhn n = h-&gt;iter_node; if(n-&gt;key != NULL &amp;&amp; n-&gt;val != NULL) return 1; h-&gt;iter_node = n-&gt;next;// xhash_zap_innerÈáåÊúâËØ¥Âà∞Â¶ÇÊûúÊòØÂΩìÂâçËø≠‰ª£Âô®‰ΩçÁΩÆÂàôÁõ¥Êé•ÁΩÆkey‰∏∫NULL,ËÄå‰∏çÂä†ÂÖ•free_list//Ëøô‰∏™nextÂáΩÊï∞Â¶ÇÊûúÈÅáÂà∞ËøôÊ†∑ÁöÑËäÇÁÇπ‰ºöÂ∞ÜÂÖ∂Âä†ÂÖ•free_listÈáå,Áõ∏ÂΩì‰∫éÊ∏ÖÁêÜÊ°∂ÁöÑ‰ΩúÁî®. if (n != &amp;h-&gt;zen[h-&gt;iter_bucket]) &#123; if(n-&gt;prev) n-&gt;prev-&gt;next = n-&gt;next; if(n-&gt;next) n-&gt;next-&gt;prev = n-&gt;prev; // add it to the free_list head. n-&gt;prev = NULL; n-&gt;next = h-&gt;free_list; h-&gt;free_list = n; &#125; &#125;//Â¶ÇÊûúÈÉΩÊ≤°ÊúâÊâæÂà∞,‰ªéÂêéÁª≠ÁöÑÊ°∂ÈáåÈÄê‰∏™Ëø≠‰ª£ /* next bucket */ for(h-&gt;iter_bucket++; h-&gt;iter_bucket &lt; h-&gt;prime; h-&gt;iter_bucket++) &#123; h-&gt;iter_node = &amp;h-&gt;zen[h-&gt;iter_bucket]; while(h-&gt;iter_node != NULL) &#123; if(h-&gt;iter_node-&gt;key != NULL &amp;&amp; h-&gt;iter_node-&gt;val != NULL) return 1; h-&gt;iter_node = h-&gt;iter_node-&gt;next; // Âú®Âà´ÁöÑÊ°∂ÈáåÂ∞±Ê≤°ÊúâÊ∏ÖÁêÜ &#125; &#125; ÂÖ∂ÂÆÉÂáΩÊï∞ÈÉΩÁÆÄÂçïÊòìÊáÇ, ‰∏çËøáÊúâ‰∏™dirtyÂèòÈáè, ÁõÆÊµãÊòØÁî®Êù•ÁªüËÆ°ÂØπhashË°®ÁöÑËÆøÈóÆ(Ê∑ªÂä†&#x2F;Âà†Èô§&#x2F;‰øÆÊîπ)Ê¨°Êï∞. ‰ΩøÁî®ËåÉ‰æã: 123// ‰ΩøÁî®Êó∂keyÂíåvalÈÉΩÂèØ‰ª•Âú®pool‰∏≠ÂàÜÈÖç.elem = pmalloco(xhash_pool(c-&gt;hash), sizeof(struct config_elem_st));xhash_put(c-&gt;hash, pstrdup(xhash_pool(c-&gt;hash), &quot;id&quot;), elem); ÊÄªÁªì: ‰ºòÁÇπ:Êï£ÂàóÂÄºËÆ°ÁÆóÊó∂Èó¥Â§çÊùÇÂ∫¶O(n), ÊØè‰∏™‰ΩçÁΩÆÁöÑÈ¶ñÊ¨°Êï£ÂàóÈÄüÂ∫¶Âø´, ÂÜÖÂ≠òÁöÑÂ§çÁî®ÈÉΩÂæàÁÆÄÂçïÈ´òÊïà.ÈìæÂú∞ÂùÄÊ≥ïÂ§ÑÁêÜÊï£ÂàóÂÜ≤Á™Å, ÈÄÇÁî®‰∫éÂ§ßÂ§öÁ®ãÂ∫è. Â¶ÇÊûúË¶ÅËØ¥Áº∫ÁÇπ:Êï£ÂàóË°®ÈïøÂõ∫ÂÆö, Êï£ÂàóÁöÑÊÄßËÉΩÂèñÂÜ≥‰∫éÂàùÂßãÂåñËÆæÂÆöÁöÑË°®Èïø.Â¶ÇÊûúÊúâ‰∏•Ê†ºÁöÑÊÄßËÉΩË¶ÅÊ±ÇÂèØ‰ª•ËÄÉËôëÁî®Âä®ÊÄÅhashË°®ÊõøÊç¢.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"jabberd 2 ÂÜÖÂ≠òÊ±†Ê®°Âûã","slug":"jabberd 2 ÂÜÖÂ≠òÊ±†Ê®°Âûã","date":"2014-07-18T07:18:45.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2014/07/18/jabberd 2 ÂÜÖÂ≠òÊ±†Ê®°Âûã/","link":"","permalink":"https://unpluggedcoder.me/2014/07/18/jabberd%202%20%E5%86%85%E5%AD%98%E6%B1%A0%E6%A8%A1%E5%9E%8B/","excerpt":"","text":"poolÁªìÊûÑ‰∏≠ÁöÑcleanupÊåáÂêëpfreeÈìæË°®Â§¥,cleanup_tailÈ°æÂêçÊÄù‰πâÊåáÂêëÈìæË°®Êú´Â∞æ. pool-&gt;sizeÊòØÊâÄÊúâheapÁöÑsizeÁöÑÊÄªÂíå. pool-&gt;heapÊåáÂêëÂΩìÂâçÁöÑÂ†Üpheap pfreeÊòØ‰∏Ä‰∏™Áî®Êù•ËøΩË∏™(Tracker)ÊàñËÄÖËØ¥Á¥¢ÂºïÊâÄÊúâÂ∑≤ÂàÜÈÖçheapÁöÑÈìæË°®ËäÇÁÇπ, pfree‰∏≠ÂåÖÂê´ÁöÑÂõûË∞ÉÂáΩÊï∞ÊåáÈíàË¥üË¥£ÊâÄÊåáheapÁöÑÂÆûÈôÖÈáäÊîæ. pheapÂåÖÂê´Â∑≤ÂàÜÈÖçÂÜÖÂ≠òÂÆû‰Ωì‰ø°ÊÅØ. ÂàÜÈÖçËøáÁ®ã **void *pmalloc(pool_t p, int size)**: Â¶ÇÊûúÂΩìÂâçheap‰∏∫ÂàùÂßãÂåñÊàñËÄÖ(ËØ∑Ê±ÇÂàÜÈÖçÁöÑsize &gt; ÂΩìÂâçheap-&gt;size&#x2F;2), ÂàôÁõ¥Êé•ÈÄöËøá_pool_freeÂàõÂª∫‰∏ÄÂùóÂéüÂßãÂÜÖÂ≠òÂå∫Âüü,Áî®pfreeËÆ∞ÂΩï‰∏ãÊù•,Â∞±Áõ¥Êé•ËøîÂõû. Âê¶Âàô: ÂÖàËøõË°åÂÜÖÂ≠òÂØπÈΩê, ÁÑ∂ÂêéÂà§Êñ≠ÂΩìÂâçheapÈáåÊòØÂê¶ÊúâË∂≥Â§üÁöÑÂâ©‰ΩôÁ©∫Èó¥,Ê≤°ÊúâÂàôÊñ∞Âª∫‰∏ÄÂùóheapÁÑ∂ÂêéÊåâÂÆûÈôÖÊåáÈíà‰ΩçÁΩÆËøîÂõûÂèØÁî®ÂÜÖÂ≠òÂå∫Âüü. ÈáäÊîæËøáÁ®ã void pool_free(pool_t p) ÈÅçÂéÜcleanupÂàóË°®,ÈÄê‰∏™ÈáäÊîæpfree-&gt;pheapÂíåpfreeËá™Ë∫´.ÊúÄÂêéÈáäÊîæpoolËá™Ë∫´. Âá†‰πé‰∏çÁî®ÂÜÖÂ≠òÊ±†, Âè™ÁúãÂá∫Ëøô‰∫õ, ËØÑ‰ª∑:Êó†","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"}]},{"title":"ÁîüÊàêÂèØË∞ÉËØïÁöÑReleaseÁâàÊú¨‰∫åËøõÂà∂Êñá‰ª∂--Ë∞ÉËØïÁ¨¶Âè∑‰ø°ÊÅØÊèêÂèñÂíåÈôÑÂä†Ë∞ÉËØïÈìæÊé•section","slug":"ÁîüÊàêÂèØË∞ÉËØïÁöÑReleaseÁâàÊú¨‰∫åËøõÂà∂Êñá‰ª∂--Ë∞ÉËØïÁ¨¶Âè∑‰ø°ÊÅØÊèêÂèñÂíåÈôÑÂä†Ë∞ÉËØïÈìæÊé•section","date":"2014-04-24T06:05:03.000Z","updated":"2022-09-15T15:51:05.354Z","comments":true,"path":"2014/04/24/ÁîüÊàêÂèØË∞ÉËØïÁöÑReleaseÁâàÊú¨‰∫åËøõÂà∂Êñá‰ª∂--Ë∞ÉËØïÁ¨¶Âè∑‰ø°ÊÅØÊèêÂèñÂíåÈôÑÂä†Ë∞ÉËØïÈìæÊé•section/","link":"","permalink":"https://unpluggedcoder.me/2014/04/24/%E7%94%9F%E6%88%90%E5%8F%AF%E8%B0%83%E8%AF%95%E7%9A%84Release%E7%89%88%E6%9C%AC%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6--%E8%B0%83%E8%AF%95%E7%AC%A6%E5%8F%B7%E4%BF%A1%E6%81%AF%E6%8F%90%E5%8F%96%E5%92%8C%E9%99%84%E5%8A%A0%E8%B0%83%E8%AF%95%E9%93%BE%E6%8E%A5section/","excerpt":"","text":"Êú¨ÊñáËÆ≤ÁöÑÊòØ‰∏çÁºñËØëÂÆåÂÖ®releaseÁöÑÂèØÊâßË°åÊñá‰ª∂,ËÄåÊòØ‰ΩøÁî®cmakeÁöÑRelWithDebugInfo(ÈôÑÂä†Ë∞ÉËØï‰ø°ÊÅØÁöÑÁºñËØë,ÂÆÉÁöÑÊïàÊûú‰∏ãÈù¢‰ºöËØ¥Êòé)ÊàñËÄÖDebugÁºñËØë‰πüÂèØ‰ª•ÁîüÊàêreleaseÁâàÊú¨ÁöÑÂèØÊâßË°åÊñá‰ª∂ËøõË°åË∞ÉËØï. ËØ¶ÁªÜÁöÑ cmake ‰ΩøÁî®‰ºöÂú®‰∏ã‰∏ÄÁØáÊñáÁ´†ÈáåËÆ≤. ËøôÈáåÂÖàËÆ∞‰∏ãDebug, Release Âíå RelWithDebugInfoÁöÑÂå∫Âà´(ÂØπÊØîÊàëÊâã‰∏äÁöÑgcc 4.8.2ÁºñËØëÂá∫ÁöÑ‰∏çÂêåÁâàÊú¨ÂæóÂá∫ÁöÑÁªìËÆ∫) Debug Á≠âÂêå‰∫é -O0 -g ÁºñËØëÈÄâÈ°π, ‰∏ç‰ºòÂåñ‰ª£Á†Å, ÈôÑÂä†Ë∞ÉËØï‰ø°ÊÅØ Release Á≠âÂêå‰∫é -O3 ÁºñËØëÈÄâÈ°π, ÊúÄÂ§ßÂåñ‰ºòÂåñ‰ª£Á†Å, ‰ΩÜ‰∏çÂåÖÂê´Ë∞ÉËØï‰ø°ÊÅØ RelWithDebugInfo Á≠âÂêå‰∫é -O2 -g ÁºñËØëÈÄâÈ°π, ‰∏≠Á≠âÁ®ãÂ∫¶‰ºòÂåñ‰ª£Á†Å, Âπ∂‰∏îÂåÖÂê´Ë∞ÉËØï‰ø°ÊÅØ. ÂèØ‰ª•Ëá™ÂÆö‰πâ‰ΩøÁî®-O3 -g ÁöÑÁºñËØëÈÄâÈ°π,Êù•ÁîüÊàêÊúÄÊé•ËøëReleaseÁöÑ‰ª£Á†Å(Ëá≥‰∫é-ggdbÁöÑÈÄâÈ°π,Âä†‰∫Ü‰ª•Âêé‰∫åËøõÂà∂Âè™Â§ß‰∫Ü8‰∏™Â≠óËäÇ,ÁõÆÊµãÊó†ÊâÄË∞ì) ‰∏ãÈù¢ÁöÑÊñπÊ≥ïÂè™ÂØπ-gÁºñËØëÊúâÊïà,ÊñπÊ≥ïÊúâ‰∏§Áßç. manÊâãÂÜåÈáåÊé®ËçêÁöÑÊñπÊ≥ï objcopy ‚Äìonly-keep-debug foo foo.dbg ÊääË∞ÉËØï‰ø°ÊÅØ(Âç≥debug section)dumpÂà∞ÂçïÁã¨ÁöÑÊñá‰ª∂Èáå. objcopy ‚Äìstrip-debug foo ËøôÈáåÂè™ÂâîÈô§Ë∞ÉËØï‰ø°ÊÅØ,Á¨¶Âè∑‰ø°ÊÅØ‰ªç‰øùÁïô(Áî®Êà∑‰æùÁÑ∂ÂèØ‰ª•Áî®nmÊü•ÁúãÂà∞ÂêÑÁßçÂáΩÊï∞Á¨¶Âè∑,ÊàëÊé®ËçêÁî®‚Äìstrip-all,ËøûÂêåÁ¨¶Âè∑‰ø°ÊÅØ‰∏ÄËµ∑Âà†Èô§,ÁîüÊàêÁöÑÂèØÊâßË°åÊñá‰ª∂Êõ¥Â∞è,‰∏çÂΩ±ÂìçË∞ÉËØï) objcopy ‚Äìadd-gnu-debuglink&#x3D;foo.dbg foo ‰∏∫fooÊ∑ªÂä†.gnu-debuglink section, Ëøô‰∏™‰ºöËÆ©‰∫åËøõÂà∂Â¢ûÂä†Ëøë100Â≠óËäÇÁöÑÊ†∑Â≠ê.ËøôÊ†∑ÂàÜÁ¶ª‰∫ÜDebug SectionÂêé,Â∞±ÂèØ‰ª•ÂçïÁã¨ÂàÜÂèëreleaseÁâàÊú¨ÁöÑfoo,Ë∞ÉËØïÊó∂Âè™ÈúÄËÆ≤foo.dbgÊîæÂú®ÂíåfooÂêå‰∏ÄÁõÆÂΩï‰∏ãÂç≥ÂèØÁõ¥Êé•gdb fooËøõË°åË∞ÉËØï. Â¶ÇÊûú‰∏çÂ∏åÊúõReleaseÁöÑÊúÄÁªà‰∫åËøõÂà∂Êñá‰ª∂ÂåÖÂê´.gnu-debuglinkÊÆµ,ÈÇ£‰πàÂèØ‰ª•Áõ¥Êé•ÁúÅÁï•Á¨¨‰∏âÊ≠•,‰∏îÂΩìÊàêÂè¶‰∏ÄÁßçÊñπÊ≥ï,Êñπ‰æøÂèôËø∞. Âêå‰∏Ä strip foo Ëøô‰∏™ÊïàÊûúÁ≠âÂêå‰∫éobjcopy ‚Äìstrip-all foo,ÂâîÈô§ÊâÄÊúâÁ¨¶Âè∑ÂíåË∞ÉËØï‰ø°ÊÅØ, Âç≥‰∏∫releaseÁâàÊú¨. ÊñπÊ≥ï‰∫åÊâÄ‰∏çÂêåÁöÑË∞ÉËØïÊñπÊ≥ïÊòØÈúÄÂÖàÂä†ËΩΩdbgÊñá‰ª∂, gdb foo.dbg, ÁÑ∂Âêéattach(ÊàñËÄÖexec)Âà∞fooËøõÁ®ã,ËøôÊ†∑‰∏çË¶ÅÊ±Ç.dbgÂíåÊâßË°åÁ®ãÂ∫èÂú®Âêå‰∏Ä‰∏™ÁõÆÂΩï‰∏ã,Âπ∂‰∏îÈÄÇÂêàË∞ÉËØïÂ∑≤ÁªèÂêØÂä®ÁöÑËøõÁ®ã,‰æãÂ¶ÇÊúçÂä°Âô®.","categories":[{"name":"Unix/Linux","slug":"Unix-Linux","permalink":"https://unpluggedcoder.me/categories/Unix-Linux/"}],"tags":[{"name":"GCC","slug":"GCC","permalink":"https://unpluggedcoder.me/tags/GCC/"}]},{"title":"C# Áî®‰ø°Âè∑ÈáèÈôêÂà∂(Â≠êËøõÁ®ã)Âπ∂ÂèëÊâßË°åÊï∞Èáè","slug":"C# Áî®‰ø°Âè∑ÈáèÈôêÂà∂(Â≠êËøõÁ®ã)Âπ∂ÂèëÊâßË°åÊï∞Èáè'","date":"2014-04-11T01:11:10.000Z","updated":"2022-09-15T15:51:05.342Z","comments":true,"path":"2014/04/11/C# Áî®‰ø°Âè∑ÈáèÈôêÂà∂(Â≠êËøõÁ®ã)Âπ∂ÂèëÊâßË°åÊï∞Èáè'/","link":"","permalink":"https://unpluggedcoder.me/2014/04/11/C#%20%E7%94%A8%E4%BF%A1%E5%8F%B7%E9%87%8F%E9%99%90%E5%88%B6(%E5%AD%90%E8%BF%9B%E7%A8%8B)%E5%B9%B6%E5%8F%91%E6%89%A7%E8%A1%8C%E6%95%B0%E9%87%8F'/","excerpt":"","text":"ÁÆÄÂçïÁöÑÂà©Áî®‰ø°Âè∑ÈáèÊù•ÊéßÂà∂Â≠êËøõÁ®ã‰∏™Êï∞, ÂêåÊó∂Âà©Áî®Process.ExitCodeÊù•ËÆ∞ÂΩïÈîôËØØ‰ø°ÊÅØ ‰ª•‰∏ãÊòØ class ProcHandler ÁöÑÂÜÖÂÆπ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586private Queue _cmdQueue = new Queue (200);private Semaphore _semProc;private ProcessStartInfo _startInfo = new ProcessStartInfo (&quot;****.exe&quot;);public ProcHandler (int max)&#123; _semProc = new Semaphore( max, max ); _startInfo.CreateNoWindow = true; _startInfo.UseShellExecute = false; _startInfo.RedirectStandardError = true;&#125;public void AddTask( string cmd )&#123; _cmdQueue.Enqueue (cmd); // ËæìÂÖ•Âà∞‰ªªÂä°ÈòüÂàó ++ _sum;&#125;public void ThreadProc()&#123; while (_cmdQueue .Count &amp;gt; 0) &#123; if (_semProc .WaitOne(2000)) // ÊúÄÂ§ßÁ≠âÂæÖ2Áßí &#123; string cmd = (string) _cmdQueue.Dequeue (); Console.WriteLine (cmd); ExecuteCmd(cmd); &#125; &#125;&#125;private void ExecuteCmd( string cmd )&#123; _startInfo.Arguments = cmd; Process copyProc = new Process(); copyProc.StartInfo = _startInfo; copyProc.EnableRaisingEvents = true; // ÂøÖÈ°ªËÆætrue,Êâç‰ºöÊúâExited‰∫ã‰ª∂ÂìçÂ∫î copyProc.Exited += new EventHandler(OnExitProc ); copyProc .Start()&#125;/// ËÆ∞ÂΩïÂ§±Ë¥•ÁöÑ‰ªªÂä°Êï∞ÈáèÂíå‰ø°ÊÅØ ,Â¢ûÂä†‰ø°Âè∑Èáèprivate void OnExitProc( object sender , System. EventArgs e )&#123; Process proc = (Process) sender; if (proc .ExitCode != 0) &#123; string log = string. Format(&quot;[FAILED]--&#123;0&#125;\\n--------&#123;1&#125;&quot; , proc.StartInfo .Arguments, proc.StandardError .ReadToEnd()); Logger.Log (log); &#125; _semProc.Release ();&#125; Â§ñÈÉ®Ë∞ÉÁî®: 123456foreach( .... in ****) prochandler -&amp;gt;AddTask(strcmd);Thread Workthread = new Thread(new ThreadStart(procHandler.ThreadProc));Workthread.Start();","categories":[{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/categories/Windows/"}],"tags":[{"name":"C#","slug":"C","permalink":"https://unpluggedcoder.me/tags/C/"},{"name":"Âπ∂Âèë","slug":"Âπ∂Âèë","permalink":"https://unpluggedcoder.me/tags/%E5%B9%B6%E5%8F%91/"}]},{"title":"Minions from Despicable Me","slug":"minions-from-despicable-me","date":"2013-11-18T08:56:38.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2013/11/18/minions-from-despicable-me/","link":"","permalink":"https://unpluggedcoder.me/2013/11/18/minions-from-despicable-me/","excerpt":"","text":"","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]},{"title":"Finished a painting of lion","slug":"finished-a-painting-of-lion","date":"2013-11-01T14:03:57.000Z","updated":"2022-09-20T15:52:08.880Z","comments":true,"path":"2013/11/01/finished-a-painting-of-lion/","link":"","permalink":"https://unpluggedcoder.me/2013/11/01/finished-a-painting-of-lion/","excerpt":"Just finish this paint, still learning details paint skill.","text":"Just finish this paint, still learning details paint skill.","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]},{"title":"Ê®±Êú®Ëä±ÈÅì - Sakuragi Hanamichi","slug":"sakuragi-hanamichi","date":"2013-09-18T02:22:28.000Z","updated":"2022-09-15T15:51:05.351Z","comments":true,"path":"2013/09/18/sakuragi-hanamichi/","link":"","permalink":"https://unpluggedcoder.me/2013/09/18/sakuragi-hanamichi/","excerpt":"","text":"","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]},{"title":"Á¨¨‰∏ÄÊ¨°Â∞ùËØï","slug":"Á¨¨‰∏ÄÊ¨°Â∞ùËØï","date":"2013-09-02T09:07:36.000Z","updated":"2022-09-20T15:52:38.875Z","comments":true,"path":"2013/09/02/Á¨¨‰∏ÄÊ¨°Â∞ùËØï/","link":"","permalink":"https://unpluggedcoder.me/2013/09/02/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%B0%9D%E8%AF%95/","excerpt":"","text":"Êç¢‰∏™ËßíÂ∫¶ÁúãÂ∞±ÂèòÂΩ¢‰∫Ü‚Ä¶","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]},{"title":"‰ªé‰∏ÄÂêçÊôÆÈÄöÂºÄÂèëËÄÖËßíÂ∫¶ÁúãÔºö‰∏∫‰ªÄ‰πàSurface RT/Pro‰ºöÂ§±Ë¥•Ôºü","slug":"‰ªé‰∏ÄÂêçÊôÆÈÄöÂºÄÂèëËÄÖËßíÂ∫¶ÁúãÔºö‰∏∫‰ªÄ‰πàSurface RT:Pro‰ºöÂ§±Ë¥•Ôºü","date":"2013-07-22T16:08:18.000Z","updated":"2022-09-15T15:51:05.352Z","comments":true,"path":"2013/07/23/‰ªé‰∏ÄÂêçÊôÆÈÄöÂºÄÂèëËÄÖËßíÂ∫¶ÁúãÔºö‰∏∫‰ªÄ‰πàSurface RT:Pro‰ºöÂ§±Ë¥•Ôºü/","link":"","permalink":"https://unpluggedcoder.me/2013/07/23/%E4%BB%8E%E4%B8%80%E5%90%8D%E6%99%AE%E9%80%9A%E5%BC%80%E5%8F%91%E8%80%85%E8%A7%92%E5%BA%A6%E7%9C%8B%EF%BC%9A%E4%B8%BA%E4%BB%80%E4%B9%88Surface%20RT:Pro%E4%BC%9A%E5%A4%B1%E8%B4%A5%EF%BC%9F/","excerpt":"","text":"ÊúÄËøëÂæàÂ§öITËµÑËÆØËÆ∫ÂùõÈÉΩÊúâÂèëË°®ÂØπÂæÆËΩØÁöÑWindows 8ÁöÑSurface RT&#x2F;ProÁ≥ªÂàó‰∫ßÂìÅÂ§±Ë¥•ÂàÜÊûêÁöÑÊñáÁ´†„ÄÇËÄåÊú¨ÊñáÂàôÊòØ‰ªé‰∏ÄÂêçÊôÆÈÄöÂºÄÂèëËÄÖÁöÑËßíÂ∫¶ÁúãÂæÆËΩØSurface‰∫ßÂìÅÁ∫øÊ∫ÉË¥•ÁöÑÂéüÂõ†„ÄÇ Á¨îËÄÖËá™Ë∫´ÊõæÁªèÂè™ÊòØ‰∏ÄÂêçÊôÆÈÄöÁöÑWindows 8ÂºÄÂèëËÄÖÔºåÊâÄÊ∂âÂèäÁöÑÂÜÖÂÆπÂ¶ÇÊúâÈîôËØØËØ∑ÊåáÊ≠£„ÄÇ ÁúãÂà∞ÂæàÂ§öËÆ∫ÂùõÈÉΩÊääSurfaceÁ≥ªÂàó‰∫ßÂìÅÂ§±Ë¥•ÁöÑÂéüÂõ†ÂΩíÂíé‰∫éÂÖ∂ÈîôËØØÁöÑ‰∫ßÂìÅÂÆö‰ΩçÔºåÂÖ∂ÂÆûÂõûÈ°æ‰∏ãWindows 8ÂèëÂ∏ÉÂâçÁöÑ‰∏Ä‰∫õÊñáÁ´†Êä•ÈÅìÂÖ∂ÂÆûÂ§ßÈÉ®ÂàÜÈÉΩÊòØÊ≠£Èù¢ÁöÑÊÄÅÂ∫¶„ÄÇ‰ªéWindows 8 Developer PreviewÂà∞Release PreviewÊúâÂæàÂ§öÊñ∞È¢ñÁöÑÁâπÊÄßÔºåÂÖ∂‰∏≠Â∞±ÂåÖÊã¨MetroÈ£éÊ†ºÁïåÈù¢ÔºåÈÇ£Êó∂ÂÄôÈÉΩÂåÖÊã¨ÊàëÂú®ÂÜÖÁöÑÂæàÂ§öÂºÄÂèëËÄÖÈÉΩÂæàÁúãÂ•ΩWindows 8„ÄÇËÄåÊàë‰ª¨ÊÅ∞ÊÅ∞Â∞±ÊòØÈÇ£‚ÄùÂ§ßÈÉ®ÂàÜ‚Äù‰∫∫ÔºåÂØπ‰∫ßÂìÅÁúã‰∏çÂà∞Êõ¥Ëøú„ÄÇÂú®ÂºÄÂèëÊó∂Ôºå‰Ωú‰∏∫ÂºÄÂèëËÄÖÂæàÊó©Â∞±ÂèØ‰ª•ÊãøÂà∞ÂæÆËΩØÁöÑ‰∫ßÂìÅÂéüÂûãÔºåÁ¨¨‰∏ÄÊ¨°ÊääWindows 8 ProÂπ≥ÊùøÊãøÂú®ÊâãÈáåÔºåÂ∞±ËßâÂæóÂæà‰∏çÂèØÊÄùËÆÆÔºåËßâÂæóËøô‰ºöÊòØ‰∏™È¢†Ë¶ÜÊÄßÁöÑ‰∫ßÂìÅÔºåÂõ†‰∏∫Âú®Â∞èÂ∞èÁöÑÂπ≥Êùø‰∏äÊúâÁùÄÂíåPC‰∏ÄÊ†∑ÁöÑÊ°åÈù¢ÁéØÂ¢ÉÔºåÊÉ≥Ë±°PC‰∏äÊúâÈÇ£‰πàÂ§öÁªôÂäõÁöÑÊ∏∏ÊàèÔºåË¶ÅÊòØËÉΩÈöèÊó∂ÈöèÂú∞Âú®Âπ≥Êùø‰∏äÁé©Ëµ∑Êù•Â≤Ç‰∏ç‚Ä¶‚Ä¶‰ΩÜÊòØÂΩìÊàëÂú®Âπ≥Êùø‰∏äÊâìÂºÄ‰∏Ä‰∏™Ê°åÈù¢Ê∏∏ÊàèÊó∂ÔºåÊàëÊÑüËßâÂà∞‰∫Ü‰ªÄ‰πàÔºåÊ≤°ÊúâÈîÆÁõò„ÄÅÈº†Ê†á‚Ä¶‚Ä¶ÈÇ£Êó∂Âπ∂Ê≤°ÊúâÊÉ≥Âà∞ËøôÁ´üÊàê‰∏∫Windows 8ÊúÄÂ§±Ë¥•ÁöÑ‰∫ßÂìÅÂÆö‰ΩçÔºöPCÂπ≥Êùø„ÄÇÁî®Êà∑‰ΩøÁî®Âπ≥ÊùøÊó∂Ê†πÊú¨‰∏çÂ∫îËØ•ËÄÉËôëÂéªÊâæ‰∏™ÈîÆÁõòÈº†Ê†áÊù•Êê≠ÈÖç„ÄÇÊâÄ‰ª•Âë¢ÔºåÁªìÊûúÂ∞±ÂØºËá¥‰∫ÜÂæÆËΩØSurfaceÂπøÂëä‰∏äÊûÅÂäõÊé®Â¥áÁöÑÈÇ£‰∏™ÈîÆÁõò„ÄÇ‰ΩÜ‰Ωú‰∏∫ÂºÄÂèëËÄÖÔºåÊàëËÆ§‰∏∫Windows 8Â¶ÇÊûú‰Ωú‰∏∫‰∏Ä‰∏™Êñ∞ÁöÑÊ°åÈù¢Êìç‰ΩúÁ≥ªÁªüÁöÑÁ°ÆËøòÊòØÂæà‰ºòÁßÄÁöÑÔºåÊØîWindows 7Â•Ω‰∫ÜÂæàÂ§ö„ÄÇËá≥‰∫éÂæàÂ§ö‰∫∫Êä±ÊÄ®ÁöÑÂºÄÂßãËèúÂçïÔºåÊàëÊó†ÊâÄË∞ì„ÄÇ‰ª∑Ê†ºÊñπÈù¢ÔºåÂæÆËΩØÊú¨Ë∫´Â∞±ÊòØÁßªÂä®Âπ≥Âè∞ÁöÑÊñ∞ÂÖ•Èó®Áé©ÂÆ∂ÔºåËÑöË∑üÈÉΩÊ≤°Á´ôÁ®≥ÔºåÂ∞±ÊÉ≥ÁùÄËµöÈí±ÔºåÂ§ßÈÉ®ÂàÜÂõΩÂÜÖÂéÇÂïÜÁöÑÊñπÊ≥ïÊòØÈÄâÊã©Áî®‰ΩéÂªâÁöÑ‰ª∑Ê†ºÊù•ËÆ©Áî®Êà∑ÁÜüÊÇâ‰Ω†ÁöÑ‰∫ßÂìÅÔºåÂõ†‰∏∫Áî®Êà∑‰∏ç‰ºö‰∏∫‰∏Ä‰∏™‰ªñ‰ª¨Âπ∂‰∏çÊ∏ÖÊ•öÊúâ‰ªª‰ΩïÂÆûÈôÖ‰ºòÁÇπÁöÑ‰∏úË•øÊîØ‰ªòÈ´òÊòÇÁöÑ‰ª∑Ê†ºÔºåËØ∫Âü∫‰∫ö‰πüÊòØÂ¶ÇÊ≠§Ôºå‰ªéLumia 920‰∏äÂ∏ÇÁöÑ4500ÂîÆ‰ª∑Âà∞ÁõÆÂâçËøë‰πéÊñ©ËÖ∞ÁöÑ‰ª∑Ê†ºÂ∞±ÂæàÊòéÊòæ‰∫Ü„ÄÇ &amp;nbsp; Èô§‰∫Ü‰∫ßÂìÅÂÆö‰ΩçÔºåÂú®ÊàëÁúãÊù•Êúâ‰∏Ä‰∏™ÂæàÈáçË¶ÅÁöÑÂõ†Á¥†ÊòØÂæÆËΩØÁöÑÊäÄÊúØÊñáÂåñÔºå APIÂºèÂ≠¶‰π†Âíå‚ÄùÂá°‰∫ãÁöÜÊúâÊàëÁöÑËßÑÂàôÔºàMicrosoft&#96;s rulesÔºâ‚Äú„ÄÇ‰ªéÊìç‰ΩúÁ≥ªÁªüÂà∞OfficeÔºåÂæÆËΩØÊúâÂæàÂ§öËá™ÂÆ∂ÁöÑ‰∏úË•øÔºåÁî®Ëá™Â∑±ÁöÑÊ†∏ÂøÉÊäÄÊúØÊê≠Âª∫Ëµ∑Êù•‰∫ÜËá™Â∑±ÁöÑËΩØ‰ª∂ÁéãÂõΩ„ÄÇÂÅáÂ¶Ç‰∏ÄÁßçÊäÄÊúØËØûÁîü‰∫éÂºÄÊ∫êÁ§æÂå∫ÔºåËÄåÂú®ÂæÆËΩØÁöÑËØçÂÖ∏‰∏≠Êâæ‰∏çÂà∞ÁöÑËØùÔºåÂæÆËΩØ‰ºöÁ´ãÂàªÂ≠¶‰π†ÔºåÂπ∂‰∏îÁªìÂêàËá™Ë∫´ÁöÑÊäÄÊúØÁßØÊ∑ÄÂàõÈÄ†Âá∫‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÊ†áÂáÜÔºàËøôÁÇπÂíåÂõΩÂÜÖÁöÑ‰ºÅÈπÖÊòØÂÆåÂÖ®‰∏çÂêåÁöÑÔºâÔºåÊèê‰æõÊõ¥ÁÆÄÂçïÁöÑAPIÂíåÊé•Âè£ÔºåËÆ©ÂºÄÂèëËÄÖÊõ¥ÂÆπÊòìÂ≠¶‰ºöÂíå‰ΩøÁî®„ÄÇ‰ΩÜ‰πüÊ≠£ÊòØËøôÊ†∑Ëá™ÊàëÁöÑËΩØ‰ª∂ÁéãÂõΩÊàñËÆ∏‰ºöÊØÅ‰∫ÜÂæÆËΩØÔºåÂõ†‰∏∫‰∏ñÁïå‰∏äÂ§ßÈÉ®ÂàÜCoder‰∏çÂñúÊ¨¢ËøôÊ†∑APIÂºèÂ≠¶‰π†Ôºà‰æãÂ¶ÇÂºÄÊ∫êÁ§æÂå∫Ôºâ„ÄÇÂú®Windows 8‰∏≠ÂæÆËΩØÈô§‰∫ÜÊîØÊåÅËá™Â∑±ÁöÑÂÑøÂ≠êC#Â§ñËøòÊé®Âá∫‰∫ÜÊñ∞ÁöÑÂπ≤ÂÑøÂ≠êËØ≠Ë®ÄÁöÑC++&#x2F;CXÔºåÂêéËÄÖÊòØÁªßC++&#x2F;CLIÂêéÁöÑÂèà‰∏Ä‰∏™C++Êâ©Â±ïÔºåÊàñËÄÖÂèØ‰ª•ÁêÜËß£‰∏∫C++ÂèòÁßçÔºåÊ≤°ÈîôÔºåËøôÁßçÂèòÁßçËØ≠Ë®ÄÁî±Ê†áÂáÜC++Êâ©Â±ïËÄåÊù•ÔºåÂè™ËÉΩÈù†ÂæÆËΩØÊîØÊåÅÂπ∂Âú®Windows 8Êñ∞Á≥ªÁªü‰∏≠‰ΩøÁî®ÔºåÂ≠¶‰∫ÜÂÆÉ‰ª•Âêé‰Ω†‰∏ç‰ºöÂÜçÊÑüËßâÂà∞Ëá™Â∑±ÊÜîÊÇ¥‰∫ÜÔºåÁõ∏Âèç‰ºöËßâÂæóËá™Â∑±Êõ¥Âπ¥ËΩªÔºåÊõ¥ÂÉèbaby‰∫ÜÔºàÂõ†‰∏∫Êõ¥ÁÆÄÂçï‰∫ÜÔºâÔºåËÄå‰∏î‰Ω†ÂøÉÈáåÂæàÊ∏ÖÊ•öÔºåËá™Â∑±ÁöÑ‰∏ã‰∏Ä‰ªΩÂ∑•‰ΩúÂÖ´ÊàêËøò‰ºöÂíåÂæÆËΩØÊâì‰∫§ÈÅì„ÄÇÂú®Êñ∞ÁöÑC++&#x2F;CXËØ≠Ê≥ïÂ≠¶‰π†‰∏≠ÔºåÊåâÁÖßMSDNÊï≤Âá∫‰∫Ü‰ª£Á†ÅÔºåÊÅ©ÔºåÂæàÂ•ΩÔºåËøêË°åËµ∑Êù•‰∫ÜÔºåÁïåÈù¢ÂæàÊºÇ‰∫ÆÔºåÂæàÂ§ßÁöÑÊàêÂ∞±ÊÑüÔºåÁ™ÅÁÑ∂Èó¥Á®ãÂ∫èÊåÇÊéâÔºåËøôÊó∂ÂÄô‰Ω†Êúâ‰∏âÁßçÈÄâÊã©Ôºö‰∏Ä„ÄÅÂà∞MSDNËÆ∫ÂùõÊàñËÄÖÂÖ∂ÂÆÉÂºÄÂèëËÄÖÁ§æÂå∫ËÆ®ËÆ∫Ôºå‰ªñ‰ª¨ÁªôÂá∫ÁöÑÂõûÁ≠îÈÄöÂ∏∏Á±ª‰ºº‰∫éÔºö‰Ω†ÁÖßÁùÄ‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊï≤ËØïËØïÔºüÁúãÁúãMSDN‰Ω†Â∞±Áü•ÈÅì‰∫ÜÔºÅ ÈÄöÂ∏∏Á¨¨‰∏ÄÁßçÈÄâÊã©ÁöÑÁªìÊûú‰ºöÁõ¥Êé•ÂØºËá¥Á¨¨‰∫åÁßçÈÄâÊã©ÔºöÁúãÊõ¥Â§öÁöÑMSDNÊñáÊ°£Êù•ÂØªÊâæËß£ÂÜ≥ÊñπÊ≥ï„ÄÇÊàëÈÄâÊã©‰∫ÜÁ¨¨‰∏âÁßçÔºöÊîæÂºÉËøôÊ†∑ÁöÑÂ≠¶‰π†„ÄÇÂØπÂºÄÂèëËÄÖËÄåË®ÄËøôÁßçAPIÂºèÂ≠¶‰π†ÁöÑËÉåÂêéÊòØÂ∑®Â§ßÁöÑÂ≠¶‰π†ÊàêÊú¨ÔºåÊØïÁ´ü‰∏çÊòØÊâÄÊúâÂºÄÂèëËÄÖÈÉΩÊòØÂæÆËΩØMVPÔºåÊ≤°ÊúâÈÇ£‰πàÂ§ö‰∫∫‰ºöÁêÜËß£Ëøô‰∫õAPIËÉåÂêéÁöÑÊ†∏ÂøÉÊäÄÊúØÔºåWindows 8ÁöÑÂºÄÂèëËÄÖÂú®ÂÖ•Èó®Êó∂ÂÅöÂæóÊúÄÂ§öÁöÑ‰∏Ä‰ª∂‰∫ãÂ∫îËØ•Â∞±ÊòØÂú®Áî®ÊúâÈôêÁöÑÁ≤æÂäõÊµèËßàÊó†ÈôêÁöÑMSDNÊñáÊ°£ÔºåÂΩìÂæÆËΩØÊõ¥Êç¢‰∫ÜËäÇÂ•èÔºàË¢´Êõø‰ª£ÁöÑC++&#x2F;CLI‰æøÊòØÂ¶ÇÊ≠§Ôºâ‰Ω†Âè™Êúâ‰ªéÂ§¥Êù•Ëøá„ÄÇËÄå‰ªéËΩØ‰ª∂ÂÖ¨Âè∏ÁöÑËßíÂ∫¶Êù•ËØ¥ÔºåËøôÊ†∑ÁöÑAPI CoderÊ≤°ÊúâÂ§öÂ§ß‰ª∑ÂÄºÔºå‰ªñ‰ª¨ÈúÄË¶ÅÁöÑ‰ªÖ‰ªÖÊòØÊúâ‰∏™‰∫∫ÊåâÁÖßMSDNÊñáÊ°£‰∏äÁöÑÊé•Âè£Êù•Êää‰ª£Á†ÅÁªÑË£ÖËµ∑Êù•Ôºå‰Ω†‰∏çÂπ≤ÔºåÊÄª‰ºöÊâæÂæóÂà∞‰∫∫Êù•ÂÅö„ÄÇ‰Ωú‰∏∫‰∏Ä‰∏™Êúâ‰ª∑ÂÄºÁöÑProgrammerÔºåÊÉ≥ÊéåÊè°ÊéíÂ∫èÊü•ÊâæÂä†ÂØÜÁÆóÊ≥ï„ÄÅËµÑÊ∫êË∞ÉÂ∫¶„ÄÅAPIËÆæËÆ°ÔºüÊä±Ê≠âÔºåMSDNÊñáÊ°£ÈáåÊ≤°Êúâ„ÄÇ &amp;nbsp; APIÂíåÊé•Âè£Â≠¶‰π†ÁöÑËÉåÂêéÊòØÂæÆËΩØÁöÑÊ∏∏ÊàèËßÑÂàôÔºåÂæÆËΩØÁöÑÁ°ÆÂú®ÊääÂ§çÊùÇÁöÑÊäÄÊúØÁÆÄÂçïÂåñÔºå‰πüÊõæÁªèÂàõÈÄ†Âá∫‰∫ÜÂæàÂ§öÁªèÂÖ∏ÁöÑÊäÄÊúØÊ¶ÇÂøµÔºàÊØîÂ¶ÇMFCÁöÑRTTIÂà©Áî®ÂíåÊ∂àÊÅØÂæ™ÁéØ„ÄÅCOMÔºâ„ÄÇ‰ΩÜÊòØË∂äÊù•Ë∂äÂ§öÁöÑËßÑÂàôÂºÄÂßãÊö¥Èú≤‰∫Ü‰∏Ä‰∏™ÁõÆÁöÑÔºöÂ∑©Âõ∫Ëá™Â∑±ÁöÑÁéãÂõΩ„ÄÇÊ∏êÊ∏êÂú∞ÂºÄÂßãÊääÊäÄÊúØÁªÜËäÇÈöêËóèÔºåÈôç‰ΩéÂØπÂºÄÂèëËÄÖÁöÑÊô∫ÂïÜË¶ÅÊ±ÇÔºå‰ªéËÄåÂê∏ÂºïÂà∞Êõ¥Â§öÁöÑÂºÄÂèëËÄÖÔºàÂΩìÊàëÁúãÂà∞ÊäÄÊúØÁæ§ÈáåË∂äÊù•Ë∂äÂ§öÁöÑÂ§ßÂ≠¶ÁîüÁîöËá≥ÊòØ‰∏≠Â≠¶ÁîüÂú®Â≠¶‰π†Ëøô‰∏™ÔºåÂøÉÈáåÈÉΩËßâÂæóÂèØÊÉú‰∫ÜÔºåËá™Ë∫´ÂÖ¥Ë∂£Áà±Â•Ω‰πüÁΩ¢ÔºåÂ±ÖÁÑ∂ÊúâÈ´òÊ†°ÊääÂºÄÂèëWin 8 App‰Ωú‰∏∫ËÆ∫ÊñáËææÊ†áÊ†áÂáÜÔºâ„ÄÇÁ¨îËÄÖËá™Ë∫´Âú®Â≠¶‰π†ËøáÁ®ã‰∏≠Â∞±ÂæóÊó†Êó∂Êó†ÂàªÂπ∂‰∏îÊó†Êï∞Ê¨°Âú∞ÈÅµÂæ™ÁùÄÂæÆËΩØÁöÑÊ∏∏ÊàèËßÑÂàô„ÄÇWindows 8 ÁöÑMetro API‰∏≠ÈôêÂà∂‰ΩøÁî®Win32 Native APIÔºàÂá∫‰∫éÂÆâÂÖ®ËÄÉËôëÔºåÂèØ‰ª•ÁêÜËß£ÔºåÂê¨ËØ¥ÂæÆËΩØÊ≠£Âú®ÊÖ¢ÊÖ¢ÂºÄÊîæ‰∏ÄÈÉ®ÂàÜNative APIÔºâÔºå‰πãÂâçÁöÑWindowsÂºÄÂèëÁªèÈ™åÂÖ®ÈÉ®Êä•Â∫üÔºåÂÖ¨Âè∏ÁßØÁ¥ØÁöÑ‰ª£Á†ÅÂ§ßÈÉ®ÂàÜÈÉΩË¶ÅÈáçÂÜô„ÄÇÁÆó‰∫ÜÔºå‰ΩøÁî®Á¨¨‰∏âÊñπÂ∫ìÂêßÔºåÁªìÊûúÂ∫îÁî®ÂïÜÂ∫óÊèê‰∫§Êó∂Ê£ÄÊµãÂà∞‰Ω†ÁöÑ‰ª£Á†Å‰∏≠ÂåÖÂê´‚ÄùÂºÇÁ±ª‚ÄùÁöÑAPIÔºå‰∏çÁªô‰∫àÈÄöËøá„ÄÇË°åÔºåÊåâÁÖßÁ§∫‰æã‰ª£Á†ÅÂÆûÁé∞‰∫ÜÈÉ®ÂàÜÂäüËÉΩÔºåÁÑ∂ËÄåÊÉ≥ÂÆûÁé∞Ëøõ‰∏ÄÊ≠•ÂäüËÉΩÊó∂ÂèÇËÄÉ‰∫ÜÂÖ∂ÂÆÉÁ§∫‰æã‰ª£Á†ÅÔºàÂà´ËØ¥‰Ω†ÂàùÂ≠¶ÁöÑÊó∂ÂÄô‰∏çÊòØËøôÊ†∑ÁöÑÔºâÔºåÁªìÊûúÊãºÊé•Âú®‰∏ÄËµ∑ËøêË°åÔºåÂ•Ω‰∫ÜÔºåÊåÇ‰∫ÜÔºåÁ®ãÂ∫èÁöÑÂ†ÜÊ†àÊòæÁ§∫‰∏≠Êñ≠Âú®N‰∏™Ëé´ÂêçÂÖ∂Â¶ôÁöÑdll‰∏≠ÔºåÈô§‰∫ÜÂ∞ëÊï∞Âá†ÁßçÂºÇÂ∏∏BugÂèØ‰ª•ÊçïÊçâÔºàÂ§ßÂ§öÊï∞ÂºÄÂèëËÄÖÈÇ£Êó∂ÂÄôÂπ∂‰∏çÁü•ÈÅìËøô‰∫õÊñπÊ≥ïÔºåÂõ†‰∏∫‰∏çÂú®MSDN‰∏≠ÔºâÂ§ñ‰Ω†Âè™ËÉΩÂπ≤Áû™ÁúºÔºåÂøÉÈáåÈªòÈªòÂú∞Âøµ‰∏ÄÂè•‚ÄùËâπ‚ÄùÔºåÁÑ∂ÂêéÂú®ÂÖ∂ÂÆÉÁöÑÁ§∫‰æã‰ª£Á†Å‰∏≠ÂØªÊâæÂèØÊõø‰ª£ÁöÑÊñπÊ°àÔºåÊó†ËÆ∫ÊúÄÁªàÁöÑÊñπÊ°àËøêË°åÊïàÁéáÂ¶Ç‰ΩïÔºåÊ≠§Êó∂Ê≠§Âàª‰Ω†ÂøÉÈáåÊÉ≥Ë¶ÅÁöÑÂè™ÊòØÂèØ‰ª•ËøêË°åËµ∑Êù•ÁöÑ‰ª£Á†ÅÔºåÊ†πÊú¨‰∏ç‰ºöËÄÉËôëÂà´ÁöÑÈóÆÈ¢ò„ÄÇÁÑ∂ËÄå‰Ω†ËøòÊ≤°ÊúâËÄÉËôëÁî®Êà∑ÂÆûÈôÖÊìç‰Ωú‰∏ãÁöÑÂèØËÉΩË°å‰∏∫ÔºàÂæÆËΩØÊèêÂá∫ÂêéÂè∞ÊåÇËµ∑Ê¶ÇÂøµÂÖ∂ÂÆû‰πüÂπ∂‰∏çÊñ∞È≤úÔºå‰ΩÜÊòØÈ•±ÂèóËØüÁóÖÔºåÂΩìÊó∂ÊàëÈöèÊÑè‰ªéÂ∫îÁî®ÂïÜÂ∫ó‰∏ãËΩΩ‰∫ÜÂá†‰∏™AppÔºåÈöèÊÑèÂú∞Â§çÊùÇÊìç‰ΩúÂá†‰∏ãÔºåÊØè‰∏™ÂøÖÈó™ÈÄÄ„ÄÇÂÜçÁúãÁúãWindowsÂ∫îÁî®ÂïÜÂ∫óÈáåWin 8 ÁâàQQÁöÑËØÑËÆ∫Â∞±Áü•ÈÅì‰∫ÜÔºåËøûËÖæËÆØËøôÊ†∑ÁöÑÂ§ßÂÖ¨Âè∏ÂÜô‰∫ÜÂá†‰∏™ÁâàÊú¨ÁöÑWin 8 QQÈÉΩÊó†Ê≥ïÊîπÂèòÂÆÉÁöÑÂºÇÂ∏∏Èó™ÈÄÄÔºåÊõ¥‰ΩïÂÜµ‰∏∫Ëøô‰∫õÈóÆÈ¢òÊå£ÊâéÁöÑ‰Ω†Ôºâ„ÄÇÂ•Ω‰∫ÜÔºåÊ≠§Êó∂Ê≠§ÂàªÁ¨îËÄÖÂ∑≤ÁªèÊîπÂÆå‰∫ÜÊâÄÊúâÁöÑBugÔºåÂú®‰Ω†Êú¨Êú∫‰∏äËøêË°å‰∏ÄÂàáÊ≠£Â∏∏ÔºåÂú®Âπ≥ÊùøÊ†∑Êú∫‰∏ä‰πüOK‰∫ÜÔºåÊèê‰∫§Âà∞Â∫îÁî®ÂïÜÂ∫óÔºåÁªìÊûúË¢´ÊãíÁªù‰∫ÜÔºåÁêÜÁî±ÊòØÂ∫îÁî®Âä†ËΩΩÊó∂Èó¥ÂèñÂÜ≥‰∏éÂΩìÂâçÁöÑÁΩëÁªúÁéØÂ¢ÉÔºåÊ±óÔºåWindows StoreÂïÜÂ∫óÂ∫îÁî®Ëá™Ë∫´ÂêØÂä®Êó∂Èó¥ÁîöËá≥ÊØîÊàëÁöÑÂ∫îÁî®ËøòÊÖ¢ÔºåËÄå‰∏îÁªèÂ∏∏Êó†Ê≥ïÂä†ËΩΩ‰πüÊòØÂÖ¨ËÆ§ÁöÑ„ÄÇÊúÄÂêéÔºåÂΩªÂ∫ïÊîæÂºÉ‰∫Ü„ÄÇÊ∞¥Âπ≥ÊúâÈôêÔºåÊó†Ê≥ïÈ¢ÜÊÇüMSDNÁöÑÂº∫Â§ß„ÄÇ &amp;nbsp; ÈîôËØØÁöÑ‰∫ßÂìÅÂÆö‰Ωç„ÄÅÈ´òÊòÇÁöÑAPIÂ≠¶‰π†ÊàêÊú¨„ÄÅÂêÑÁßçAPIÈôêÂà∂‰∫é‰∏ÄË∫´„ÄÅÊï¥‰∏™ÂºÄÂèëËøáÁ®ãÂá†‰πéÊòØÂÖ®Êñ∞ÂºÄÂèëÔºåÊ≤°ÊúâÂ§öÂ∞ëÈáçÁî®ÁöÑÊ¶ÇÂøµÔºàËøôÁÇπËøòÊòØÂèØ‰ª•ÁêÜËß£ÔºåÊØïÁ´üÊòØ‰∏Ä‰∏™Êñ∞ÁöÑÂπ≥Âè∞Ôºâ„ÄÅÊó†ÂéòÂ§¥ÁöÑÂºÇÂ∏∏ÂíåÈó™ÈÄÄÔºàÂ¶ÇÊûúËØ¥Win8‰πãÁà∂Âè≤ËíÇÂ§´ ËæõËØ∫Â§´ÊñØÂü∫Âõ†‰∏∫ÊòØÂÅèÂπ≥ÂåñUIËÆæËÆ°ËÄåË¢´ÁÇíÈ±øÈ±ºÁöÑËØùÔºåÈÇ£‰πàÈÄ†ÊàêAppÂºÇÂ∏∏Èó™ÈÄÄÁöÑÊû∂ÊûÑÂ∏àÂ∞±Â∫îËØ•ÂÄíÊâ£Â∑•ËµÑ‰∫ÜÔºâËøô‰∫õÂõ†Á¥†Êó†ËÆ∫ÂÆÉ‰ª¨ÂêÑÂç†Â§öÂ∞ëËΩªÈáçÔºåÊÄª‰πãÂä†Ëµ∑Êù•Â∞±ÊòØSurfaceÁ≥ªÂàó‰∫ßÂìÅÂ§±Ë¥•ÁöÑÂÖ®ÈÉ®ÔºåËá≥Â∞ë‰Ωú‰∏∫‰∏Ä‰∏™ÊôÆÈÄöÁöÑÂºÄÂèëËÄÖÔºåÊàëÊòØËøô‰πàËÆ§‰∏∫ÁöÑ„ÄÇ","categories":[{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/tags/Windows/"}]},{"title":"ÂºÇÂ∏∏ÂÆâÂÖ®‰∏éÂºÇÂ∏∏Áã¨Á´ã","slug":"ÂºÇÂ∏∏ÂÆâÂÖ®‰∏éÂºÇÂ∏∏Áã¨Á´ã","date":"2013-07-18T07:21:58.000Z","updated":"2022-09-15T15:51:05.353Z","comments":true,"path":"2013/07/18/ÂºÇÂ∏∏ÂÆâÂÖ®‰∏éÂºÇÂ∏∏Áã¨Á´ã/","link":"","permalink":"https://unpluggedcoder.me/2013/07/18/%E5%BC%82%E5%B8%B8%E5%AE%89%E5%85%A8%E4%B8%8E%E5%BC%82%E5%B8%B8%E7%8B%AC%E7%AB%8B/","excerpt":"","text":"„ÄäExceptional C++„ÄãÈáåÊ∂âÂèäÂà∞‰∏§‰∏™Ê¶ÇÂøµÔºåÂºÇÂ∏∏ÂÆâÂÖ®ÂíåÂºÇÂ∏∏Áã¨Á´ã„ÄÇ ÂºÇÂ∏∏ÂÆâÂÖ®ÊòØÊåáÂú®ÂèëÁîüÂºÇÂ∏∏ÁöÑÊÉÖÂÜµ‰∏ãËÉΩÂ§üÊçïÊçâÂπ∂Â§ÑÁêÜÂºÇÂ∏∏ÔºåÂπ∂‰∏îÂºÇÂ∏∏ÂâçÂêéÂØπË±°Êàñ‰∏ä‰∏ãÊñáÁä∂ÊÄÅ‰∏ÄËá¥„ÄÅÊ≠£Á°Æ„ÄÇÂºÇÂ∏∏Áã¨Á´ãÊòØÊåáÂÖÅËÆ∏ÊúâÂèëÁîüÂºÇÂ∏∏ÁöÑÂèØËÉΩÔºå‰ΩÜËá™Ë∫´‰∏çÂ§ÑÁêÜÔºåÂ∞ÜËøô‰∏™ÂºÇÂ∏∏ËßÜ‰∏∫‰∏çÂèØÂøΩËßÜÁöÑÈóÆÈ¢ò‰ªéËÄå‰º†ÈÄíÁªôË∞ÉÁî®Êñπ„ÄÇËøôÈáå‰ªéÂÜÖÂ≠òÔºàÊàñËµÑÊ∫êÔºâÂàÜÈÖçÁöÑËßíÂ∫¶Êù•Áúã‰ªÄ‰πàÊ†∑ÁöÑ‰ª£Á†ÅËá≥Â∞ëÊòØÂºÇÂ∏∏ÂÆâÂÖ®ÂíåÂºÇÂ∏∏Áã¨Á´ãÁöÑ„ÄÇÂÅáËÆæÊüê‰∏™ÂÆπÂô®Á±ªÁöÑ‰∏Ä‰∏™Êã∑Ë¥ùÂáΩÊï∞Ôºö 123456789101112131415template&lt;class T&gt;T* NewCopy( const T* src, size_t srcsize, size_t destsize)&#123; assert( destsize &gt;= srcsize ); T* dest = new T[destsize]; // ÂºÇÂ∏∏Áã¨Á´ã try&#123; copy(src, src+srcsize, dest); // stl ÁÆóÊ≥ï &#125; catch(...) &#123; delete [] dest; // ÂºÇÂ∏∏ÂÆâÂÖ®Â§ÑÁêÜ throw; // ÈáçÊñ∞ÊäõÂá∫ÔºåÂºÇÂ∏∏Áã¨Á´ã &#125; return dest;&#125; ‰πãÊâÄ‰ª•new T[destsize]ËØ≠Âè•Ê≤°ÊúâÊîæÂú®tryÂùó‰∏≠Â§ÑÁêÜÊòØÂõ†‰∏∫Â¶ÇÊûúnew []()Âä®‰ΩúÂ§±Ë¥•ÔºåÂÜÖÂ≠òËøòÊ≤°ÊúâÂàÜÈÖçÔºåÊâÄ‰ª•‰∏çÂ≠òÂú®ÂÜÖÂ≠òÊ≥ÑÈú≤ÔºåÁõ¥Êé•Âêë‰∏äÊäõÂá∫bad_allocÂºÇÂ∏∏„ÄÇ‰ΩÜÊòØÂ¶ÇÊûúTÁöÑÊûÑÈÄ†ÂáΩÊï∞ÂèëÁîüÂºÇÂ∏∏ÔºåÊâÄÊúâÂ∑≤ÊûÑÈÄ†ÁöÑT‰ºöË¢´Ëá™Âä®ÈîÄÊØÅÔºådelete[ ]()‰πü‰ºöË¢´Ë∞ÉÁî®„ÄÇÂõ†Ê≠§newËøôÂè•Â±û‰∫éÂºÇÂ∏∏Áã¨Á´ã„ÄÇÁõ¥Âà∞newËØ≠Âè•ÂÆåÂÖ®ÊâßË°åÂÆåÊØïÂêéÔºåÊâçÊãÖË¥üËµ∑ÈáäÊîæÂÜÖÂ≠òÁöÑË¥£‰ªªÔºåÂõ†Ê≠§ÔºåÂ¶ÇÊûúÊ≠§Êó∂ÂèëÁîüÂºÇÂ∏∏Ôºå‰∏∫‰∫ÜÂºÇÂ∏∏ÂÆâÂÖ®ÂøÖÈ°ªÂú®ÊçïÊçâÂà∞ÂºÇÂ∏∏ÂêéÈáäÊîæÂÜÖÂ≠òÊàñËµÑÊ∫êÔºå‰ΩøÂÖ∂ÂõûÂà∞ÂáΩÊï∞Ë∞ÉÁî®ÂâçÁöÑÊ≠£Á°ÆÁä∂ÊÄÅ„ÄÇÁÑ∂ÂêéËΩ¨‰∏∫ÂºÇÂ∏∏Áã¨Á´ãÁöÑËÄÉËôë„ÄÇÂÅáÂ¶ÇTÁöÑoperator&#x3D;ÂèëÁîüÂºÇÂ∏∏ÔºåÂØºËá¥copyÊó†Ê≥ïÊâßË°åÔºåÈÇ£Ëøô‰∏™Êó†Ê≥ïÈÅøÂÖçÁöÑÂºÇÂ∏∏ÂØºËá¥‰∫ÜÈùûÈ¢ÑÊúüÁöÑÁªìÊûúÔºåÂ∞±ÂøÖÈ°ªÂÜçÈáçÊñ∞ÊäõÂá∫ÂºÇÂ∏∏„ÄÇ Êç¢Êàêauto_ptrÊàñËÄÖunique_ptr‰πãÁ±ªÁöÑÊô∫ËÉΩÊåáÈíàÈÇ£ÈóÆÈ¢òÂ∞±ËΩªÊùæÂ§ö‰∫ÜÔºåËøûtryÂùóÈÉΩÂèØ‰ª•ÂéªÊéâ„ÄÇ‰ΩÜÊòØ‰∏æËøô‰∏™‰æãÂ≠êÁöÑÁõÆÁöÑÊòØÊÄªÁªìÂºÇÂ∏∏ÂÆâÂÖ®ÂíåÂºÇÂ∏∏Áã¨Á´ãÁöÑ‰∏§ÁßçËßíÂ∫¶ËÄÉËôë„ÄÇÂ¶ÇÊûúËØ¥‰æãÂ≠ê‰∏≠‰∏çÊòØÊï∞ÊçÆÊã∑Ë¥ùÔºåËÄåÊòØÂ∞ÜÊï∞ÊçÆÂÜôÂÖ•Á£ÅÁõòÊñá‰ª∂ÔºåÈÇ£‰πàÂ∞±ÊúâÂêåÊ†∑ÁöÑËÄÉËôë„ÄÇ ‰∏™‰∫∫ËÆ§‰∏∫ÔºöÂØπËµÑÊ∫êÂàÜÈÖçÂâçÔºàor Ê≠£Âú®ÂàÜÈÖçÔºâÊàñËÄÖ‰∫ãÂä°ÂºÄÂßãÂâçÁöÑÈ¢ÑÂ§ÑÁêÜÂä®‰Ωú‰∏≠ÈÅáÂà∞ÁöÑÂºÇÂ∏∏Â∫îËØ•ÊåâÁÖßÂºÇÂ∏∏Áã¨Á´ãÊù•Â§ÑÁêÜÔºåÂõ†‰∏∫ÈÄöÂ∏∏Ê≠§Á±ªÂºÇÂ∏∏ÊòØÊó†Ê≥ïÈÅøÂÖçÁöÑ„ÄÅÂ§ñÈÉ®ÂØºËá¥ÁöÑ‰∏•ÈáçÂºÇÂ∏∏„ÄÇÂ∫îÂΩì‰∏çÂ§ÑÁêÜÔºåÈÄâÊã©Áõ¥Êé•Ëá™Âä®ÊäõÂá∫„ÄÇ ÂØπËµÑÊ∫êÂ∑≤ÁªèÂàÜÈÖçÊàñËÄÖ‰∫ãÂä°Â∑≤ÁªèÂºÄÂßãÂ§ÑÁêÜÔºàÂºÄÂßãÂÜôÂÖ•Êñá‰ª∂ or Êï∞ÊçÆÂ∑≤Ë¢´‰øÆÊîπÔºâÂà∞ÊúÄÂêéÂÆåÊàêÁä∂ÊÄÅ‰∏≠ÂèëÁîüÁöÑÂºÇÂ∏∏ÂøÖÈ°ªË¶ÅÊåâÁÖßÂºÇÂ∏∏ÂÆâÂÖ®Êù•Â§ÑÁêÜÔºå‰ΩøÂÖ∂ÂõûÂà∞Ê≠£Á°ÆÁöÑÁä∂ÊÄÅÔºàÁî®Êï∞ÊçÆÂ∫ìÈáåÁöÑÊúØËØ≠Âè´ÂõûÊªöÔºårollbackÔºâ„ÄÇÂ¶ÇÊûúÊòØÂèØ‰ª•Hold‰ΩèÁöÑÂèØÈ¢ÑËßÅÂºÇÂ∏∏ÔºåÈÇ£‰πàÁ®ãÂ∫èÂèØ‰ª•ÁªßÁª≠ÊâßË°åÔºõÂ¶ÇÊûúÊòØ‰∏çÂèØÈ¢ÑËßÅÁöÑÂºÇÂ∏∏Ôºà‰∏ä‰æã‰∏≠ÁöÑÊ®°ÊùøÂèÇÊï∞Á±ªÂûãTÔºâÔºåÈÇ£ÂøÖÈ°ªÈáçÊñ∞ÊäõÂá∫„ÄÇ","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"exception","slug":"exception","permalink":"https://unpluggedcoder.me/tags/exception/"}]},{"title":"PocoÁ±ªÁªßÊâø‰ΩìÁ≥ªÁªìÊûÑÁâπÊÄßÂàÜÊûê","slug":"PocoÁ±ªÁªßÊâø‰ΩìÁ≥ªÁªìÊûÑÁâπÊÄßÂàÜÊûê","date":"2013-07-10T18:10:30.000Z","updated":"2022-09-15T15:51:05.346Z","comments":true,"path":"2013/07/11/PocoÁ±ªÁªßÊâø‰ΩìÁ≥ªÁªìÊûÑÁâπÊÄßÂàÜÊûê/","link":"","permalink":"https://unpluggedcoder.me/2013/07/11/Poco%E7%B1%BB%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%89%B9%E6%80%A7%E5%88%86%E6%9E%90/","excerpt":"","text":"ÊúÄËøëÂú®Â≠¶‰π†Êé•Âè£Á±ªÁöÑÂá†ÁßçËÆæËÆ°ÊñπÂºèÊó∂ÔºåÊÉ≥Ëµ∑‰∫ÜPocoÂ∫ìÔºåÁúãÁúãPoco C++Â∫ìÊ∫êÁ†ÅÊòØÂ¶Ç‰ΩïÂÆûÁé∞Êé•Âè£Á±ª„ÄÇËøôÈáåÊâÄËØ¥ÁöÑÊé•Âè£Á±ªÂú®‰∏ÄËà¨Ê¶ÇÂøµ‰∏äËÆ≤Êàë‰ºöËÆ§‰∏∫ÊòØÂè™ÂÖ∑ÊúâÁ∫ØËôöÊé•Âè£ÂáΩÊï∞Â£∞ÊòéÁöÑÁ±ªÔºå‰ΩÜÊòØÁúãÂÆåPocoÁöÑ‰∏ÄÈÉ®ÂàÜÊ∫êÁ†ÅÂêéÔºåÊàëËßâÂæó‚ÄúÊé•Âè£Á±ª‚ÄùÁöÑÊ¶ÇÂøµ‰∏ç‰ªÖÂ±ÄÈôê‰∫éÊ≠§ÔºåÁúãÊù•ÊàëÂ≠¶ËØÜÂ∞öÊµÖ„ÄÇÊâÄÂπ∏RPÊØîËæÉÁªôÂäõÔºåËÆ©ÊàëÊ≠£Â•ΩÂú®Áúã„ÄäC++‰ª£Á†ÅËÆæËÆ°‰∏éÈáçÁî®„Äã‰∏Ä‰π¶‰∏≠ÁúãÂà∞‰∫ÜËøô‰∏§ÁßçÊâãÊ≥ï„ÄÇ ÁªßÊâøÂü∫Á±ªÁöÑÊé•Âè£ÂÖàËØ¥ËØ¥‰∏ÄËà¨ÁöÑÊé•Âè£Á±ªÔºåÈÄöÂ∏∏ÊÉÖÂÜµ‰∏ãÂÆÉÊòØ‰∏™ËôöÂü∫Á±ªÔºåÂè™ÂÆö‰πâ‰∫ÜËôöÂáΩÊï∞Êé•Âè£ÔºåËøôÊ†∑ÁöÑ‰ºòÁÇπÂæàÂ§öÔºö Âêë‰ΩøÁî®ËÄÖÈöêËóè‰∫ÜÊé•Âè£ÂÆûÁé∞ÁöÑÂÖ∑‰ΩìÁªÜËäÇ ‰ΩøÁî®ËÄÖÊó†ÈúÄÁü•ÊôìÊé•Âè£ÂêÑ‰∏™Â≠êÁ±ªÁöÑÁªßÊâø‰ΩìÁ≥ª ÊúÄÂ§ßÁöÑ‰ºòÁÇπÂ∫îËØ•ÊòØÂÖ∂ËØ≠Ë®ÄÂ§öÊÄÅÊÄßË∑®Ë∂ä‰∫Ü‰∫åËøõÂà∂Áªü‰∏ÄÊé•Âè£ÁöÑÈöúÁ¢ç Êàë‰ª•ÊØîËæÉÊôÆÈÅçÁöÑË∑®Âπ≥Âè∞Êé•Âè£Á±ªËÆæËÆ°‰∏∫‰æãÔºåÂÖ∑‰Ωì‰ª£Á†ÅÂèØËÉΩÂ¶Ç‰∏ãÔºö 1234567891011121314class InterfaceBase&#123;public: virtual void InterfaceMethod()=0;&#125;;class InterfaceImpl : public InterfaceBase&#123;public: virtual void InterfaceMethod() &#123;// Win32 Implementation ... &#125;&#125;; UMLÁ±ªÂõæÂ¶Ç‰∏ãÔºö ÁªßÊâøÂü∫Á±ªÁöÑÂÆûÁé∞ÔºàÂèçÂêëÊé•Âè£ÂÆûÁé∞ÁªßÊâøÔºâÁé∞Âú®ËØ¥ËØ¥Poco C++Â∫ì‰∏≠ÈÉ®ÂàÜÁ±ªÁöÑÁªßÊâø‰ΩìÁ≥ªÁªìÊûÑ„ÄÇ ÂÖ∂‰∏≠ËÆ∏Â§öÁ±ªÈááÁî®‰∫Ü‰∏ÄÁßçÁõ∏ÂèçÁöÑÊé•Âè£Á±ªÁªßÊâø‰ΩìÁ≥ªÔºåÁõ∏ÊØî‰∫é‰π¶‰∏≠ÁöÑ‚ÄúÁªßÊâøÂü∫Á±ªÁöÑÂÆûÁé∞‚ÄùÔºåÊàëÊõ¥‰πêÊÑèÁß∞‰πã‰∏∫ÂèçÂêëÊé•Âè£ÂÆûÁé∞ÁªßÊâøÁªìÊûÑ„ÄÇ‰πüÂ∞±ÊòØËØ¥ÂâçÈù¢ÊâÄÊèèËø∞ÁöÑÊé•Âè£Á±ª‰∏≠ÔºåÂêÑÁßçÂèØËÉΩÁöÑÂ≠êÁ±ªÂÆûÁé∞ÊñπÊ≥ïË¢´ÊîæÂà∞‰∫ÜÁªßÊâø‰ΩìÁ≥ªÁöÑ‰∏äÂ±ÇÔºåÂç≥‰Ωú‰∏∫Âü∫Á±ª„ÄÇ‰ª•PocoÁöÑ‰æãÂ≠êÊù•ËØ¥Â∞±ÊòØÂêÑ‰∏™Âπ≥Âè∞Áõ∏ÂÖ≥ÁöÑ‰ª£Á†Å‰∏çÊòØÁªßÊâø‰∫éÊüê‰∏™ÊèèËø∞Êé•Âè£ÁöÑËôöÂü∫Á±ªÔºåËÄåÊòØË¢´‚ÄúÊé•Âè£‚ÄùÁ±ªÁªßÊâø„ÄÇ PocoÁöÑÁ∫øÁ®ãÁ±ªThread.hÂ¶Ç‰∏ã,‰∏∫‰∫Ü‰æø‰∫éÁêÜËß£ÔºåÊàëÂéªÊéâ‰∫Ü‰∏Ä‰∫õ‰ª£Á†ÅÔºö 123456789101112131415161718// Thread.h‚Ä¶#if defined(POCO_OS_FAMILY_WINDOWS)#if defined(_WIN32_WCE)#include &quot;Poco/Thread_WINCE.h&quot;#else#include &quot;Poco/Thread_WIN32.h&quot;#endif#elif defined(POCO_VXWORKS)#include &quot;Poco/Thread_VX.h&quot;#else#include &quot;Poco/Thread_POSIX.h&quot;#endif‚Ä¶class Thread: private ThreadImpl&#123;‚Ä¶&#125;; ‰ªéËøôÊÆµ‰ª£Á†Å‰∏≠Â∫îËØ•ÁúãÂà∞‰∏§ÁÇπÔºö ThreadImplÂú®‰∏çÂêåÂπ≥Âè∞ÁöÑÂ§¥Êñá‰ª∂‰∏≠Ë¢´Â£∞ÊòéÔºåÂπ∂Áî±ÂÆèÂÆö‰πâÊéßÂà∂Âú®ÁºñËØëÂâçÂ∞±Âå∫ÂàÜÂêÑÂπ≥Âè∞„ÄÇ ÂÖ≥‰∫éÁªßÊâø‰∏Ä‰∏™Á±ªÁöÑÂÆûÁé∞ÔºåËÄå‰∏çÊîπÂèòÂÖ∂Ëá™Ë∫´ÂÆûÁé∞ÔºåÊúÄÂ•ΩÁöÑÊñπÊ≥ïÂ∞±ÊòØprivateÁªßÊâøÊñπÂºèÔºåË°®ÊòéÂ≠êÁ±ªÂÆåÂÖ®Âà©Áî®Âü∫Á±ªÁöÑÂáΩÊï∞ÂÆûÁé∞ËÄå‰∏çÊö¥Èú≤ÁªôÂØπË±°Â§ñÈÉ®„ÄÇÔºàÂÖ∂ÂÆûËøôÈáå‰ΩøÁî®ÁªßÊâøÁöÑÊñπÊ≥ïËøòÊúâ‰∫õÂÜÖÂÆπÔºåÊàëÁïôÂú®ÊñáÁ´†ÊúÄÂêéËØ¥ËØ¥ÔºâÂõ†Ê≠§ÔºåÊâÄÊúâÁöÑÂÆûÁé∞‰ª£Á†ÅÂú®Âü∫Á±ª‰∏≠Ë¢´Âå∫ÂàÜÔºå‰∏çÂêåÁöÑÂπ≥Âè∞Êìç‰ΩúÂú®Â≠êÁ±ªÁúãÊù•ÈÉΩÊòØÁªü‰∏ÄÁöÑÊé•Âè£ÂáΩÊï∞ÔºåËøô‰∫õÂáΩÊï∞Â∑≤ÁªèÁî±Âü∫Á±ªÂ£∞ÊòéÂπ∂ÂÆö‰πâ‰∫ÜÔºåÂ≠êÁ±ªÁªßÊâøËÄåÊù•„ÄÇ Êù•ÁúãPocoÂ∫ìÁöÑThread.cpp‰∏≠Â≠êÁ±ªÊòØÂ¶Ç‰ΩïË∞ÉÁî®Âü∫Á±ªÁöÑÂêÑ‰∏™ÂÆûÁé∞ÂáΩÊï∞Ôºö 12345678910111213141516171819202122232425262728// Thread.cpp‚Ä¶void Thread::start(Runnable&amp;amp; target)&#123; startImpl(target);&#125;void Thread::start(Callable target, void* pData)&#123; startImpl(target, pData);&#125;void Thread::join()&#123; joinImpl();&#125;void Thread::join(long milliseconds)&#123; if (!joinImpl(milliseconds)) throw TimeoutException();&#125;bool Thread::tryJoin(long milliseconds)&#123; return joinImpl(milliseconds);&#125;‚Ä¶ ÊâÄÁúãÂà∞ÁöÑ***ImplÂáΩÊï∞Â∞±ÊòØÂú®Âü∫Á±ªThreadImpl‰∏≠Â∑≤ÁªèË¢´ÂÆûÁé∞‰∫ÜÁöÑÂáΩÊï∞ÔºåÂ≠êÁ±ªÊó†ÈúÄÂÖ≥ÂøÉÂêÑ‰∏™Âπ≥Âè∞ÁöÑÊ†∏ÂøÉ‰ª£Á†ÅÂ¶Ç‰ΩïÂÆûÁé∞ÔºåÂè™ÈúÄË¶ÅÁü•ÈÅìË¶ÅÂÅöÂá∫Âì™‰∫õÁªü‰∏ÄÁÆÄÂçïÁöÑË∞ÉÁî®Âä®‰Ωú„ÄÇÂ∞±Â•ΩÊØîÂèëÂ∞ÑÂç´ÊòüÔºåÊØè‰∏™ÂõΩÂÆ∂ÈÉΩÊúâ‰∏çÂêåËøêËΩΩÊñπÂºèÂ∞ÜÂç´ÊòüÈÄÅÂÖ•ËΩ®ÈÅìÔºå‰ΩÜÊòØÂú®Â§ñÁïåÁúãÊù•‰ªñ‰ª¨ÈÉΩÂè™ÈúÄË¶ÅÂèëÂá∫‰∏Ä‰∏™‚ÄúÂèëÂ∞Ñ‚ÄùÂëΩ‰ª§Âç≥ÂèØ„ÄÇ UMLÂõæÂ¶Ç‰∏ãÔºö ‰∏™‰∫∫ÊÄªÁªì‰∏ãËøô‰∏§ÁßçÊñπÂºèÁöÑ‰ºòÁº∫ÁÇπÔºö È¶ñÂÖàÔºåÊó†ÁñëÂâçËÄÖÊúÄÂ§ßÁöÑ‰ºòÂäøÊòØË∑®Ë∂ä‰∫ÜABIÔºàÂ∫îÁî®Á®ãÂ∫è‰∫åËøõÂà∂Êé•Âè£ÔºâÁïåÈôêÔºåËÄåÂêéËÄÖÂæÄÂæÄÂú®Âü∫Á±ªÁöÑ‰∏≠ÂåÖÂê´‰∫ÜÂêÑÁßçÂπ≥Âè∞Áõ∏ÂÖ≥ÁöÑÊï∞ÊçÆÁªìÊûÑÔºåÊó†Ê≥ïË¢´ÂêÑÁßçÁºñËØëÂô®ÊâÄÁõ∏ÂÆπ„ÄÇ ÂÖ∂Ê¨°ÔºåÂâçËÄÖÂú®‰ª£Á†ÅÂàÜÂèë‰∏äÂêåÊ†∑ÂÖ∑Êúâ‰ºòÂäøÔºåÂÆÉÂè™ÈúÄÂèëÂ∏É‰∏Ä‰∏™ÁÆÄÂçïÁöÑÊé•Âè£Á±ªÂ£∞ÊòéÁöÑÂ§¥Êñá‰ª∂Âç≥ÂèØÂêëÂ§ñÈÉ®Âëä‰πãËá™Ë∫´ÁöÑÂäüËÉΩ„ÄÇËÄåÂêéËÄÖÁî±‰∫éËøûÂêåÂπ≥Âè∞ÂÆûÁé∞ÁöÑÂÖ∑‰ΩìÁ±ªÂ£∞ÊòéÂ§¥Êñá‰ª∂‰πüË¢´include‰∫ÜÔºåÈÇ£Êó†Áñë‰ºöÂ¢ûÂä†ÂêÑ‰∏™ÁªÑ‰ª∂‰πãÈó¥ÁöÑÂ§çÊùÇÂ∫¶ÔºåÂπ∂‰∏îÊö¥Èú≤‰∫ÜÂπ≥Âè∞Áõ∏ÂÖ≥ÁöÑÂÆûÁé∞ÁªÜËäÇ„ÄÇ ‰ΩÜÊòØÔºåPocoÊòØÂºÄÊ∫êÁöÑÔºåÊèêÂÄ°‰ΩøÁî®ËÄÖÊääPoco‰ª£Á†ÅÂµåÂÖ•Âà∞‰ªñ‰ª¨ÁöÑ‰ª£Á†Å‰∏≠„ÄÇÂ¶ÇÊûúÈúÄË¶ÅÂàÜÂèëÁªÑ‰ª∂Êé•Âè£ÔºåÂ§ßÂèØ‰ª•‰ΩøÁî®ÂåÖÊã¨Á¨¨‰∏ÄÁßçÊñπÊ≥ïÂú®ÂÜÖÁöÑËÆ∏Â§öÁßçÊñπÂºè„ÄÇ‰∏™‰∫∫ËÆ§‰∏∫Á¨¨‰∫åÁßçÂÅöÊ≥ï‰∏Ä‰∏™ÂæàÂ§ßÁöÑ‰ºòÂäø‰πüÂ∞±Âú®‰∫éÔºöÁ±ªÂú®Ê®°ÂùóÔºàÊàñÁªÑ‰ª∂ÔºâÁöÑÂÜÖÈÉ®Êé•Âè£ÂÖ±‰∫´„ÄÇËøôÁßçÊñπÊ≥ï‰∏çÊèêÂÄ°Âú®Ê®°ÂùóÔºàÊàñÁªÑ‰ª∂ÔºâÈó¥Êª•Áî®„ÄÇ‰∏™‰∫∫ËßâÂæóÈúÄË¶ÅËøôËøòÊòØÈúÄË¶ÅÁ®ãÂ∫èÂëòËá™Ë∫´ÁöÑËßâÊÇüÊù•ÊéßÂà∂‰ª£Á†ÅÂ§çÊùÇÂ∫¶ÔºåËøôÂ∫îËØ•PocoÁöÑÁêÜÂøµÊòØ‰∏ÄËá¥ÁöÑÔºöÈÅµÂÆà‰ª£Á†Å‰πãÈó¥ÁöÑÁ∫¶ÂÆö„ÄÇÂèçËøáÊù•ÊÉ≥ÊÉ≥ÔºåÁöÑÁ°Æ‰πüÊòØÂ¶ÇÊ≠§ÔºåÂæàÂ§öÊó∂ÂÄôÂæàÂ§ö‰ª£Á†ÅÂ§ÑÊàë‰ªÖ‰ªÖÂè™ÈúÄË¶ÅÁöÑÊòØ‰∏ÄÂè•ÁÆÄÂçïÁöÑÔºö 1Thread myThread; ËÄåÁ¨¨‰∏ÄÁßçÁªßÊâøÂü∫Á±ªÁöÑÊé•Âè£ÊñπÊ≥ïÂ∏∏ÂÅöÁöÑ‰∫ãÊÉÖÂ∞±ÊòØÔºö 1234ISomeInterface* pInterface;switch(***)case ****:pInterface= new ISomeInterfaceImpl; Â•Ω‰∫ÜÔºåÂÜçÊù•ËØ¥ËØ¥Á¨¨‰∫åÁßçÊñπÂºèÁªßÊâøÊé•Âè£ÁöÑÂÆûÁé∞‰∏≠ÁöÑÁªßÊâø„ÄÇ Â•ΩÁöÑÁªßÊâøÊàë‰ª¨ÊÄªÊòØÂèØ‰ª•ÊääÂÆÉÁî®is-aÁöÑËØ≠‰πâÊù•Ëß£ÈáäÊ∏ÖÊ•öÔºå‰ΩÜÊòØËøôÈáåÁöÑThreadÂπ∂‰∏çÊòØThreadImplÁöÑ‰∏ÄÁßçÔºåÂõ†‰∏∫Âú®ÁºñËØëÊó∂ÊúüÔºåThreadÂíåThreadImplÊòØ‰∏§‰∏™Âπ≥Ë°åÁöÑÊ¶ÇÂøµ„ÄÇÊâÄ‰ª•Êúâ‰∫õÊ∫êÁ†Å‰∏≠ÔºàÂåÖÊã¨PocoËá™Ë∫´Ôºâ‰ºö‰ª•ÁªÑÂêàÁöÑÊñπÂºèÂá∫Áé∞ÔºåÊØîÂ¶ÇPoco NetÂ∫ì‰∏≠ÁöÑNetworkInterface.hÔºö 123456789101112131415161718192021222324252627// NetworkInterface.hclass NetworkInterfaceImpl; //ÂâçÁΩÆÂ£∞Êòéclass NetworkInterface&#123;‚Ä¶private: NetworkInterfaceImpl* _pImpl; // ÁªÑÂêà‰ª£ÊõøÁªßÊâø&#125;;&lt;/pre&gt;NetworkInterface.cpp‰∏≠ÂêåÊ†∑ÂèØ‰ª•Ëá™Áî±ÁöÑË∞ÉÁî®Êé•Âè£„ÄÇ&lt;pre class=&quot;brush:cpp&quot;&gt;// NetworkInterface.cpp‚Ä¶int NetworkInterface::index() const&#123; return _pImpl-&amp;gt;index();&#125;const std::string&amp;amp; NetworkInterface::name() const&#123; return _pImpl-&amp;gt;name();&#125;const std::string&amp;amp; NetworkInterface::displayName() const&#123; return _pImpl-&amp;gt;displayName();&#125;‚Ä¶ UMLÂõæÂ∞±‰∏çÁîª‰∫ÜÔºåÂ§úÊ∑±‰∫Ü‚Ä¶‚Ä¶","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"Poco C++","slug":"Poco-C","permalink":"https://unpluggedcoder.me/tags/Poco-C/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã6‚Äî‚ÄîÊô∫ËÉΩÊåáÈíà","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã6‚Äî‚ÄîÊô∫ËÉΩÊåáÈíà","date":"2013-06-28T15:41:28.000Z","updated":"2022-09-15T15:51:05.344Z","comments":true,"path":"2013/06/28/C++11Â≠¶‰π†Á¨îËÆ∞‰πã6‚Äî‚ÄîÊô∫ËÉΩÊåáÈíà/","link":"","permalink":"https://unpluggedcoder.me/2013/06/28/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B6%E2%80%94%E2%80%94%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/","excerpt":"","text":"auto_ptrauto_ptrÊòØÂü∫‰∫écopyËØ≠‰πâÁöÑÊô∫ËÉΩÊåáÈíàÔºåÂÆÉÂÆûÁé∞‰∫Üoperator&#x3D;ËøêÁÆóÔºåËøôÊ†∑ÈöêÊô¶ÁöÑÊã•ÊúâÊùÉËΩ¨Áßª‰πüÂØºËá¥‰∫ÜÂÆÉË¢´C++11ÈÅóÂºÉ„ÄÇËÄÉËôë‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 12345auto_ptr&lt;int&gt; smartPtr1( new int);&#123; auto_ptr&lt;int&gt; smartPtr2= smartPtr1;&#125;int *ptr = smartPtr1.get(); // get NULL pointer here ÂéüÊúâÁöÑsmartPtr1Â∑≤ÁªèÂ∞ÜÊâÄÊúâÊùÉ‰ª•ËøôÁßçÈöêÂºècopyËØ≠‰πâ‰º†ÈÄíÂá∫ÂéªÔºåËÄåÂØπÁ®ãÂ∫èÁåøÊù•ËØ¥ËøôÊ†∑ÂæàÂÆπÊòìÂºïËµ∑ËØØÊìç‰Ωú„ÄÇ unique_ptrunique_ptrÊòØÁî®Êù•Êõø‰ª£auto_ptrÁöÑÊñ∞ÁöÑÊô∫ËÉΩÊåáÈíàÔºåÂÆÉ‰ΩøÁî®ÁöÑÊòØmoveËØ≠‰πâÔºåÂøÖÈ°ªÁî±Á®ãÂ∫èÁåøÊòéÁ°ÆÂú∞‰ΩøÁî®std::moveÊù•ÊåáÂÆöÊåáÈíàÊâÄÊúâÊùÉÁöÑËΩ¨Áßª„ÄÇunique_ptr‰∏≠Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÂíåËµãÂÄºËøêÁÆóÈÉΩË¢´Â£∞Êòé‰∏∫privateÔºö 123private: unique_ptr(const _Myt&amp;amp;); // not defined operator=(const _Myt&amp;amp;); // not defined Áª¥Âü∫ÁôæÁßë‰∏äÁöÑ‰æãÂ≠êÂæàÁÆÄÂçïÔºåÊãøÊù• 123456std::unique_ptr&lt;int&gt; p1(new int(5));std::unique_ptr&lt;int&gt; p2 = p1; // ÁºñËØë‰ºöÂá∫Èîôstd::unique_ptr&lt;int&gt; p3 = std::move(p1); // ËΩ¨ÁßªÊâÄÊúâÊùÉ, Áé∞Âú®ÈÇ£ÂùóÂÜÖÂ≠òÂΩíp3ÊâÄÊúâ, p1Êàê‰∏∫Êó†ÊïàÁöÑÊåáÈíà.p3.reset(); //ÈáäÊîæÂÜÖÂ≠ò.p1.reset(); //ÂÆûÈôÖ‰∏ä‰ªÄ‰πàÈÉΩÊ≤°ÂÅö. Ë¶Å‰ΩøÁî®Êñ∞ÁöÑunique_ptr‰πüÂæàÁÆÄÂçïÔºåÁõ¥Êé•Áî±Êü•Êâæ&#x2F;ÊõøÊç¢ÊâÄÊúâÁöÑauto_ptrÂç≥ÂèØ„ÄÇ shared_ptr and weak_ptrshard_ptr‰ΩøÁî®ÂºïÁî®ËÆ°Êï∞ÔºåÂ§ö‰∏™shared_ptrÂèØ‰ª•ÂÖ±‰∫´‰∏Ä‰∏™ÊåáÈíàÔºåÂè™ÊúâÊúÄÂêé‰∏Ä‰∏™shared_ptrÈîÄÊØÅÊó∂ÊâçÈáäÊîæÂÜÖÂ≠òÔºå‰ΩÜÊòØÂèàÊúâÂæ™ÁéØËÆ°Êï∞ÁöÑÈóÆÈ¢òÂá∫Áé∞ÔºåÂõ†Ê≠§ÂºïÂÖ•weak_ptrÔºåÂè™ÂºïÁî®Ôºå‰∏çËÆ°Êï∞ÔºåÂ¶ÇÊûú‰∏ÄÂùóÂÜÖÂ≠òË¢´shared_ptrÂíåweak_ptrÂêåÊó∂ÂºïÁî®, ÂΩìÊâÄÊúâshared_ptrÊûêÊûÑ‰∫Ü‰πãÂêé,‰∏çÁÆ°ËøòÊúâÊ≤°Êúâweak_ptrÂºïÁî®ËØ•ÂÜÖÂ≠ò, ÂÜÖÂ≠ò‰πü‰ºöË¢´ÈáäÊîæ. ÊâÄ‰ª•weak_ptr‰∏ç‰øùËØÅÂÆÉÊåáÂêëÁöÑÂÜÖÂ≠ò‰∏ÄÂÆöÊòØÊúâÊïàÁöÑ, Âú®‰ΩøÁî®‰πãÂâçÈúÄË¶ÅÊ£ÄÊü•.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"},{"name":"auto_ptr","slug":"auto-ptr","permalink":"https://unpluggedcoder.me/tags/auto-ptr/"},{"name":"shared_ptr","slug":"shared-ptr","permalink":"https://unpluggedcoder.me/tags/shared-ptr/"},{"name":"SmartPointer","slug":"SmartPointer","permalink":"https://unpluggedcoder.me/tags/SmartPointer/"},{"name":"unique_ptr","slug":"unique-ptr","permalink":"https://unpluggedcoder.me/tags/unique-ptr/"},{"name":"weak_ptr","slug":"weak-ptr","permalink":"https://unpluggedcoder.me/tags/weak-ptr/"}]},{"title":"C++‰∫ã‰ª∂ÂßîÊâò‚Äî‚ÄîÂú®Poco C++ Libraries‰∏≠ÁöÑÂÆûÁé∞ÔºàÈó≤ÁùÄÊó†ËÅäÔºåËß£Êûê‰∏ãÊ∫êÁ†ÅÔºâ","slug":"C++‰∫ã‰ª∂ÂßîÊâò‚Äî‚ÄîÂú®Poco C++ Libraries‰∏≠ÁöÑÂÆûÁé∞ÔºàÈó≤ÁùÄÊó†ËÅäÔºåËß£Êûê‰∏ãÊ∫êÁ†ÅÔºâ","date":"2013-01-17T09:08:16.000Z","updated":"2022-09-15T15:51:05.344Z","comments":true,"path":"2013/01/17/C++‰∫ã‰ª∂ÂßîÊâò‚Äî‚ÄîÂú®Poco C++ Libraries‰∏≠ÁöÑÂÆûÁé∞ÔºàÈó≤ÁùÄÊó†ËÅäÔºåËß£Êûê‰∏ãÊ∫êÁ†ÅÔºâ/","link":"","permalink":"https://unpluggedcoder.me/2013/01/17/C++%E4%BA%8B%E4%BB%B6%E5%A7%94%E6%89%98%E2%80%94%E2%80%94%E5%9C%A8Poco%20C++%20Libraries%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%88%E9%97%B2%E7%9D%80%E6%97%A0%E8%81%8A%EF%BC%8C%E8%A7%A3%E6%9E%90%E4%B8%8B%E6%BA%90%E7%A0%81%EF%BC%89/","excerpt":"","text":"ÂÖàÂÅö‰∏ÄÊÆµÁøªËØëÂêßÔºåÊØïÁ´üËøô‰∏™Â∫ìÁõÆÂâçÁî®ÁöÑ‰∫∫Ëøò‰∏çÂ§öÔºå‰ΩÜÊòØÁöÑÁ°ÆÊòØ‰∏Ä‰∏™‰ºòÁßÄÁöÑË∑®Âπ≥Âè∞C++ libraries„ÄÇ Poco C++Â∫ìÊòØÁî±‰∏ÄÁ≥ªÂàóÂºÄÊ∫êÁöÑC++Á±ªÂ∫ìÁªÑÊàêÔºåÂèØ‰ª•ÈùûÂ∏∏ÁÆÄÂçïÈ´òÊïàÂú∞ÂºÄÂèëÂá∫ÂèØÁßªÊ§çÁöÑË∑®Âπ≥Âè∞C++Á®ãÂ∫èÔºàÂåÖÂê´Ë∑®Âπ≥Âè∞ÁöÑÁΩëÁªúÁ±ªÂ∫ìÁ≠âÔºâ„ÄÇÂèØ‰ª•Âú®ËøôÈáåËé∑ÂæóÔºöhttps://pocoproject.org/index.html Poco C++Â∫ì‰∏ç‰ªÖÂÆåÂÖ®ÂÖºÂÆπC++Ê†áÂáÜÂ∫ìÔºåÊõ¥Âº•Ë°•‰∫ÜÂæàÂ§öÊ†áÂáÜÂ∫ìÁöÑ‰∏çË∂≥ÔºàC++11ÂêåÊ†∑‰πüË°•ÂÖÖ‰∫ÜÂæàÂ§öÊñ∞Ê†áÂáÜÔºå‰ΩÜÊòØÁõÆÂâçÂ∏ÇÂú∫‰∏äÊ≤°Êúâ‰∏Ä‰∏™ÁºñËØëÂô®ËÉΩÂ§üÂÆåÂÖ®ÊîØÊåÅÔºâ„ÄÇ‰∏™‰∫∫ËÆ§‰∏∫Áõ∏ÊØî‰∫éÂÖ∂ÂÆÉC++Á®ãÂ∫èÂ∫ìÔºà‰æãÂ¶Çboost C++ÔºâÔºåPocoÂèØ‰ª•ËØ¥ÊòØÈùûÂ∏∏Áü≠Â∞èÁ≤æÊÇç„ÄÇËÄå‰∏îÈ´òÂ∫¶ÁöÑÊ®°ÂùóÂåñÂíåÈ´òÊïàÁöÑËÆæËÆ°‰∏éÂÆûÁé∞ËÆ©PocoÈùûÂ∏∏ÈÄÇÂêàÂµåÂÖ•ÂºèÂ∫îÁî®„ÄÇPocoÂÖÖÂàÜÂà©Áî®‰∫ÜC++ÁöÑÁâπÊÄßÔºöÈù¢ÂêëÂ∫ïÂ±ÇÁöÑÊéåÊéßÔºàËÆæÂ§á I&#x2F;OÁ≠âÁ≠âÔºâÂíåÈ´òÂ±ÇÁöÑÈù¢ÂêëÂØπË±°ÂºÄÂèë„ÄÇËøô‰πüÊòØ‰ºòÁßÄÁöÑC++Á®ãÂ∫èÂ∫ìÂ∫îËØ•ÂÖ∑Â§áÁöÑÔºåËøô‰πüÊòØ‰∏∫‰ªÄ‰πàC++ÂßãÁªàÂú®ÁºñÁ®ãËØ≠Ë®Ä‰∏≠Â¶ÇÊ≠§Âº∫Â§ßÁöÑÂéüÂõ†‰∫Ü„ÄÇC++Âú®Â∫ïÂ±ÇÊìçÊéßÂíåÈ´òÂ±ÇÈÄªËæëÂ§ÑÁêÜ‰∏äÊâÆÊºî‰∫ÜÂæàÂÖ≥ÈîÆÁöÑ‰∏≠Èó¥ËßíËâ≤Ôºå‰∏ÄÊó¶ËÉΩÂ∞ÜÂêÑÂπ≥Âè∞Áõ∏ÂÖ≥ÁöÑAPIÂà©Áî®C++ÁâπÊÄßÊäΩË±°ÊàêÈ´òÁ∫ßÁöÑÁªü‰∏ÄÁöÑÈù¢ÂêëÂØπË±°ÊèèËø∞ÔºåÈÇ£‰πàËøô‰∏™C++Â∫ìÊâçÊòØ‰∏Ä‰∏™‰ºòÁßÄÁöÑ‚ÄùËΩÆÂ≠ê‚ÄùÔºåËøôÊ†∑‰Ωú‰∏∫Â∫ìÁöÑ‰ΩøÁî®ËÄÖÔºàÂç≥Â∫îÁî®ÂºÄÂèëËÄÖÔºâÂ∞±ËÉΩÂ§üÈõÜ‰∏≠ÂÖ≥Ê≥®‰∫éÂ∫îÁî®Ëá™Ë∫´„ÄÇ Â∫üËØù‰∫ÜËøô‰πàÂ§öÔºåËôΩÁÑ∂‰∏çÁî®ÈáçÊñ∞ÈÄ†‚ÄùËΩÆÂ≠ê‚ÄùÔºå‰ΩÜÊòØ‰∫ÜËß£‚ÄùËΩÆÂ≠ê‚ÄùÊûÑÈÄ†ÊâçÊòØÊú¨ÊñáÁöÑ‰∏ªÈ¢ò„ÄÇ ÂÖàÊù•ÁúãÁúãPoco C++Â∫ìÂíåBoost C++Â∫ìÁöÑÁõ¥ËßÇÂØπÊØîÔºö Boost C++ Libraries Poco C++ Libraries ÂæàÊòéÊòæÔºåBoost C++‰∏≠ÂÖÖÊñ•ÁùÄÊ†ºÂºèÂêÑÊ†∑ÁöÑÂÆèÂÆö‰πâÔºåÊàñËÆ∏ËøôÂú®CÂáΩÊï∞Â∫ìÈáåÂæàÂ∏∏ËßÅÔºå‰ΩÜÊòØÊàëËßâÂæóÂèØ‰ª•‰∏çËøô‰πàÂ§çÊùÇÔºåÁªôÊñ∞ÊâãÂ≠¶‰π†ÊàêÊú¨ÂæàÂ§ß„ÄÇÂèçËßÇPoco C++Â∫ìÔºåÊ≤°ÊúâËáÉËÇøÁöÑÂÆèÂÆö‰πâÔºåÊ≤°ÊúâÈïø‰∏≤ÁöÑÂêçÁß∞Á©∫Èó¥ÔºåÂ§ßÈÉ®ÂàÜÂáΩÊï∞ÈÉΩËøîÂõûvoidÂíåboolÔºåÂáΩÊï∞‰ΩìÈÉΩ‰∏çÂ§ß„ÄÇ ÂóØÔºåÂèàÂ∫üËØù‰∫Ü‰∫õÔºåÁõ¥ÂÖ•‰∏ªÈ¢òÔºåC++‰∫ã‰ª∂ÂßîÊâò„ÄÇPocoÂÆòÊñπÁªôÂá∫ÁöÑÁ§∫‰æãÊòØÔºö 1234567891011121314151617181920212223242526272829303132333435363738394041424344#include &quot;Poco/BasicEvent.h&quot;#include &quot;Poco/Delegate.h&quot;#include &lt;iostream&gt;using Poco::BasicEvent;using Poco::Delegate;class Source&#123;public: BasicEvent&lt;int&gt; theEvent; void fireEvent(int n) &#123; theEvent(this, n); &#125;&#125;;class Target&#123;public: void onEvent(const void* pSender, int&amp; arg) &#123; std::cout &lt;&lt; &quot;onEvent: &quot; &lt;&lt; arg &lt;&lt; std::endl; &#125;&#125;;int main(int argc, char** argv)&#123; Source source; Target target; source.theEvent += Delegate&lt;Target, int&gt;( &amp;target, &amp;Target::onEvent); source.fireEvent(42); source.theEvent -= Delegate&lt;Target, int&gt;( &amp;target, &amp;Target::onEvent); return 0;&#125; ÂóØÔºåBasicEventÊèê‰æõ‰∏Ä‰∏™operator+&#x3D; Âíå‰∏Ä‰∏™operator-&#x3D;ÂÆûÁé∞‰∫ã‰ª∂ÁöÑÊ≥®ÂÜåÂíåÊ≥®ÈîÄÔºå‰ª•Âèä‰∫ã‰ª∂ÂìçÂ∫îÁöÑoperator()„ÄÇÊ≥®ÂÜå‰∫ã‰ª∂Êé•ÂèóÁöÑÂèÇÊï∞ÊòØ‰∏Ä‰∏™ÂßîÊâòÁ±ª(delegate)ÔºåÂèØ‰ª•ÊîØÊåÅÊ≥®ÂÜåÂ§ö‰∏™‰∫ã‰ª∂ÂìçÂ∫îÔºåÂõ†Ê≠§Êàë‰ª¨ÂèØ‰ª•ËÆæÊÉ≥Âú®ÂÖ∂ÂÜÖÈÉ®Áî®‰∏Ä‰∏™ÂÆπÂô®Êù•Â≠òÊîæËøô‰∫õÊ≥®ÂÜåÁöÑÂõûË∞ÉÂáΩÊï∞‰ø°ÊÅØ„ÄÇ 123456789101112131415161718192021222324252627282930313233343536373839template &lt;class TArgs,class TStrategy&gt;// ‰ª•‰∫ã‰ª∂ÂìçÂ∫îÂáΩÊï∞ÂèÇÊï∞ÂíåÂìçÂ∫îÁ≠ñÁï•‰ª£ÁêÜÁ±ª‰∏∫Ê®°ÊùøÂèÇÊï∞ÔºåÂêéËÄÖÁ®çÂêé‰ªãÁªçclass BasicEvent:&#123;public: BasicEvent()&#123;&#125; ~BasicEvent()&#123;&#125;///////////////////////////////////////////////// ‰∏â‰∏™‰∏ªË¶ÅÁöÑÊàêÂëòÂáΩÊï∞Êé•Âè£ void operator += (const Delegate&amp; aDelegate) /// Adds a delegate to the event. &#123; _strategy.add(aDelegate); &#125; void operator -= (const Delegate&amp; aDelegate) /// Removes a delegate from the event. /// /// If the delegate is not found, this function does nothing. &#123; _strategy.remove(aDelegate); &#125; void operator () (const void* pSender, TArgs&amp; args) /// Shortcut for notify(pSender, args); &#123; // Áî®Á≠ñÁï•‰ª£ÁêÜÔºàProxyÔºâÁ±ªÂìçÂ∫îÊâÄÊúâÊ≥®ÂÜåÂáΩÊï∞ÔºåÂêåÊ†∑Á®çÂêéËß£Èáä _strategy.notify(pSender, args); &#125;///////////////////////////////////////////////protected: TStrategy _strategy;private: // Á¶ÅÁî®Êã∑Ë¥ùÊûÑÈÄ†ÂíåÂ§çÂà∂Êã∑Ë¥ù BasicEvent(const BasicEvent&amp; e); BasicEvent&amp; operator = (const BasicEvent&amp; e);&#125;; ÈÄöÂ∏∏ÁÆ°ÁêÜÂ§ö‰∏™‰∫ã‰ª∂‰ºöÈÅáÂà∞ËøôÊ†∑ÁöÑÂÆû‰æãÔºö‰æãÂ¶ÇÔºåÂØπ‰∫éÊôÆÈÄö‰∫ã‰ª∂ÂìçÂ∫îÈááÁî®FIFOÊñπÊ≥ïÊòØÂæàÂ•ΩÂÆπÊòìÁêÜËß£ÁöÑÂ∏∏ËßÑÁ≠ñÁï•Ôºå‰ΩÜÊòØÂØπ‰∫éI&#x2F;OËÆæÂ§á‰∫ã‰ª∂ÂìçÂ∫îÁöÑÈóÆÈ¢òÊõ¥Â§öÊó∂ÂÄôÂ∫îËØ•ÈááÁî®‰ºòÂÖàÁ∫ßÁ≠ñÁï•ÔºåËÄåËøôÁßç‰ºòÂÖàÁ∫ßÁöÑÂ§ÑÁêÜ‰πüÊòØPoco EventÂ∫ìÂ∫îËØ•ÊâÄÂÖ∑ÊúâÁöÑÂäüËÉΩ„ÄÇÂú®ËøôÁßçÁâπ‰æãÈóÆÈ¢ò‰∏äÔºåÂ∏∏Â∏∏‰ºöÁäØÂú∞‰∏Ä‰∏™ÈîôËØØÂ∞±ÊòØËÆ§‰∏∫ÂèØ‰ª•ÂæàÁõ¥ËßÇÂú∞‰ªéBasicEventÁ±ªÊ¥æÁîü‰∏Ä‰∏™PriorityEventÂ≠êÁ±ª„ÄÇÂü∫Á±ªÂíåÂ≠êÁ±ªÁöÑÂÖ≥Á≥ªÂ∫îËØ•Ê∞∏ËøúÊòØis-aÁöÑËÅîÁ≥ª„ÄÇËøôÈáåÂπ∂‰∏çÂ≠òÂú®PriorityEventÈö∂Â±û‰∫éBasicEventÔºåÁõ∏Âèç‰∏§Áßç‰∫ã‰ª∂Á±ªÂûã‰ªéÂ∫ìÁöÑ‰ΩøÁî®ËÄÖÔºàÂç≥Â∫îÁî®ÂºÄÂèëËÄÖÔºâËßíÂ∫¶Êù•ËØ¥ÊúâÁùÄ‰∏ÄËá¥ÁöÑË°å‰∏∫ÔºöÊ≥®ÂÜå„ÄÅÂìçÂ∫îÂíåÊ≥®ÈîÄ‰∫ã‰ª∂„ÄÇ ÂîØ‰∏Ä‰∏çÂêåÂú®‰∫éPriorityEventÊØîBasicEventÂ§ö‰∏Ä‰∏™‰ºòÂÖàÁ∫ßÂèÇÊï∞„ÄÇÂõ†Ê≠§Ôºå‰∏ÄËá¥ÁöÑË°å‰∏∫ÂèØ‰ª•ÊäΩË±°‰∏∫‰∏§ËÄÖÁöÑ‰∏Ä‰∏™Âü∫Á±ªÔºàAbstractEventÔºåËøô‰∏™Âü∫Á±ªÂÆûÁé∞‰∫Ü‰∫ã‰ª∂ÁöÑÁªü‰∏ÄÊé•Âè£Ôºå‰ΩÜÊòØ‰∏çÊòØËôöÂü∫Á±ªÔºâÔºåËÄå‰∏çÂêåÁöÑÂ§ÑÁêÜÁ≠ñÁï•ÊâçÊòØ‰∫åËÄÖÁöÑÂèÇÊï∞„ÄÇ‰∫ãÂÆû‰∏ä‰∏ç‰ªÖ‰ªÖÂØπÂ∫îÁî®ÂºÄÂèëËÄÖÔºåËÄå‰∏îÂØπAbstractEventÊù•ËØ¥ÔºåÂ§ÑÁêÜ‰∫ã‰ª∂ÁöÑÊé•Âè£Ë°å‰∏∫‰πüÊòØÂè™Êúâ‰∏â‰∏™ÔºöÊ≥®ÂÜå„ÄÅÂìçÂ∫îÂíåÊ≥®ÈîÄ‰∫ã‰ª∂„ÄÇÂõ†Ê≠§ÂèØ‰ª•ÊääÊâßË°åÂìçÂ∫îÁöÑÁ≠ñÁï•ÊäΩË±°‰∏∫‰∏Ä‰∏™‰ª£ÁêÜÁ±ªÊù•ÊâßË°å„ÄÇÁé∞‰ª£C++‰∏≠‰∏∫‰∏Ä‰∏™ÊäΩË±°Âü∫Á±ªÂÆûÁé∞‰∏çÂêåË°å‰∏∫ÁâπÊÄßÁöÑÂ∏∏Áî®ÊñπÊ≥ïÊòØÁ±ªÊ®°ÊùøÔºåÂáÜÁ°ÆÁÇπËØ¥ÊòØÊ®°ÊùøÁöÑÁâπÂåñ‰∏éÂÅèÁâπÂåñ„ÄÇËøôÊòØÂæàÂ§öC++Á®ãÂ∫èÂ∫ì‰∏≠ÁªèÂ∏∏Áî®ÁöÑÊäÄÂ∑ß„ÄÇ ‰∏ãÈù¢‰∏ªË¶ÅÁªôÂá∫AbstractEventÁöÑÈÉ®ÂàÜÊ∫êÁ†ÅÔºåBasicEventÂíåPriorityEventÂ∞±ÁÆÄÂçïÂæàÂ§ö‰∫Ü„ÄÇËá≥‰∫éÂßîÊâòÁ±ªÔºàDelegateÔºâÁÆÄÂçïÊù•ËØ¥Â∞±ÊòØÂåÖÂê´‰∫ÜÂõûË∞ÉÁöÑÂßîÊâòÂáΩÊï∞ÊåáÈíàÂèäÂÖ∂Êã•ÊúâËÄÖÁöÑÂØπË±°ÊåáÈíàÁöÑÁ±ª„ÄÇ 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677template &lt;class TArgs, class TStrategy, class TDelegate, class TMutex = FastMutex&gt;class AbstractEvent&#123;public: typedef TArgs Args; AbstractEvent(): _executeAsync(this, &amp;AbstractEvent::executeAsyncImpl) &#123; &#125; virtual ~AbstractEvent() &#123; &#125; void operator += (const TDelegate&amp; aDelegate) /// Adds a delegate to the event. /// Exact behavior is determined by the TStrategy. &#123; // ‰ΩúÁî®ÂüüÂÜÖÁöÑ‰∫íÊñ•ÂØπË±°ÔºåÊûêÊûÑÊó∂ÈáäÊîæ‰∫íÊñ•ÈîÅ typename TMutex::ScopedLock lock(_mutex); // Á≠ñÁï•Á±ª‰∏≠ÂåÖÂê´‰∫ÜÁî®‰∫éÂ≠òÊîæÂßîÊâò‰∫ã‰ª∂ÁöÑÂÆπÂô®_strategy.add(aDelegate); &#125; void operator -= (const TDelegate&amp; aDelegate) /// Removes a delegate from the event. /// If the delegate is not found, this function does nothing. &#123; typename TMutex::ScopedLock lock(_mutex); _strategy.remove(aDelegate); &#125; void operator () (const void* pSender, TArgs&amp; args) /// Shortcut for notify(pSender, args); &#123; notify(pSender, args); //ÊâßË°åÊâÄÊúâÂìçÂ∫î &#125; void operator () (TArgs&amp; args) /// Shortcut for notify(args). &#123; notify(0, args); &#125; void notify(const void* pSender, TArgs&amp; args) &#123; Poco::ScopedLockWithUnlock&lt;TMutex&gt; lock(_mutex); // ‰∏∫‰∫ÜÁ∫øÁ®ãÂÆâÂÖ®Ôºàthread-safenessÔºâ: // ÂÖàÊã∑Ë¥ùÂà∞Â±ÄÈÉ®ÂèòÈáèÔºåÈò≤Ê≠¢ÂìçÂ∫îÂßîÊâò‰∫ã‰ª∂Êó∂ÂÆπÂô®ÂèòÊõ¥ TStrategy strategy(_strategy); lock.unlock(); strategy.notify(pSender, args); &#125; void clear() /// Removes all delegates. &#123; typename TMutex::ScopedLock lock(_mutex); _strategy.clear(); &#125; bool empty() const /// Checks if any delegates are registered at the delegate. &#123; typename TMutex::ScopedLock lock(_mutex); return _strategy.empty(); &#125;protected: TStrategy _strategy; /// The strategy used to notify observers. mutable TMutex _mutex;private: AbstractEvent(const AbstractEvent&amp; other); AbstractEvent&amp; operator = (const AbstractEvent&amp; other);&#125;; ‰∏äÈù¢ÁªôÂá∫‰∫Ü‰∏ªË¶ÅÁöÑÂÆûÁé∞‰ª£Á†ÅÔºåÂØπ‰∫éBasicEventÂíåPriorityEventÊù•ËØ¥ÔºåÂè™ÈúÄË¶ÅÁªßÊâøËá™AbstractEventÁâπÂåñÂá∫ÁöÑÊ®°ÊùøÁ±ªÔºö 1234567891011121314151617181920212223242526272829template &lt;class TArgs, class TMutex = FastMutex&gt;class BasicEvent: public AbstractEvent &lt; TArgs, DefaultStrategy&lt;TArgs, AbstractDelegate&lt;TArgs&gt; &gt;, AbstractDelegate&lt;TArgs&gt;, TMutex&gt; /// A BasicEvent uses the DefaultStrategy which /// invokes delegates in the order they have been registered. /// DefaultStrategyÈááÁî®FIFOÁ≠ñÁï•Â§ÑÁêÜ‰∫ã‰ª∂ÂìçÂ∫î&#123; public: BasicEvent()&#123;&#125; ~BasicEvent()&#123;&#125; private: BasicEvent(const BasicEvent&amp; e); BasicEvent&amp; operator = (const BasicEvent&amp; e);&#125;;template &lt;class TArgs, class TMutex = FastMutex&gt;class PriorityEvent: public AbstractEvent &lt; TArgs, PriorityStrategy&lt;TArgs, AbstractPriorityDelegate&lt;TArgs&gt; &gt;, AbstractPriorityDelegate&lt;TArgs&gt;, TMutex &gt;&#123;// ÂíåBasicEventÁõ∏Âêå&#125;; ‰ªéPriorityEventÂèØ‰ª•ÁúãÂá∫ÔºåPriorityEventÂè™ÊòØÈíàÂØπ‰ºòÂÖàÁ∫ßÁ≠ñÁï•ÈááÁî®‰∫ÜPriorityStrategy ÂíåAbstractPriorityDelegateÔºåÂêéËÄÖÁõ∏ÂØπ‰∫éÊôÆÈÄöÁöÑAbstractDelegateÂ§ö‰∫Ü‰∏Ä‰∏™‰ºòÂÖàÁ∫ßÂèÇÊï∞ËÄåÂ∑≤„ÄÇÂú®Poco C++ÁöÑËá™Ë∫´Â∫ìÂÜÖÁ∫¶ÂÆöÔºåBasicEventÂõ∫ÂÆöÊê≠ÈÖçDefaultStrategyÔºå PriorityEventÂõ∫ÂÆöÊê≠ÈÖçPriorityEventÔºåËÄåÂú®‰ΩøÁî®Êó∂ÈúÄË¶ÅÊ≥®ÊÑèoperator+&#x3D;Âíåoperator-&#x3D;ÔºåÂøÖÈ°ªÊèê‰æõ‰∏é‰πãÂØπÂ∫îÁöÑDelegateÁ±ªÂûãÔºå‰ªª‰Ωï‰ºòÁßÄÁöÑC++Â∫ìÈÉΩÊúâËá™Ë∫´ÁöÑÁºñÁ®ãÁ∫¶ÂÆöÔºå‰Ωú‰∏∫Â∫ìÁöÑ‰ΩøÁî®ËÄÖÔºåÂè™ÊúâÈÅµÂæ™Ëøô‰∫õËßÑÂàôÊâçËÉΩÁé©Â•ΩËøô‰∏™Ê∏∏Êàè„ÄÇ 12345678BasicEvent&lt;int&gt; theBasicEvent;// ‰∏ç‰ºöÊä•ÈîôÔºå‰ΩÜ‰∫ãÂÆû‰∏ä‰ºöÈááÁî®FIFOÁ≠ñÁï•theBasicEvent += PriorityDelegate&lt;Target, int&gt;( // Logic ErrorÔºåno compile error &amp;target, &amp;Target::onEvent,0);// ‰ºòÂÖàÁ∫ß0PriorityEvent&lt;int&gt; thePriorityEvent;thePriorityEvent += Delegate&lt;Target, int&gt;( // Compile errorÔºåÊ≤°Êúâ‰ºòÂÖàÁ∫ßÂ±ûÊÄß„ÄÇ &amp;target, &amp;Target::onEvent);// Ê≤°Êúâ‰ºòÂÖàÁ∫ßÂèÇÊï∞ ËøòÊúâ‰∏§ÁÇπÂèØËÉΩÂ§ßÂÆ∂Â∑≤ÁªèÊ≥®ÊÑèÂà∞Ôºö Âè™ÊîØÊåÅÂçï‰∏™ÂèÇÊï∞ÁöÑÂõûË∞ÉÂáΩÊï∞Ê≥®ÂÜåÔºõ ‰∏çÊîØÊåÅÂõûË∞ÉÂáΩÊï∞ËøîÂõûÂÄºÊ£ÄÊµã„ÄÇ ÂØπ‰∫é1Êù•ËØ¥ÔºåPoco C++ÊñáÊ°£ÁªôÂá∫ÁöÑÊñπÊ≥ïÊòØ‰º†ÈÄí‰∏Ä‰∏™ÂåÖÂê´Â§ö‰∏™ÂèÇÊï∞ÁöÑÁªìÊûÑ‰ΩìÊù•Ëß£ÂÜ≥„ÄÇÂØπ‰∫é2Êù•ËØ¥ÔºåÂèØ‰ª•ÈÄöËøáÂìçÂ∫îÂáΩÊï∞Êèê‰æõnon-const ÁöÑsenderÂºïÁî®Êù•‰øÆÊîπÂΩìÂâçË¢´Ë∞ÉËÄÖÂΩìÂâçÁöÑÁä∂ÊÄÅÔºåArgÁöÑÂºïÁî®‰πüÊòØÂèØ‰ª•Ë¢´Êé•ÂèóÁöÑÔºö 1void onEvent(const void* pSender, int&amp; arg); ËøôÈáåÂèàÂõûÂà∞‰∫ÜÂºÄÂßãÁöÑËØùÈ¢òÔºålookÔºåÂõûË∞ÉÂáΩÊï∞ÁöÑËøîÂõûÂÄºÊ∞∏ËøúÊòØvoidÔºåÊó¢ÊúâËá™ÊàëÁ∫¶ÊùüÔºåÂèàÊúâÁÅµÊ¥ªÂ∑ßÂ¶ôÔºåÊó¢ÁÆÄÂçïÂèàÂØåÂê´ÁºñÁ®ãÂì≤Â≠¶ÔºåËøôÂ∞±ÊòØPoco C++ Libraries„ÄÇ","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"Poco C++","slug":"Poco-C","permalink":"https://unpluggedcoder.me/tags/Poco-C/"},{"name":"‰∫ã‰ª∂","slug":"‰∫ã‰ª∂","permalink":"https://unpluggedcoder.me/tags/%E4%BA%8B%E4%BB%B6/"},{"name":"ÂßîÊâò","slug":"ÂßîÊâò","permalink":"https://unpluggedcoder.me/tags/%E5%A7%94%E6%89%98/"}]},{"title":"C++‰∏≠Á±ªÊ®°ÊùøÔºàclass templateÔºâÂíåÊ®°ÊùøÁ±ªÔºàtemplate classÔºâÁöÑÂå∫Âà´","slug":"C++‰∏≠Á±ªÊ®°ÊùøÔºàclass templateÔºâÂíåÊ®°ÊùøÁ±ªÔºàtemplate classÔºâÁöÑÂå∫Âà´","date":"2013-01-17T07:59:18.000Z","updated":"2022-09-15T15:51:05.344Z","comments":true,"path":"2013/01/17/C++‰∏≠Á±ªÊ®°ÊùøÔºàclass templateÔºâÂíåÊ®°ÊùøÁ±ªÔºàtemplate classÔºâÁöÑÂå∫Âà´/","link":"","permalink":"https://unpluggedcoder.me/2013/01/17/C++%E4%B8%AD%E7%B1%BB%E6%A8%A1%E6%9D%BF%EF%BC%88class%20template%EF%BC%89%E5%92%8C%E6%A8%A1%E6%9D%BF%E7%B1%BB%EF%BC%88template%20class%EF%BC%89%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"Â∏∏ËØ¥ÁöÑÁ±ªÊ®°ÊùøÔºàclass templateÔºâÂíåÊ®°ÊùøÁ±ªÔºàtemplate classÔºâÔºå‰ΩÜ‰∫ãÂÆû‰∏ä‰∫åËÄÖÊúâÁùÄÂæàÂ§ßÁöÑÂå∫Âà´„ÄÇ ËÄÉËôë‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÔºö 12345678910111213141516template&lt;typename T1 , typename T2&gt;class Someclass&#123;‚Ä¶&#125;;// Ê®°ÊùøÂèÇÊï∞ÂÆû‰æãÂåñÂêéÁöÑÁ±ªÔºånot object instancetypedef Someclass&lt;int,double&gt; TemplateClassType;template&lt; typename T1&gt;class Someclass&lt; typename T1 , double&gt;&#123;‚Ä¶&#125;;typedef Someclass&lt;int&gt; AnotherTemplateClassType; ÂÖàËß£ÈáäÊ®°ÊùøÁ±ªÔºåÊ®°ÊùøÁ±ªÊòØÂ∞ÜÊ®°Êùø‰∏≠ÁöÑÂèÇÊï∞ÂÆû‰æãÂåñÊàñÁâπÂåñÂêéÁöÑÁ±ªÂûãÔºåÊòØÁºñËØëÂô®‰∏∫Á±ªÊ®°ÊùøÁîüÊàêÁöÑ‰∏Ä‰∏™ÂÖ∑‰ΩìÁöÑÁ±ªÔºåËøôÂè´ÁºñËØëÂô®Â§öÊÄÅ(‰πüÂè´ÈùôÊÄÅÂ§öÊÄÅ)„ÄÇ ËÄåÁ±ªÊ®°ÊùøÔºåÈ°æÂêçÊÄù‰πâÔºåÊòØ‰∏ÄÁßçÊ®°ÊùøÔºåËÄå‰∏çÊòØÁ±ªÔºå‰∏çËÉΩÁõ¥Êé•‰ΩøÁî®„ÄÇÂØπËøôÁ±ªÊ®°ÊùøÁöÑ‰ΩøÁî®ËÄÖÊù•ËØ¥ÔºåÁúãÂà∞ÁöÑÔºåÁî®Âà∞ÁöÑÁ±ªÔºàSomeclass&lt;int,double&gt;ÂíåSomeclassÔºâÈÉΩÊòØÁ±ªÊ®°ÊùøÁöÑÂÆû‰æãÂåñÂêéÁöÑÁ±ª„ÄÇÊúâÁÇπÁ±ª‰ºº‰∫é‰∏Ä‰∏™ÁöÑÁ±ªÂÆû‰æãÂåñÂêéÂæóÊüê‰∏™ÂØπË±°‰∏ÄÊ†∑Ôºå‰ΩÜÊòØÁ±ªÊ®°ÊùøÂÆû‰æãÂåñÂèØ‰ª•ÂæóÂà∞‰∏çÂêåÁöÑÂÖ∑‰ΩìÁöÑÁ±ªÔºåËÄå‰∏Ä‰∏™Á±ªÂÆû‰æãÂåñÂêéÂæóÂà∞ÁöÑÊòØÂÖ∑ÊúâÁõ∏ÂêåË°å‰∏∫ÁöÑÂØπË±°„ÄÇ","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã5‚Äî‚Äî ÊùÇÈ°π‰∏Ä","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã5‚Äî‚Äî ÊùÇÈ°π‰∏Ä","date":"2013-01-14T03:28:33.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2013/01/14/C++11Â≠¶‰π†Á¨îËÆ∞‰πã5‚Äî‚Äî ÊùÇÈ°π‰∏Ä/","link":"","permalink":"https://unpluggedcoder.me/2013/01/14/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B5%E2%80%94%E2%80%94%20%E6%9D%82%E9%A1%B9%E4%B8%80/","excerpt":"","text":"constexprÂÖ≥ÈîÆÂ≠ó constexprÔºå‰ªéÂ≠óÈù¢‰∏äÁúãÂèØ‰ª•ÁúãÂá∫ÊòØÁî®Êù•Â£∞ÊòéÂ∏∏ÈáèË°®ËææÂºèÔºå‰ΩÜC++11‰∏ç‰ªÖÈôê‰∫éÊ≠§„ÄÇconstexprÂêåÊó∂ÂèØ‰ª•Â£∞ÊòéÂ∏∏ÈáèÂáΩÊï∞ÂíåÂ∏∏ÈáèÂØπË±°ÔºåËøôÈáåÁöÑÂ∏∏ÈáèÊòØÊåáÁºñËØëÊó∂ÊúüÂèØ‰ª•Á°ÆÂÆöÁöÑÂ∏∏Èáè„ÄÇ ÊôÆÈÄöÁöÑconstÂÖ≥ÈîÆÂ≠óÂ£∞ÊòéÁöÑÂáΩÊï∞Âú®‰∏ãÈù¢Êó†ÊïàÔºö 1234567const int getArraySize() &#123; return 32; &#125;int main()&#123; int myArray[getArraySize()]; // Invalid return 0;&#125; ‰ΩøÁî®constexprÈáçÊñ∞ÂÆö‰πâÔºö 1234567constexpr int getArraySize() &#123; return 32; &#125;int main()&#123; int myArray[getArraySize()]; // OK return 0;&#125; ‰πüÂèØ‰ª•Áî®Â∏∏ÈáèÊûÑÈÄ†ÂáΩÊï∞Êù•ÂÆö‰πâÂ∏∏ÈáèÂØπË±°Ôºö 12345678910111213class Rect&#123;public: constexpr Rect(int width , int height) : mWidth(width), mHeight(height) &#123;&#125; // ÊûÑÈÄ†ÂáΩÊï∞‰ΩìÂøÖÈ°ª‰∏∫Á©∫ constexpr int getArea() const &#123; // ÂøÖÈ°ªÂè™Êúâ‰∏Ä‰∏™return ËØ≠Âè•Ôºåreturn Â∏∏ÈáèË°®ËææÂºè; return mWidth * mHeight; &#125; &#125;&#125;; ÂèØ‰ª•ËøôÊ†∑Â£∞ÊòéconstexprÂØπË±° 123constexpr Rect r(8,2);int myArray[r.getArea()]; Á±ªÂûãÂà´Âêç C++11Âú®typedefÁöÑÂü∫Á°Ä‰∏äÂºïÂÖ•‰∫Ü‰∏Ä‰∏™Êñ∞ÁöÑÁ±ªÂûãÂà´ÂêçÊú∫Âà∂ÔºåÊõ¥ÂÆπÊòìÁêÜËß£„ÄÇ 1using MyInt = int; ‰∏™‰∫∫ÂØπËøôÁßçÊñπÂºè‰πüÊØîËæÉÁñëÊÉëÔºöÂ∞Üusing Âíå ËµãÂÄºÁ¨¶Âè∑ÊîæÂú®‰∏ÄËµ∑ÔºåËÆ©‰∫∫Êúâ‰∫õ‰∏çÁü•ÂÖ∂ÊâÄ‰ª•ÁÑ∂Ôºå‰∏çËøá‰ªé‰ª£Á†ÅÁöÑËßíÂ∫¶Êù•ËØ¥ËøòÊòØÊØîËæÉÂ•ΩÁêÜËß£ÁöÑ„ÄÇ ÂêåÊ†∑ÂèØ‰ª•Áî®Ëøô‰∏™Êù•Â£∞ÊòéÂáΩÊï∞ÊåáÈíàÁ±ªÂûãÔºåC++11‰πãÂâçÁöÑÂ£∞ÊòéÊ†ºÂºèÊòØ 1typedef ReturnType (*FuncPointerName)( ArgType ); ‰æãÂ¶ÇÔºö 1typedef int (*FuncType)( char ); ‰ΩøÁî®usingÂ£∞ÊòéÊ†ºÂºèÊòØÔºö 1using FuncPointerName = ReturnType (*) (ArgType); ‰æãÂ¶ÇÔºö 1using FuncType = int (*) (ArgType); ËøôÁßçÊñπÂºèÁõ∏ÂØπ‰∫é‰πãÂâçÁöÑMyIntÂ£∞ÊòéÊõ¥Âä†Áõ¥ËßÇ„ÄÇÂØπ‰∫éÊàêÂëòÂáΩÊï∞ÊåáÈíàÊù•ËØ¥ÂèØ‰ª•ÂÉè‰∏ãÈù¢ËøôÊ†∑(Â§öÂçäÁî®‰∫éÊ®°ÊùøÁ±ª‰∏≠ÁöÑÂ£∞Êòé)Ôºö 1using ClassMempFunc = ReturnType (ClassType::*) (ArgType); Áªü‰∏ÄÂàùÂßãÂåñÂØπ‰∫éÁªìÊûÑ‰ΩìÂíåÁ±ªÔºåÊàë‰ª¨ÈÄöÂ∏∏ÂèØ‰ª•Áî®‰∏ãÈù¢ÁöÑÊñπÂºèËøõË°åÂàùÂßãÂåñÔºö 123456789101112131415161718struct BasicStruct&#123; int x; float y;&#125;Ôºõclass BasicClass&#123;public: BasicClass( int x , int y ) : _X(x), _Y(y) &#123; &#125;private: int _X, _Y;&#125;;BasicStruct myStruct = &#123; 10 , 2.5 &#125;;BasicClass myClass( 10, 15); C++11‰πãÂâçÂØπ‰∫éÁªìÊûÑ‰ΩìÂèØ‰ª•Ë∞ÉÁî®{‚Ä¶}ËøõË°åÂàùÂßãÂåñÔºåÁÑ∂ËÄåÂØπ‰∫éÁ±ªÔºåÈúÄË¶ÅÁî®(‚Ä¶)Ë∞ÉÁî®ÊûÑÈÄ†ÂáΩÊï∞„ÄÇC++11ÂÖÅËÆ∏Áî®{‚Ä¶}ËøõË°åÂØπË±°ÂàùÂßãÂåñÔºö 1BasicClass myCalss = &#123; 10Ôºå 15 &#125;; // = Âè∑‰πüÊòØÂèØÈÄâÁöÑ ËøôÁßçÁªü‰∏ÄÂàùÂßãÂåñÂèØ‰ª•Èò≤Ê≠¢ËåÉÂõ¥Áº©Èôê(narrowingÔºåÂèàÁß∞Á™ÑÂåñÔºåÊàëÁêÜËß£‰∏∫Êï∞ÊçÆÊà™Êñ≠)ÔºåÂç≥ÂΩìËΩ¨Êç¢ÂêéÁöÑÁ±ªÂûãÊó†Ê≥ïË°®Á§∫ÂéüÁ±ªÂûãÊó∂ÂèëÂá∫ÁºñËØëÈîôËØØ„ÄÇ ‰æãÂ¶Ç‰∏ãÈù¢ÁöÑÂáΩÊï∞Ë∞ÉÁî®Ôºö 1234void Func( int i ) &#123; ... &#125;int x = &#123; 3.14 &#125;; // ÂéªÊéâ &#123; &#125;ÔºåÁºñËØëÈîôËØØ‰ºöÂèòÊàêË≠¶ÂëäFunc( &#123; 3.14 &#125; ); // ÂéªÊéâ &#123; &#125;ÔºåÁºñËØëÈîôËØØ‰ºöÂèòÊàêË≠¶Âëä ÂØπ‰∫éÁ±ªÊù•ËØ¥ÂèØ‰ª•Âú®Êüê‰∫õÂú∫Âêà‰ª£ÊõøÊûÑÈÄ†ÂáΩÊï∞Ôºö 1234BasicClass GetBasicClassObj( )&#123; return &#123; 10 , 15&#125;; // ÁîöËá≥‰∏çÈúÄË¶ÅÂ£∞ÊòéÁ±ªÂêç&#125; ÂêåÊ†∑‰πüÈÄÇÁî®‰∫éSTLÂÆπÂô®ÁöÑÂàùÂßãÂåñÔºö 1std::vector&lt;int&gt; myVec = &#123;10 , 20 , 30]; ‰πüÂèØ‰ª•Áî®Êù•ÂàùÂßãÂåñÂä®ÊÄÅÂàÜÈÖçÁöÑÊï∞ÁªÑÔºö 1int *pArray = new int [4] &#123; 0, 1, 2, 3&#125;; ÊúÄÂêéÔºå‰πüÂèØ‰ª•Áî®‰∫éÊûÑÈÄ†ÂáΩÊï∞ÁöÑÊàêÂëòÂàùÂßãÂåñÂàóË°®Ôºö 12345678910class MyClass&#123;public: MyClass ( ) : mArray&#123;0, 1, 2, 3&#125; &#123;&#125;private: int mArray[4];&#125;; Á©∫ÊåáÈíà C++11‰πãÂâçÔºåÁî®0Êù•‰ª£Ë°®Á©∫ÊåáÈíàÔºåÂèØ‰ª•Ëøô‰πàÂÜôÔºö 1int* ptr = 0; ‰ΩÜÊòØËøôÂ∏∏Â∏∏‰ºöÂíåÊï¥Êï∞0Ê∑∑Ê∑ÜÔºö 123void Func(char * pSrc) &#123; ... &#125; // Â¶ÇÊûú‰º†ÂÖ•0‰Ωú‰∏∫Á©∫ÊåáÈíàÂèÇÊï∞ÊÉ≥Ë∞ÉÁî®Ëøô‰∏™ÂáΩÊï∞Ôºåvoid Func(int i ) &#123; ... &#125; // ËÄåÁºñËØëÂô®ÂÆûÈôÖ‰∏ä‰ºöË∞ÉÁî®Êï¥Êï∞ÁâàÊú¨ÁöÑÂêåÂêçÂáΩÊï∞ Âõ†Ê≠§C++11 ÂºïÂÖ•‰∫ÜÁ©∫ÊåáÈíà‰∏ìÁî®ÁöÑÂêçÁß∞nullptrÔºåÂæàÂ§ö‰ª•ÂæÄÁöÑC++‰ª£Á†ÅË¶ÅÊîπÂíØ„ÄÇ Â∞ñÊã¨Âè∑ Âú®C++11‰πãÂâçÔºåÊúâ‰∏™‰ºóÊâÄÂë®Áü•ÁöÑÂ∞ñÊã¨Âè∑ÈóÆÈ¢òÊó†Ê≥ïËß£ÂÜ≥Ôºö Ê®°ÊùøÂèÇÊï∞Á±ªÂûãÁöÑÊ®°Êùø„ÄÇ ÂøÖÈ°ªÊâãÂä®Âú®‰∏§‰∏™Â∞ñÊã¨Âè∑‰πãÂâçÊ∑ªÂä†Á©∫Ê†ºÔºö 1vector&lt;basic_string&lt;wchart_t&gt; &gt; vec; // &gt;&gt;ÂèØËÉΩË¢´‰Ωú‰∏∫ÊµÅËæìÂá∫ËøêÁÆóÁ¨¶ C++11Â∑≤ÁªèÂèØ‰ª•ËØÜÂà´ËøôÁ±ªÁöÑÂ£∞ÊòéÔºö 1vector&lt;basic_string&lt;wchart_t&gt;&gt; vec; // OK in C++11","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã4‚Äî‚ÄîÂè≥ÂÄºÂºïÁî®(rvalue reference)ÂíåÁßªÂä®ËØ≠‰πâ(Move Semantics)","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã4‚Äî‚ÄîÂè≥ÂÄºÂºïÁî®(rvalue reference)ÂíåÁßªÂä®ËØ≠‰πâ(Move Semantics)","date":"2013-01-04T15:17:03.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2013/01/04/C++11Â≠¶‰π†Á¨îËÆ∞‰πã4‚Äî‚ÄîÂè≥ÂÄºÂºïÁî®(rvalue reference)ÂíåÁßªÂä®ËØ≠‰πâ(Move Semantics)/","link":"","permalink":"https://unpluggedcoder.me/2013/01/04/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B4%E2%80%94%E2%80%94%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8(rvalue%20reference)%E5%92%8C%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89(Move%20Semantics)/","excerpt":"","text":"Êú¨ÊñáÊâÄË∞àÂà∞ÁöÑ‰∏§‰∏™Ê†áÂáÜÂú®VS2012‰∏≠Â∑≤ÁªèÂèØ‰ª•ÂÆûÁé∞ 1„ÄÅÂè≥ÂÄºÂºïÁî®Ôºàrvalue referenceÔºâÂ∑¶ÂÄºÊòØÂèØ‰ª•Ëé∑ÂèñÂà∞Âú∞ÂùÄÁöÑ‰∏Ä‰∏™ÈáèÔºåÂÖ∑ÊúâÂèòÈáèÂêç‰æøÂèØ‰ª•‰Ωú‰∏∫Â∑¶ÂÄºÊù•ÂºïÁî®(‰æãÂ¶Çint count &#x3D; 10;)ÔºåÈÄöÂ∏∏Âá∫Áé∞Âú®ËµãÂÄºÁ¨¶Âè∑Â∑¶Ëæπ.ËÄåÂè≥ÂÄºÂºïÁî®ÊòØC++11ÂºïÂÖ•ÁöÑ‰∏Ä‰∏™Êñ∞Ê¶ÇÂøµÔºåÁî®Êù•ÂºïÁî®ÈÇ£‰∫õ‰ºöËá™Âä®ÈîÄÊØÅÁöÑ‰∏¥Êó∂ÂØπË±°Ôºå‰∏ªË¶ÅÁõÆÁöÑÊòØÂØπËøô‰∫õ‰∏¥Êó∂ÂØπË±°Êèê‰æõÁßªÂä®Â§çÂà∂ÊûÑÈÄ†ÂáΩÊï∞ÂíåÁßªÂä®operator&#x3D;ÔºàÁ®çÂêéËß£ÈáäÔºâÔºå‰ΩÜÊòØÂ¶ÇÊûúÊ∑±ÂÖ•Á†îÁ©∂ÊàñËÆ∏Ëøò‰ºöÊúâÊõ¥Â§öÊñ∞ÁöÑÁî®ÈÄîË¢´ÂèëÊéò„ÄÇÂú®C++‰∏≠Ôºå‰∏ãÈù¢ÁöÑ‰ª£Á†ÅÊòØ‰∏çÂêàÊ≥ïÁöÑÔºåÊòæËÄåÊòìËßÅÔºö 1int&amp; i = 2; // InvalidÔºåÊó†Ê≥ï‰∏∫ÂºïÁî®Á±ªÂûã i Ëé∑ÂèñÂà∞ÊúâÊÑè‰πâÁöÑÂÆûÈôÖÂú∞ÂùÄÔºåÊâÄ‰ª•Ëøô‰∏™ÂèòÈáèÊó†Ê≥ïË¢´Â£∞Êòé ËÄåÂ¶ÇÊûúÂú®C++11‰∏≠ÔºåÂèØ‰ª•ÈÄöËøá&amp;&amp;(Ê≥®ÊÑè‰∏çÊòØ‚Äú‰∏é‚ÄùÊìç‰Ωú)Á¨¶Âè∑Êù•Â£∞Êòé‰∏Ä‰∏™Âè≥ÂÄºÂºïÁî®ÔºåÂÆÉ‰ºöÂéªË∞ÉÁî®ÈªòËÆ§ÁöÑÁßªÂä®ÊûÑÈÄ†ÂáΩÊï∞ÔºàÊàñËÄÖÁßªÂä®operator&#x3D;Ôºâ. 1int&amp;&amp; i = 2 + 5; // OK ËøôÊ†∑ÂÜô‰∏ÄËà¨Ê≤°ÊúâÂ§öÂ§ßÊÑè‰πâÔºåÊõ¥Â§öÁöÑÊÑè‰πâÊòØÂú®Âè≥ÂÄºÂºïÁî®Ë¢´‰Ωú‰∏∫ÂèÇÊï∞‰º†ÈÄíÊó∂Â∏¶Êù•ÁöÑÊÄßËÉΩÊèêÂçá. 123456789101112131415161718void Proc(int&amp; lvalue)// a reference of lvalueÔºåÂøÖÈ°ªË¶ÅÂ∑¶ÂÄº&#123; ++lvalue; cout&lt;&lt; &quot;increment the lvalue`data: &quot; &lt;&lt; lvalue &lt;&lt;endl;&#125;void Proc(int&amp;&amp; rvalue)// a reference of rvalue&#123; ++rvalue; cout&lt;&lt; &quot;increment the rvalue`data: &quot; &lt;&lt; rvalue &lt;&lt;endl;&#125;int a = 9 , b = 10 ,c = 2;Proc(a); // call Proc(int&amp; lvalue)// Â¶ÇÊûúÊú™ÂÆö‰πâÂè≥ÂÄºÂºïÁî®ÂèÇÊï∞Á±ªÂûãÁöÑÁâàÊú¨ÔºåÈÇ£‰πà‰∏ãÈù¢Â∞Ü‰ºöÂá∫Áé∞ÁºñËØëÈîôËØØÔºåÂéüÂõ†Âú®‰∏ãÈù¢‰ºöËÆ≤Ëß£Proc(b+c); // call Proc(int&amp;&amp; rvalue)//Ëá™Âä®Â∞Üb+cË°®ËææÂºèÁîüÊàêÁöÑ‰∏¥Êó∂ÂØπË±°ÂºïÁî®‰∏∫ÂèÇÊï∞ÔºåËøô‰∏™ÂºïÁî®ËøáÁ®ãÁâµÊ∂âÂà∞ÁßªÂä®ËØ≠‰πâ &#x2F;&#x2F; Output1013 ÂØπ‰∫éÁºñËØëÂô®Êä•Èîô‚ÄúÊó†Ê≥ïÂ∞ÜintÂûãËΩ¨Âåñ‰∏∫int&amp;‚ÄùÊàë‰ª¨ÂèØ‰ª•Ëøô‰πàÁêÜËß£ÔºöÁÜüÊÇâÊ±áÁºñÁöÑÂêåÂ≠¶Â∫îËØ•Áü•ÈÅì Proc(b+c)ÁöÑÂÄº‰º†ÈÄíËøáÁ®ãÔºåÊòØÁî±bÂíåcÁöÑÂÄºÂú®Áõ∏Âä†Âêé‰∫ßÁîüÁöÑ‰∏≠Èó¥ÂÄºËµãÂÄºÁªôÂØÑÂ≠òÂô®‰Ωú‰∏∫ÂèÇÊï∞‰º†ÈÄíÁªôÂáΩÊï∞ÔºåËÄåÂØÑÂ≠òÂô®‰∏≠ÁöÑÂèòÈáèÊòØ‰∏¥Êó∂ÂèòÈáèÔºå‰∏çÂêå‰∫éÂ†ÜÊ†à‰∏äÁöÑÂèòÈáèÔºàÂèØ‰ª•Áî±ÂºïÁî®Âú∞ÂùÄÁ°ÆÂÆö‰∏Ä‰∏™ÂîØ‰∏ÄÁöÑÂèòÈáèÂÄºÔºâ„ÄÇÂõ†Ê≠§Áî±‰∫éÊó†Ê≥ïÂ∞Ü‰∏¥Êó∂ÁöÑÊï¥ÂûãÂèòÈáèËΩ¨Âåñ‰∏∫ÊúâÊïàÁöÑÂú∞ÂùÄÂºïÁî®ÔºåÁºñËØëÂô®Â∞ÜÊó†Ê≥ïÈÄöËøá„ÄÇ Âè¶Â§ñÊó†Ê≥ïÂêåÊó∂ÂÆö‰πâProc(int vlaue)ÂíåProc(int&amp; value)ÔºåÂõ†‰∏∫Ëøô‰∏§‰∏™ÂáΩÊï∞Âú®ÈÅáÂà∞‰∏Ä‰∏™ÊôÆÈÄöintÂèÇÊï∞Êó∂‰ºö‰∫ßÁîüÊ≠ß‰πâÔºå‰∫åËÄÖÈÉΩÂèØ‰ª•Ë¢´Ë∞ÉÁî®„ÄÇÂêåÊ†∑ÁöÑÊó†Ê≥ïÂêåÊó∂ÂÆö‰πâProc(int vlaue)ÂíåProc(int&amp;&amp; value)ÔºåÂéüÂõ†ÊòØÁî±‰∫éÂú®ÈÅáÂà∞‰∏Ä‰∏™‰∏¥Êó∂intÂèòÈáèÊó∂Ôºå‰∫åËÄÖ‰πüÈÉΩÊòØÂèØ‰ª•Ë¢´Ë∞ÉÁî®ÁöÑÔºåÂêåÊ†∑Êúâ‰∫å‰πâÊÄß„ÄÇÂõ†Ê≠§ÂêåÊó∂ÂÆö‰πâProc(int&amp; value)ÂíåProc(int&amp;&amp; value)Êàê‰∏∫Êñ∞ÁöÑÈÄâÊã©„ÄÇ‰∏ãÈù¢ÁöÑÈÅáÂà∞ÁöÑÁ§∫‰æã‰πüÊòØÂíåËøô‰∏™Áõ∏ÂêåÁöÑÂéüÂõ†„ÄÇ ÊâÄ‰ª•Êé•‰∏ãÊù•ÁöÑËÆ®ËÆ∫ÈÉΩÊòØ‰ª•ÂºïÁî®‰Ωú‰∏∫ÂèÇÊï∞ÔºåÂ¶ÇÊûúÂèÇÊï∞Á±ªÂûãÊòØÂÄº‰º†ÈÄí int valueÔºåÈÇ£‰πàÂ∞±‰∏çÂ≠òÂú®Ëøô‰∫õÈóÆÈ¢ò‰∫ÜÔºàÊú™ÂÆö‰πâProc(int&amp;&amp; rvalue)ÔºåProc(b+c)‰πüÂèØ‰ª•Ê≠£Â∏∏Ëøê‰ΩúÔºåÂÆÉÂ∞ÜÂæàËá™ÁÑ∂Âú∞Ë∞ÉÁî®ÂÄº‰º†ÈÄíÁâàÊú¨ÔºâÔºåÂè≥ÂÄºÂºïÁî®Â∞±ÊòØ‰∏∫‰∫ÜÂáèÂ∞ëÂèÇÊï∞ÂâØÊú¨ÂºÄÈîÄËÄåÁî®ÁöÑ. C++11Êèê‰æõ‰∫Üstd::move()ÂáΩÊï∞Â∞ÜÂ∑¶ÂÄºÂº∫Âà∂ËΩ¨Êç¢‰∏∫Âè≥ÂÄºÔºå‰∏ãÈù¢‰ºöÊºîÁ§∫ÂÆÉÁöÑÁî®Ê≥ï. 2„ÄÅÁßªÂä®ËØ≠‰πâ(Move Semantics) ÁßªÂä®ËØ≠‰πâÂÆûÁé∞‰∫ÜÁßªÂä®ÊûÑÈÄ†ÂáΩÊï∞(move copy constructor)ÂíåÁßªÂä®ËµãÂÄºÈ¢ÑÁÆóÁ¨¶(move assignment operator). ÁßªÂä®ËØ≠‰πâÂ∞Ü‰∏ä‰∏ÄÊ¶ÇÂøµ‰∏≠ÁöÑÂè≥ÂÄºÂºïÁî®ÂºïÂá∫ÁöÑ‰∏¥Êó∂ÂØπË±°ËΩ¨Âåñ‰∏∫ÂèØ‰ª•Ë¢´ÂºïÁî®ÁöÑÂ∑¶ÂÄº(Âú®ÂèÇÊï∞Âú∫Âêà‰∏ãÔºåÂç≥ËΩ¨‰∏∫ÂÆûÂèÇ),Ëøô‰∏™Âä®‰ΩúÂÆûÈôÖ‰∏äÊèê‰æõ‰∫ÜÁ®ãÂ∫èÂëòÊìç‰Ωú‰∏¥Êó∂ÂØπË±°ÂÜÖÂ≠òÁöÑËÉΩÂäõÔºàthe possibility to modify the temporary object or memoryÔºâÔºåÂπ∂‰∏îÂÖÅËÆ∏Êàë‰ª¨Ëá™Áî±Âú∞ÈÄâÊã©ÁßªÂä®ÊûÑÈÄ†ÂíåÁßªÂä®ËµãÂÄºÁöÑÊìç‰Ωú 123MyClass(MyClass&amp;&amp; src); // move copy constructorMyClass&amp; operator=(MyClass&amp;&amp; rhs); // move assignment operator//ÂèÇÊï∞ÈÉΩÊòØnone-constÔºåÂõ†‰∏∫Êã∑Ë¥ùÊûÑÈÄ†(ÊàñËµãÂÄºÊìç‰Ωú)ÁöÑÊù•Ê∫êÊòØ‰∏™Âç≥Â∞ÜÈîÄÊØÅÁöÑ‰∏¥Êó∂ÂØπË±° ËÄÉËôë‰∏ãÈù¢ÁöÑ‰æãÂ≠êÔºö 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133class MyClass&#123;public: MyClass(double vlaue/*,int* ptr*/); // Normal copy constructor MyClass(const MyClass&amp; src); // Normal assignment operator MyClass&amp; operator=(const MyClass&amp; rhs); // Move copy constructor MyClass(MyClass&amp;&amp; src); // remove const attribute // Move assignment operator MyClass&amp; operator=(MyClass&amp;&amp; rhs); // remove const attribute double m_data; //int* m_pBuffer; //Â¶ÇÊûúÂ≠òÂú®Êã•ÊúâÊüêÂùóÂÜÖÂ≠òÁöÑÊÉÖÂÜµ&#125;;MyClass::MyClass(double value /*,int* ptr*/) :m_data(value)//,m_pBuffer(ptr)&#123;&#125;MyClass::MyClass(const MyClass&amp; src)&#123; m_data = src.m_data; /* do some Deep copy Ê∑±Êã∑Ë¥ù memcpy(m_pBuffer,src.m_pBuffer......); */ cout &lt;&lt; &quot;Normal copy constructor&quot; &lt;&lt;endl;&#125;MyClass&amp; MyClass::operator=(const MyClass&amp; rhs)&#123; if(this == &amp;rhs) &#123; return *this; &#125; m_data = rhs.m_data; /* do some Deep copy Ê∑±Êã∑Ë¥ù */ cout &lt;&lt; &quot;Normal assignment operator&quot; &lt;&lt;endl; return *this;&#125;MyClass::MyClass(MyClass&amp;&amp; src)&#123; m_data = src.m_data; // shallow copy ÊµÖÊã∑Ë¥ùÔºå‰ªÖ‰ªÖÊòØÊã∑Ë¥ùÊåáÈíà // ‰∏¥Êó∂ÂØπË±°ÁöÑÂÜÖÂ≠òË¢´‰º†ÈÄíÂá∫Êù• //m_pBuffer = src.m_pBuffer; src.m_data = 0; // ‰∏¥Êó∂ÂØπË±°‰πãÂêé‰ºöË¢´ÈîÄÊØÅÔºåÂøÖÈ°ªÂú®ËΩ¨ÁßªÂÜÖÂ≠òÊâÄÊúâÊùÉÂêéÈáçÁΩÆ‰∏∫Á©∫ÊåáÈíà //src.m_pBuffer = nullptr; cout &lt;&lt; &quot;Move copy constructor&quot; &lt;&lt;endl;&#125;MyClass&amp; MyClass::operator=(MyClass&amp;&amp; rhs)&#123; if(this == &amp;rhs) &#123; return *this; &#125; m_data = rhs.m_data; // shallow copy ÊµÖÊã∑Ë¥ùÔºå‰ªÖ‰ªÖÊòØÊã∑Ë¥ùÊåáÈíà // ‰∏¥Êó∂ÂØπË±°ÁöÑÂÜÖÂ≠òË¢´‰º†ÈÄíÂá∫Êù• //m_pBuffer = src.m_pBuffer; // ‰∏¥Êó∂ÂØπË±°‰πãÂêé‰ºöË¢´ÈîÄÊØÅÔºåÂøÖÈ°ªÂú®ËΩ¨ÁßªÂÜÖÂ≠òÊâÄÊúâÊùÉÂêéÈáçÁΩÆ‰∏∫Á©∫ÊåáÈíà //src.m_pBuffer = nullptr; cout&lt;&lt; &quot;Move assignment operator&quot; &lt;&lt;endl; return *this;&#125;MyClass CreateObject(double value)&#123; return MyClass(value);&#125;/* Can not both define Func(MyClass a) and Func(MyClass&amp;&amp; a)void Func(MyClass a)&#123; cout&lt;&lt; &quot;Called Func(MyClass a)&quot; &lt;&lt; endl;&#125;*/// Also can not both define Func(MyClass a) and Func(MyClass&amp; a)void Func(MyClass&amp; a)&#123; cout&lt;&lt; &quot;Called Func(MyClass&amp; a)&quot; &lt;&lt; endl;&#125;// Both define Func(MyClass&amp; a) and Func(MyClass&amp;&amp; a) is OKvoid Func(MyClass&amp;&amp; a)&#123; cout&lt;&lt; &quot;Called Func(MyClass&amp;&amp; a)&quot; &lt;&lt; endl;&#125;int main(int argc, char* argv[])&#123; // call MyClass(double value) MyClass a(3.0); // call Func(MyClass&amp; a) Func(a); // These 3 lines call Func(MyClass&amp;&amp; a) all, or they will call Func(MyClass a) if it`s defined Func(3.0); Func(std::move(2.0)); Func(CreateObject(1.0)); cout&lt;&lt; &quot;Before move assignment, a.m_data = &quot;&lt;&lt;a.m_data &lt;&lt; endl; // Â∑≤Â≠òÂú®ÁöÑÂØπË±°Ë¢´ÊîπÂÜôÔºåË∞ÉÁî®ËµãÂÄºÈ¢ÑÁÆó // call operator=(MyClass&amp;&amp; rhs),not operator=(const MyClass&amp; rhs) a = CreateObject(4.0); cout&lt;&lt; &quot;After move assignment, a.m_data = &quot;&lt;&lt;a.m_data &lt;&lt; endl; // call MyClass::MyClass(MyClass&amp;&amp; src) MyClass d(std::move(a)); cout&lt;&lt; &quot;After move copy constructor,&quot;&lt;&lt; endl; cout&lt;&lt; &quot;a.m_data = &quot;&lt;&lt; a.m_data &lt;&lt; endl; cout&lt;&lt; &quot;d.m_data = &quot;&lt;&lt;d.m_data &lt;&lt; endl; return 0;&#125; ËæìÂá∫Â¶Ç‰∏ãÔºö 1234567891011Called Func(MyClass&amp; a)Called Func(MyClass&amp;&amp; a)Called Func(MyClass&amp;&amp; a)Called Func(MyClass&amp;&amp; a)Before move assignment, a.m_data = 3Move assignment operatorAfter move assignment, a.m_data = 4Move copy constructorAfter move copy constructor,a.m_data = 0d.m_data = 4 Áé∞Âú®Êàë‰ª¨Âä†‰∏äÊûêÊûÑÂáΩÊï∞Ôºö 1234MyClass::~MyClass()&#123; cout&lt;&lt;&quot;Deconstructor called&quot;&lt;&lt;endl;&#125; ÈÄöËøávectorÊù•Êü•ÁúãÂêÑ‰∏™ÂáΩÊï∞Ë¢´Ë∞ÉÁî®ÊÉÖÂÜµÔºåvectorÂú®Â¢ûÂä†ÂÖÉÁ¥†Êó∂‰ºöÈáçÊñ∞ÂàÜÈÖçÂÜÖÂ≠òÁ©∫Èó¥ÔºåËøôÊó∂ÂÄôvectorÂÜÖÈÉ®‰ºöÈáçÊñ∞ÂºÄËæüÁ©∫Èó¥ÔºåÂπ∂Â§çÂà∂ÊûÑÈÄ†Âá∫Êñ∞ÂØπË±°ÔºåÁÑ∂ÂêéÈîÄÊØÅÂéüÂÜÖÂ≠ò‰∏≠ÁöÑÊóßÂØπË±°„ÄÇ‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 123vector&lt;MyClass&amp;gt; vec;vec.push_back(CreateObject(9.0));vec.push_back(std::move(10.0)); Âú®Êú™ÂÆö‰πâÁßªÂä®Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞MyClass(MyClass&amp;&amp; src)Êó∂ÔºåË∞ÉÁî®ÊôÆÈÄöÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞MyClass(const MyClass&amp; src)ÊâßË°åÊ∑±Êã∑Ë¥ùÔºåËæìÂá∫Â¶Ç‰∏ãÔºö 12345678Normal copy constructorDeconstructor calledNormal copy constructorDeconstructor calledNormal copy constructorDeconstructor calledDeconstructor calledDeconstructor called Âú®ÂêåÊó∂ÂÆö‰πâÁßªÂä®Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞MyClass(MyClass&amp;&amp; src)ÂíåÊôÆÈÄöÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞MyClass(const MyClass&amp; src)Êó∂ÔºåËæìÂá∫Â¶Ç‰∏ãÔºö 12345678Move copy constructorDeconstructor calledMove copy constructorDeconstructor calledMove copy constructorDeconstructor calledDeconstructor calledDeconstructor called ÂèØËßÅÂú®‰∏¥Êó∂ÂØπË±°ÂèëÁîüÂè≥ÂÄºÂºïÁî®Êó∂‰ºöÊü•ËØ¢ÊòØÂê¶Â≠òÂú®ÁßªÂä®ÊûÑÈÄ†ÂáΩÊï∞ÔºàÊàñÁßªÂä®ËµãÂÄºËøêÁÆóÔºâÁöÑÂÆö‰πâÔºåÂ¶ÇÊûúÂ≠òÂú®ÔºåÂ∞Ü‰ºöÈÄâÊã©ÂêéËÄÖÊâßË°åÊõ¥Âø´ÁöÑ‰∏¥Êó∂ÂØπË±°Êï∞ÊçÆËé∑ÂèñÔºåÂê¶ÂàôÊâßË°åÈªòËÆ§ÁöÑÊ∑±Êã∑Ë¥ù. ÂèØ‰ª•‰ª•C++11‰πã2‚Äî‚ÄîÁ±ªÁöÑÊûÑÈÄ†‰∏≠Áõ∏ÂêåÁöÑÊñπÂºè&#x3D; default(Êàñ&#x3D;delete)Êù•ÂºÄÂêØÊàñÁ¶ÅÁî®‰∏§‰∏™ÂáΩÊï∞.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã3‚Äî‚ÄîÁ±ªÁöÑÁªßÊâø","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã3‚Äî‚ÄîÁ±ªÁöÑÁªßÊâø","date":"2013-01-04T15:04:12.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2013/01/04/C++11Â≠¶‰π†Á¨îËÆ∞‰πã3‚Äî‚ÄîÁ±ªÁöÑÁªßÊâø/","link":"","permalink":"https://unpluggedcoder.me/2013/01/04/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B3%E2%80%94%E2%80%94%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF/","excerpt":"","text":"Á¶ÅÊ≠¢ÁªßÊâø Âú®C++11‰πãÂâçÔºåC++Ê≤°ÊúâfinalÂÖ≥ÈîÆÂ≠óÔºåÁ¶ÅÊ≠¢ÁªßÊâøÁöÑÊñπÊ≥ïÂ§ßÂ§öÊòØÂà©Áî®‰ªéËôöÂü∫Á±ªÊ¥æÁîüÁöÑÊñπÂºè„ÄÇÁé∞Âú®finalÂÖ≥ÈîÆÂ≠óÂ∑≤ÁªèË¢´C++11Ê†áÂáÜÊî∂ÂΩï„ÄÇ 12345678class BaseClass final&#123; ...&#125;;class DerivedClass : public BaseClass // compling error&#123;&#125;; Á¶ÅÊ≠¢ÈáçÂÜôÔºàoverride ÂíåÁ¶ÅÊ≠¢ÁªßÊâø‰∏ÄÊ†∑ÔºåÈÄöËøáfinalÂÖ≥ÈîÆÂ≠óÊù•ÂÆûÁé∞ÔºåÁ¶ÅÊ≠¢ÈáçÂÜô‰∏≠finalÂÖ≥ÈîÆÂ≠óÂè™ËÉΩÁî®‰∫évirtualÊàêÂëòÂáΩÊï∞„ÄÇÊ≥®ÊÑèËøôÈáåÊåáÁöÑ‰∏çÊòØoverwriteÔºàË¶ÜÂÜôÔºâÔºåoverwriteÊàêÂëòÂáΩÊï∞ÂèØ‰ª•‰∏çÊòØËôöÂáΩÊï∞ÔºàÂèÇÊï∞‰πüÂèØ‰ª•‰∏çÂêåÔºâ„ÄÇÁ§∫‰æã‰ª£Á†ÅÔºö 1234567891011121314class BaseClass&#123;public: BaseClass(); virtual void someMethod() final;&#125;;class DerivedClass : public BaseClass&#123;public: DerivedClass(); virtual void someMethod(); // compling error virtual void someMethod(int i); // overwrite, that`s OK&#125;; overrideÂÖ≥ÈîÆÂ≠ó ÂêåÊ†∑C++11‰πüÂºïÂÖ•‰∫ÜÂ§ßÂÆ∂ÊâÄÊúüÁõºÁöÑoverrideÂÖ≥ÈîÆÂ≠óÔºåÁî®Êù•Â£∞ÊòéÂ≠êÁ±ªÈáçÂÜô‰∫ÜÂü∫Á±ªÁöÑÊüê‰∏™ËôöÂáΩÊï∞„ÄÇ 12345678910111213class BaseClass&#123;public: BaseClass(); virtual void someMethod(int i);&#125;;class DerivedClass : public BaseClass&#123;public: DerivedClass(); virtual void someMethod(int i) override;&#125;; ‰∏™‰∫∫ËÆ§‰∏∫Ëøô‰∏™ÂÖ≥ÈîÆÂ≠ó‰∏ªË¶ÅÁî®‰∫éÈò≤Ê≠¢Âü∫Á±ª‰øÆÊîπ‰∫ÜËôöÂáΩÊï∞ÁöÑÂèÇÊï∞ÂàóË°®ÔºåËÄåÂØºËá¥Â≠êÁ±ªÊó†ÊÑèËØÜÂú∞ÂàõÂª∫‰∫Ü‰∏Ä‰∏™Êñ∞ÁöÑËôöÂáΩÊï∞ÁöÑË°å‰∏∫„ÄÇ ÁªßÊâøÊûÑÈÄ†ÂáΩÊï∞ Ëøô‰∏™ÊØîËæÉÊúâÊÑèÊÄùÔºåC++11‰πãÂâçÔºåÂ≠êÁ±ª‰∏çËÉΩÈÄöËøáÂü∫Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞Êù•ÂàõÂª∫Â≠êÁ±ªÁöÑÂÆû‰æãÔºåÁé∞Âú®ÔºåÂ≠êÁ±ªÈÄöËøáusingÂ£∞ÊòéÂèØ‰ª•Â∞ÜÂü∫Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞Â£∞Êòé‰∏∫ÂèØËßÅÔºå‰ªéËÄåÂèØ‰ª•Âà©Áî®ÂíåÂü∫Á±ªÁõ∏ÂêåÁöÑÊûÑÈÄ†ÂáΩÊï∞ÊñπÂºèÊù•ÂàõÂª∫Ëá™ÂÆö‰πâÁöÑÂ≠êÁ±ªÂΩ¢ÊÄÅÔºåËøôÁßçÊñπÊ≥ïÂ∞ÜÊù•ÊàñËÆ∏Â§ßÊúâÂèØ‰∏∫Ôºå‰ΩÜÊòØ‰πüÊúâÈúÄË¶ÅÊ≥®ÊÑèÁöÑÈóÆÈ¢ò„ÄÇ 123456789101112131415161718192021222324class BaseClass&#123;public: BaseClass(const std::string&amp; str); // not implement here BaseClass(double d); // not implement here&#125;;class DerivedClass : public BaseClass&#123;public: using BaseClass::BaseClass; // All baseclass`s constructors are visible // ÁªßÊâø‰∫ÜÊâÄÊúâÁà∂Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞ // Ëá™Ë∫´ÁöÑÊûÑÈÄ†ÂáΩÊï∞ DerivedClass(int id) : m_nID(id)&#123; &#125; // Â¶ÇÊûúÊ¥æÁîüÁ±ª‰∏≠ÂÖ∑ÊúâÂíåÂü∫Á±ªÁöÑÊüê‰∏™ÊûÑÈÄ†ÂáΩÊï∞Áõ∏ÂêåÁöÑÂèÇÊï∞Ôºå // ÈÇ£‰πà‰ºòÂÖàÁ∫ß‰ºöÊØîÁõ∏ÂêåÂèÇÊï∞ÁöÑÂü∫Á±ªÊûÑÈÄ†ÂáΩÊï∞È´òÔºåÂ∞Ü‰ºöÂØºËá¥Ë¶ÜÁõñÂü∫Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞ // DerivedClass(const std::string&amp; str);private: int m_nID; // using &quot;int m_nID = 0&quot; instead&#125;; ËøôÊ†∑‰ΩøÁî®usingÂ£∞ÊòéÂêéÔºåÂ∞±ÂèØ‰ª•‰ΩøÁî®doubleÂèÇÊï∞ÁâàÊú¨ÔºàÊàñÊòØstring&amp;Á±ªÂûãÂèÇÊï∞ÁöÑÁâàÊú¨ÔºâÁöÑÂü∫Á±ªÊûÑÈÄ†ÂáΩÊï∞Êù•ÂàõÂª∫Â≠êÁ±ªÂØπË±°„ÄÇ‰ΩÜÊòØÈúÄË¶ÅÈù¢ÂØπÂ≠êÁ±ªÂØπË±°ÊàêÂëòÂàùÂßãÂåñÁöÑÈóÆÈ¢ò: 1DerivedClass dcFromBaseCtor(&quot;Not good&quot;); // m_nID doesn`t initialize ËøôÊ†∑ÊûÑÈÄ†Âá∫ÁöÑÂ≠êÁ±ªÂØπË±°Êó†Ê≥ïËá™ÂÆö‰πâÂÖ∂Ëá™Ë∫´ÊàêÂëòÂèòÈáèÁöÑÂàùÂßãÂåñÔºåÁÆÄÂçïÁöÑÊàêÂëòÂèòÈáèÂèØ‰ª•‰ΩøÁî®Â£∞ÊòéÂàùÂßãÂåñÊù•Ëß£ÂÜ≥Ëøô‰∏™ÈóÆÈ¢òÔºå‰æãÂ¶Çint m_nID = 0;Èù¢ÂØπÂ§çÊùÇÁöÑÂ≠êÁ±ªÔºåÂèØ‰ª•Âú®Âü∫Á±ª‰∏≠ÂÆö‰πâ‰∏Ä‰∏™ÂàùÂßãÂåñÁöÑËôöÂáΩÊï∞ÔºåÁî±Â≠êÁ±ªÈáçÂÜôÂÆÉÊù•ÂÆûÁé∞Â≠êÁ±ªÊàêÂëòÁöÑÂàùÂßãÂåñ„ÄÇÁî±‰∫éÊâãÂ§¥ËæπÁöÑVS2012ÁºñËØëÂô®ÁõÆÂâçËøò‰∏çÊîØÊåÅÁªßÊâøÊûÑÈÄ†ÂáΩÊï∞ÔºåÊâÄ‰ª•Êó†Ê≥ïÂÆûË∑µÔºå‰ΩÜÊòØ‰∏™‰∫∫ËÆ§‰∏∫‰∏ãÈù¢Ëøô‰πàÂÜô‰πüÊòØÁ¨¶ÂêàC++11Ê†áÂáÜÁöÑÔºö 1234567891011121314151617181920212223242526272829303132class BaseClass&#123;public: BaseClass(std::string&amp; str) &#123; m_baseData = str; Initialize(); &#125; // do nothing virtual void Initialize()&#123;&#125;protected: std::string m_baseData;&#125;;class DerivedClass : public BaseClass&#123;public: using BaseClass::BaseClass; DerivedClass(int value) :BaseClass(std::string(&quot;from dervied&quot;)), m_derivedData(value) &#123;&#125; virtual void Initialize() override &#123; m_derivedData = 0; &#125; int m_derivedData;&#125;; ËøôÊó∂ÂÄô‰ΩøÁî®Âü∫Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞Êù•ÂàùÂßãÂåñÂ≠êÁ±ªÂØπË±°Â∞±Êõ¥ÂÆâÂÖ®‰∫ÜÔºö 12std::string str(&quot;PasstoBaseClass&quot;);DerivedClass dcFromBaseCtor(str);","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã2‚Äî‚ÄîÁ±ªÁöÑÊûÑÈÄ†","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã2‚Äî‚ÄîÁ±ªÁöÑÊûÑÈÄ†","date":"2013-01-02T03:53:53.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2013/01/02/C++11Â≠¶‰π†Á¨îËÆ∞‰πã2‚Äî‚ÄîÁ±ªÁöÑÊûÑÈÄ†/","link":"","permalink":"https://unpluggedcoder.me/2013/01/02/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B2%E2%80%94%E2%80%94%E7%B1%BB%E7%9A%84%E6%9E%84%E9%80%A0/","excerpt":"","text":"ÊòæÁ§∫Â£∞ÊòéÊàñÊòæÁ§∫Á¶ÅÊ≠¢ÁîüÊàêÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ Âú®Ê≤°ÊúâÂ£∞ÊòéÂíåÂÆö‰πâÊó†ÂèÇÊï∞ÊûÑÈÄ†ÂáΩÊï∞ÁöÑÊÉÖÂÜµ‰∏ãÔºåÁºñËØëÂô®ÈªòËÆ§‰ºöÁîüÊàê‰∏Ä‰∏™Êó†ÂèÇÊï∞ÁöÑÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÔºåC++11‰∏≠ÂèØ‰ª•ÈÄöËøáÊòæÁ§∫ÊñπÊ≥ïÊù•Â£∞ÊòéÊàñÁ¶ÅÊ≠¢ÁîüÊàêËøôÁßçÊûÑÈÄ†ÂáΩÊï∞ÔºåÂú®‰∏ãÈù¢ËøòËÉΩÁúãÂà∞Áõ∏ÂêåÁöÑÊñπÊ≥ïÁî®‰∫éÂÖ∂ÂÆÉÁºñËØëÂô®ÂèØËÉΩ‚ÄúÂÅ∑ÂÅ∑‚ÄùÁîüÊàêÂáΩÊï∞„ÄÇ 12345678910111213class MyClass&#123;public: MyClass( ) = default; // default constructor MyClass( int i );&#125;;class MyClass&#123;public: MyClass () = delete; // Disable default constructor MyClass(int i); // Enable&#125;; ÂèØËßÅÂ¶ÇÊûú‰∏çÂ∏åÊúõÈªòËÆ§ÁöÑÊó†ÂèÇÊï∞ÊûÑÈÄ†ÂáΩÊï∞Ë¢´ÁºñËØëÂô®Ë∞ÉÁî®ÔºåÂèØ‰ª•Á¶ÅÁî®ÂÆÉÔºåËøôÊ†∑ÊúâÂä©‰∫éÂáèÂ∞ëÈîôËØØÂØπË±°ÁöÑÁîüÊàê„ÄÇ ÊòæÁ§∫Â£∞ÊòéÂíåÊòæÁ§∫Á¶ÅÊ≠¢ÁîüÊàêÊã∑Ë¥ùÔºàÂ§çÂà∂ÔºâÊûÑÈÄ†ÂáΩÊï∞ 1234567class MyClass&#123;public: MyClass (); MyClass(const MyClass&amp; src) = default; //MyClass(const MyClass&amp; src) = delete; // Á¶ÅÊ≠¢Êã∑Ë¥ùËµãÂÄºÂáΩÊï∞ÁîüÊàê&#125;; Á¶ÅÊ≠¢Êã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞Ë¢´Ë∞ÉÁî®ÊØîËæÉÊúâÂà©Áî®‰ª∑ÂÄºÔºåËøôÁßçÊñπÊ≥ïÈÄöÂ∏∏ÂèØ‰ª•Áî®‰∫éÁ¶ÅÊ≠¢ÂØπË±°‰Ωú‰∏∫ÂáΩÊï∞ÂèÇÊï∞Ë¢´Ë∞ÉÁî®ÔºåËÄå‰∏çÈúÄË¶ÅÂÉè‰ª•ÂæÄÊääÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞Â£∞Êòé‰∏∫privateÂ±ûÊÄßÁöÑ‰ΩúÊ≥ï‰∫ÜÔºå‰πü‰∏çÈúÄË¶ÅÊèê‰æõÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÁöÑÂÆûÁé∞‰∫Ü„ÄÇ 12345class MyClass&#123;private: MyClass(const MyClass&amp; src); // ‰ª•ÂæÄÁöÑ‰ΩúÊ≥ï&#125; ÂΩìÁÑ∂Â¶ÇÊûúÂ£∞Êòé‰∫Ü&#x3D; delete Â±ûÊÄßËØùÔºå‰∏ãÈù¢ÁöÑÊûÑÈÄ†ÊñπÊ≥ï‰πüË°å‰∏çÈÄö‰∫Ü„ÄÇ 12MyClass myObj1;MyClass myObj2(myObj1); ÊòæÁ§∫Â£∞ÊòéÂíåÊòæÁ§∫Á¶ÅÊ≠¢ÁîüÊàêËµãÂÄºËøêÁÆóÂáΩÊï∞ ÂêåÊ†∑Ôºådefault Âíå deleteÁöÑÂ£∞ÊòéÂêéÁºÄ‰πüÈÄÇÁî®‰∏éËµãÂÄºËøêÁÆóÂáΩÊï∞„ÄÇËôΩÁÑ∂ËµãÂÄºËøêÁÆóÂáΩÊï∞ÁÆó‰∏ç‰∏äÊú¨ÊñáÊ†áÈ¢òÊâÄËØ¥ÁöÑ‚ÄùÁ±ªÁöÑÊûÑÈÄ†‚ÄùËåÉÁï¥Ôºå‰ΩÜÊòØÂ¶ÇÊûúÂØπC++ÊúâÊâÄ‰∫ÜËß£ÁöÑËØùÔºåÈÇ£Â∞±ÂæàÊ∏ÖÊ•öÂÆÉ‰ª¨‰πãÈó¥ÊòØÊúâÂ§ö‰πàÁöÑÂçÉ‰∏ù‰∏áÁºï‰∫Ü„ÄÇ ËøôÈáåÂÖàËØ¥Êòé‰∏ãËµãÂÄºËøêÁÆóÂáΩÊï∞ÂíåÊã∑Ë¥ùÊûÑÈÄ†ÂáΩÊï∞ÁöÑÂå∫Âà´‰ª•ÂèäÂ¶Ç‰ΩïÂå∫ÂàÜÂÆÉ‰ª¨‰ΩïÊó∂Ë¢´Ë∞ÉÁî®ÔºöÂ¶ÇÊûú‰∏Ä‰∏™Â∑≤ÁªèÂÖ∑ÊúâÂÄºÁöÑÂØπË±°Ë¢´ÊîπÂÜôÔºåÂàôËøô‰∏™Âä®‰ΩúÁöÑÁ≤æÁ°ÆÊúØËØ≠ÊòØ‚ÄúËµãÂÄºËøêÁÆó‚ÄùÔºåÂõ†Ê≠§ËµãÂÄºËøêÁÆóÂáΩÊï∞Ë¢´Ë∞ÉÁî®„ÄÇÁÑ∂ËÄåÂ¶ÇÊûú‰∏Ä‰∏™ÂØπË±°Âú®ÂàõÂª∫Êó∂ÊòØÁî±Âè¶‰∏Ä‰∏™ÂØπË±°‰Ωú‰∏∫ÂâØÊú¨Êù•ÁîüÊàêÔºà‰æãÂ¶ÇÂØπË±°‰Ωú‰∏∫ÂáΩÊï∞ÂèÇÊï∞ÁöÑÊåâÂÄº‰º†ÈÄíËøáÁ®ã‰∏≠Ôºå‰∏¥Êó∂ÂØπË±°ÂâØÊú¨ÁöÑÁîüÊàêÔºâÔºåÈÇ£Â∞±ÊòØÊã∑Ë¥ùÊûÑÈÄ†ÔºåÂÆÉÊûÑÈÄ†Âá∫‰∫Ü‰∏Ä‰∏™ÂÖ®Êñ∞ÁöÑÂØπË±°ÔºåÊõ¥Á≤æÁ°ÆÁöÑÊúØËØ≠ÊòØ‚ÄúÂ§çÂà∂ÊûÑÈÄ†‚Äù„ÄÇËøô‰πüÂ∞±ÊòØ‰∏∫‰ªÄ‰πàÂâçËÄÖÂè™ËÉΩÁÆóÂæó‰∏äÊòØËµãÂÄºÁöÑËøêÁÆóÂáΩÊï∞ÔºåËÄåÂêéËÄÖÂèØ‰ª•Áß∞‰∏∫ÊûÑÈÄ†ÂáΩÊï∞„ÄÇ ‰∏ãÈù¢ÊòØÂÖ∑‰ΩìÂ£∞ÊòéÁöÑ‰ª£Á†ÅÔºö 1234567class MyClass&#123;public: MyClass (); MyClass&amp; operator= (const MyClass&amp; rhs) = default; //MyClass&amp; operator= (const MyClass&amp; rhs) = delete // Á¶ÅÊ≠¢ÁîüÊàêËµãÂÄºËøêÁÆóÂáΩÊï∞&#125;; Á¶ÅÊ≠¢ËµãÂÄºËøêÁÆóÂáΩÊï∞ÁöÑÊñπÊ≥ïÂèØ‰ª•Áî®‰∫éËÆæËÆ°Ê®°Âºè‰∏≠Êüê‰∫õÂú∫Âêà‰∏≠„ÄÇ‰æãÂ¶ÇÂèØ‰ª•Áî®‰∫éÂØπË±°Â∞ÅË£ÖÁöÑ‰ª£ÁêÜÁ±ªÊìç‰ΩúÂÖ±‰∫´Êï∞ÊçÆÂÜÖÂ≠òÁöÑÊ®°Âºè‰∏≠„ÄÇ ÂàùÂßãÂåñÂàóË°®ÊûÑÈÄ†ÂáΩÊï∞(Initializer-List Constructors) Ëøô‰∏™ÂêçÂ≠óÁúã‰∏äÂéªÂ∞±ÂæàÂ∏¶Âä≤ÂÑø„ÄÅÂæàÁ•ûÂ•áÂêß„ÄÇC++11ÁöÑÁ°ÆÁªôÊàë‰ª¨Â∏¶Êù•‰∫ÜÂæàÂ§öÊÉäÂñú„ÄÇ ÂàùÂßãÂåñÂàóË°®ÊûÑÈÄ†ÂáΩÊï∞ÊòØ‰∏Ä‰∏™‰ª•initializer_listÂØπË±°‰∏∫ÂèÇÊï∞ÁöÑÊûÑÈÄ†ÂáΩÊï∞ÔºåÂêéËÄÖÊòØ‰∏™Ê®°ÊùøÁ±ªÔºåÈúÄË¶ÅÂåÖÂê´Â§¥Êñá‰ª∂&lt;intializer_list&gt;ÔºåÂèØ‰ª•Ëøô‰πàÂÆûÁé∞Ëøô‰∏™ÊûÑÈÄ†ÂáΩÊï∞ÔºåÂ§ßËá¥‰ª£Á†ÅÂ¶Ç‰∏ãÔºö 1234567891011121314#include &lt;vector&gt;#include &lt;initializer_list&gt;class MySequenceClass&#123;public: MySequenceClass(initializer_list&lt;double&gt; args) &#123; for(auto citer : args) m_VecPoints.push_back(*citer); &#125; vector&lt;double&gt; m_VecPoints;&#125;; Âíã‰∏ÄÁúãËøô‰∏™ÂØπË±°Âêç****_listÔºåÂæàÊòéÊòæÊòØ‰∏™ÂÆπÂô®‰∫ÜÔºå‰ΩÜÊòØÂÖâ‰ªéËøô‰∏™ÊûÑÈÄ†ÂáΩÊï∞Áúã‰∏çÂá∫ÂÖ∂‰æøÊç∑ÂíåÂº∫Â§ß‰πãÂ§ÑÔºåÁúãÁúã‰∏ãÈù¢Â¶Ç‰ΩïÊûÑÈÄ†Ëøô‰∏™Á±ªÁöÑÂØπË±°Â∞±ÊòéÁôΩ‰∫ÜÔºö 12345MySequenceClass s1 = &#123;1.0, 2.0, 3.0, 4.0, 5.0&#125;;// same as : MySequenceClass s1&#123;1.0, 2.0, 3.0, 4.0, 5.0&#125;;for(auto point : s1.m_vecPoints) std::cout &lt;&lt; point &lt;&lt; &quot; &quot; &lt;&lt; std::endl; ÊÄé‰πàÊ†∑ÔºåÁ±ªÁöÑ‰ΩøÁî®ËÄÖÂÆåÂÖ®‰∏çÁü•ÈÅìinitializer_listÁöÑÂ≠òÂú®ÔºåÂØπÂºÄÂèëËÄÖÊù•ËØ¥Êï∞ÊçÆÁöÑÂ§ÑÁêÜÊõ¥Âä†ÁÆÄÂçï‰∫ÜÔºå‰ΩÜÊòØËøôÁßçÊñπÊ≥ïÁöÑÊïàÁéáËøòÈúÄË¶ÅÁúãÂÖ∑‰ΩìC++11ÁöÑÂÆûÁé∞ÔºåÊàëËßâÂæóÂØπ‰∫éÈùûÂü∫Á°ÄÊï∞ÊçÆÁ±ªÂûãÁöÑÊ®°ÊùøÂèÇÊï∞Á±ªÂûãÔºà‰æãÂ¶ÇÂ§ßÈáèÁöÑstd::stringÔºâÂæàÂèØËÉΩ‰ºöÊúâÊïàÁéá‰∏äÁöÑÊÄ•Ââß‰∏ãÈôçÔºåÂõ†Ê≠§ËøòÊòØÊé®ËçêÂ∞ÜÂºïÁî®ÊàñËÄÖsmartptr‰Ωú‰∏∫Ê®°ÊùøÂèÇÊï∞Á±ªÂûãÊù•ÊûÑÈÄ†„ÄÇÂ¶ÇÊûúÊòØÂ∑≤Â≠òÂú®ÁöÑlistÔºàÈùûÂ∏∏ÈáèÔºâÔºåÈÇ£Áî®list&amp;ÊàñÂÖ∂ÂÆÉÁöÑÂÆπÂô®ÂºïÁî®‰Ωú‰∏∫ÂèÇÊï∞ËøòÊù•ÂæóÊõ¥Âø´„ÄÇ Á±ªÊàêÂëòÂ£∞ÊòéÂàùÂßãÂåñ ËøôÈ°πÊñ∞ÁâπÊÄßÂ∫îËØ•ÂæàÁÜüÊÇâÔºåÂ§ßÂÆ∂ÈÉΩÊúüÊúõÂ∑≤‰πÖÁöÑÂ£∞ÊòéÂàùÂßãÂåñÔºö 123456class MyClass&#123;protected: int m_nCount = 1; std::string m_str = &quot;test&quot;;&#125;; ÂæàÁÆÄÂçïÊòé‰∫ÜÔºå‰ΩøÁî®Âú∫ÊôØÂæàÊôÆÈÅçÔºåÂ∞±‰∏çÂ§öËµòËø∞‰∫Ü„ÄÇ ÂßîÊâòÊûÑÈÄ†ÂáΩÊï∞ ÂßîÊâòËøô‰∏™ËØçÂú®ÂæàÂ§öÈ´òÁ∫ßËØ≠Ë®Ä‰∏≠Êó©Â∞±Ë¢´ÂºïÂÖ•‰∫ÜÔºåËÄåC++11ÁöÑËøô‰∏™Ê†áÂáÜÁ®çÁ®çÊù•Ëøü‰∫Ü„ÄÇ ËøôÈáåÊåáÁöÑÂßîÊâòÊûÑÈÄ†ÂáΩÊï∞‰∏çÊòØÂæàÂ§çÊùÇ: 12345678910111213141516171819202122class MyClass&#123;public: MyClass(int value); MyClass(const string&amp; strValue);&#125;;MyClass::MyClass(int value)&#123; ...&#125;MyClass::MyClass(const string&amp; strValue) :MyClass(stringToint(strValue))&#123;&#125; Ëøô‰∏™ÂßîÊâòË∞ÉÁî®ÂøÖÈ°ªÊîæÂú®ÊàêÂëòÂàùÂßãÂåñÂàóË°®ÔºàÂèàÁß∞ÂàùÂßãÂåñÂô®Ôºâ‚Äú : ‚Äú‰∏≠,ÂΩìMyClass(stringToint(strValue))ÊâßË°åÁªìÊùüÂêéÊâç‰ºöËøîÂõûstringÂèÇÊï∞ÁöÑÊûÑÈÄ†ÂáΩÊï∞„ÄÇÊ≤°Êúâ‰ªÄ‰πàÂ•ΩÂ§öËØ¥ÁöÑÔºå‰∏çËøáÊúâ‰∏ÄÁÇπË¶ÅÊ≥®ÊÑèÔºåÈÅøÂÖçÈÄíÂΩíÁöÑÂßîÊâòË∞ÉÁî®Ôºö 12345MyClass::MyClass(int value) : MyClass( intTostring(value) )// ÈÄíÂΩíË∞ÉÁî®&#123; ...&#125; ËøôÊ†∑ÁöÑÈÄíÂΩíË∞ÉÁî®ÊòØÂê¶Âú®ÁºñËØëÊó∂ÊúüÊä•ÈîôÂèñÂÜ≥‰∫éÁºñËØëÂô®ÁöÑÂÆûÁé∞‰∫Ü„ÄÇ ÂÖ≥‰∫éC++11Êñ∞ÁâπÊÄß‰∏≠Á±ªÁöÑÊûÑÈÄ†Â∞±ËøôÊ†∑ÂêßÔºåÂêéÁª≠ÊúâÊõ¥Êñ∞‰ºöÂÜçÂä†ÂÖ•„ÄÇ ‰∏ã‰∏ÄÁØáËÆ≤‰ªãÁªçC++11‰∏≠ÂÖ≥‰∫éÁ±ªÁªßÊâøÁöÑÊñ∞ÁâπÊÄß„ÄÇ","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã1‚Äî‚ÄîÂàùËØÜÊñ∞ÁâπÊÄß","slug":"C++11Â≠¶‰π†Á¨îËÆ∞‰πã1‚Äî‚ÄîÂàùËØÜÊñ∞ÁâπÊÄß","date":"2012-12-31T15:28:49.000Z","updated":"2022-09-15T15:51:05.343Z","comments":true,"path":"2012/12/31/C++11Â≠¶‰π†Á¨îËÆ∞‰πã1‚Äî‚ÄîÂàùËØÜÊñ∞ÁâπÊÄß/","link":"","permalink":"https://unpluggedcoder.me/2012/12/31/C++11%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B1%E2%80%94%E2%80%94%E5%88%9D%E8%AF%86%E6%96%B0%E7%89%B9%E6%80%A7/","excerpt":"","text":"C++11Ê†áÂáÜËôΩÂ∑≤ÂèëÂ∏ÉÔºå‰ΩÜÊòØVCÂíåGCC‰∏§Â§ßÁºñËØëÂØπÊñ∞Ê†áÂáÜÁöÑÊîØÊåÅÂêÑ‰∏çÁõ∏ÂêåÔºå‰ªéGCCÂÆòÁΩëÁªôÂá∫ÁöÑËµÑÊñôÁúãÔºåÁõÆÂâçGCCÂØπC++11Ê†áÂáÜÁöÑÊîØÊåÅÁÆóÊòØÊúÄÂ§öÁöÑ‰∫Ü„ÄÇ VS 2012(VC11)ÂàôÁõ∏ÂØπÈÄäËâ≤ÔºåËÆ©Â§ß‰ºóÊúâ‰∫õÂ§±Êúõ„ÄÇÁõ∏ÊØî‰πã‰∏ãVS2012Êõ¥Âä†Ê≥®ÈáçËá™Â∑±ÁöÑÊñ∞C++ËØ≠Ë®ÄÊâ©Â±ïC++&#x2F;CX„ÄÇ Âõ†Ê≠§ÔºåC++11ÁöÑÊñ∞ÁâπÊÄßÂú®Áé∞Âú®ÁúãÊù•Âè™ËÉΩÁÆóÊòØ‰∏∫Â∞ÜÊù•ÁöÑÁü•ËØÜ‰Ωú‰∏∫ÁßØÁ¥ØÔºåË∞à‰∏ç‰∏äÂÆûÁî®‰ª∑ÂÄºÔºåÂ¶ÇÊûúÂ∑•‰Ωú‰∏äÊ≤°ÊúâÈúÄË¶Å‰∫ÜËß£‰∏Ä‰∫å‰æøÂèØ„ÄÇ‰ΩúËÄÖÂú®ËøôÈáå‰πüÂè™ÊòØÂ∞Ü‰π¶‰∏≠(„ÄäC++È´òÁ∫ßÁºñÁ®ã Á¨¨‰∫åÁâà„Äã)ÊâÄÂ≠¶Âä†‰ª•Á¨îÂΩïÔºå‰ª•Â§áÊü•ÈòÖ„ÄÇ forÂæ™ÁéØ C++11Êèê‰æõ‰∫Ü‰∏ÄÁßçÊõ¥‰∏∫Êñπ‰æøÁöÑforÂæ™ÁéØËØ≠Âè•ÔºåÊúâÁÇπÁ±ª‰ººËÑöÊú¨ËØ≠Ë®ÄËØ≠Ê≥ï: 1234567891011121314151617int arr[] = &#123;1, 2, 3, 4&#125;;int idx = 0;for (auto i : arr)&#123; i += 2; // reference iterator , OK cout &lt;&lt; arr[idx++] &lt;&lt; &quot; &quot;;&#125;// 3 4 5 6idx = 0;cout &lt;&lt; endl;for (auto i : arr)&#123; i -= 2; // const iterator , nothing changed in arr cout &lt;&lt; arr[idx++] &lt;&lt; &quot; &quot;;&#125;// 3 4 5 6 __func__È¢ÑÂÆö‰πâ ‰ª•ÂæÄCËØ≠Ë®Ä‰∏≠ÊúâÈ¢ÑÂÆö‰πâÁöÑÂÆèÊù•Ë°®Á§∫ÂΩìÂâçÁöÑÊñá‰ª∂„ÄÅË°åÂè∑ÂíåÂáΩÊï∞ÂêçÔºö__FILE__ , __LINE__ , __FUNCTION__ Áé∞Âú®C++11‰∏≠Êúâ‰∫ÜËá™Â∑±ÁöÑÂáΩÊï∞ÂêçÈ¢ÑÂÆö‰πâÔºåÊöÇ‰∏îÁß∞‰∏∫È¢ÑÂÆö‰πâÔºåÂõ†‰∏∫Ê≤°ÊúâÊ∫êÁ†ÅÂèØÊü•Ôºå‰∏çÁü•ÈÅìÊòØ‰∏çÊòØÂÆèÔºå‰π¶‰∏≠ÊääËøô‰∏™ÂΩíÁ±ª‰∏∫C++11Êñ∞ÂÜÖÂÆπÔºå‰ΩÜÊòØËøô‰∏™Âú®C99Ê†áÂáÜ‰∏≠Â∑≤Êúâ‰∫Ü‚Ä¶ÔºåÁî®Ê≥ïÂæàÁÆÄÂçïÔºö 1234int add(int a ,int b)&#123; std::cout &lt;&lt; &quot;Entering function :&quot; &lt;&lt; __func__ &lt;&lt; endl; // Local variable&#125; ‰∏ã‰∏ÄÁØá‰ªãÁªç‰∏éÁ±ªÊûÑÈÄ†ÊúâÂÖ≥ÁöÑC++11Êñ∞ÁâπÊÄß.","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"}]},{"title":"‰∏ëÁîªË¶ÅÊîæÂú®ÂâçÈù¢","slug":"‰∏ëÁîªË¶ÅÊîæÂú®ÂâçÈù¢","date":"2012-12-31T14:51:50.000Z","updated":"2022-09-20T15:51:58.967Z","comments":true,"path":"2012/12/31/‰∏ëÁîªË¶ÅÊîæÂú®ÂâçÈù¢/","link":"","permalink":"https://unpluggedcoder.me/2012/12/31/%E4%B8%91%E7%94%BB%E8%A6%81%E6%94%BE%E5%9C%A8%E5%89%8D%E9%9D%A2/","excerpt":"","text":"È°∂ÁùÄÈ£éÔºåÁ¨®È∏üËÉΩÂÖàÈ£ûÂêóÔºü","categories":[{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"}],"tags":[{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"}]}],"categories":[{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/categories/Rust/"},{"name":"Flamegraph","slug":"Rust/Flamegraph","permalink":"https://unpluggedcoder.me/categories/Rust/Flamegraph/"},{"name":"‰π¶","slug":"‰π¶","permalink":"https://unpluggedcoder.me/categories/%E4%B9%A6/"},{"name":"ÂÖ•Èó®Â§±Ë¥•","slug":"Rust/ÂÖ•Èó®Â§±Ë¥•","permalink":"https://unpluggedcoder.me/categories/Rust/%E5%85%A5%E9%97%A8%E5%A4%B1%E8%B4%A5/"},{"name":"ÊùÇÈ°π","slug":"ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/%E6%9D%82%E9%A1%B9/"},{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/categories/Python/"},{"name":"Êï∞ÊçÆÁõ∏ÂÖ≥","slug":"Êï∞ÊçÆÁõ∏ÂÖ≥","permalink":"https://unpluggedcoder.me/categories/%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3/"},{"name":"AWS","slug":"AWS","permalink":"https://unpluggedcoder.me/categories/AWS/"},{"name":"Ê∂ÇÈ∏¶","slug":"Ê∂ÇÈ∏¶","permalink":"https://unpluggedcoder.me/categories/%E6%B6%82%E9%B8%A6/"},{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/categories/Windows/"},{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/categories/C-C/"},{"name":"Unix/Linux","slug":"Unix-Linux","permalink":"https://unpluggedcoder.me/categories/Unix-Linux/"},{"name":"DrumCover","slug":"DrumCover","permalink":"https://unpluggedcoder.me/categories/DrumCover/"},{"name":"ÊùÇÈ°π","slug":"C-C/ÊùÇÈ°π","permalink":"https://unpluggedcoder.me/categories/C-C/%E6%9D%82%E9%A1%B9/"}],"tags":[{"name":"FILCO","slug":"FILCO","permalink":"https://unpluggedcoder.me/tags/FILCO/"},{"name":"Minila","slug":"Minila","permalink":"https://unpluggedcoder.me/tags/Minila/"},{"name":"Mechanical Keyboard","slug":"Mechanical-Keyboard","permalink":"https://unpluggedcoder.me/tags/Mechanical-Keyboard/"},{"name":"ÁÆóÊ≥ï","slug":"ÁÆóÊ≥ï","permalink":"https://unpluggedcoder.me/tags/%E7%AE%97%E6%B3%95/"},{"name":"Algorithm","slug":"Algorithm","permalink":"https://unpluggedcoder.me/tags/Algorithm/"},{"name":"Rust","slug":"Rust","permalink":"https://unpluggedcoder.me/tags/Rust/"},{"name":"Python","slug":"Python","permalink":"https://unpluggedcoder.me/tags/Python/"},{"name":"ÁªüËÆ°Â≠¶","slug":"ÁªüËÆ°Â≠¶","permalink":"https://unpluggedcoder.me/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"},{"name":"ÈáëËûçÂ≠¶","slug":"ÈáëËûçÂ≠¶","permalink":"https://unpluggedcoder.me/tags/%E9%87%91%E8%9E%8D%E5%AD%A6/"},{"name":"Productivity tools","slug":"Productivity-tools","permalink":"https://unpluggedcoder.me/tags/Productivity-tools/"},{"name":"ripgrep","slug":"ripgrep","permalink":"https://unpluggedcoder.me/tags/ripgrep/"},{"name":"lsd","slug":"lsd","permalink":"https://unpluggedcoder.me/tags/lsd/"},{"name":"broot","slug":"broot","permalink":"https://unpluggedcoder.me/tags/broot/"},{"name":"starship","slug":"starship","permalink":"https://unpluggedcoder.me/tags/starship/"},{"name":"procs","slug":"procs","permalink":"https://unpluggedcoder.me/tags/procs/"},{"name":"dua-cli","slug":"dua-cli","permalink":"https://unpluggedcoder.me/tags/dua-cli/"},{"name":"dust","slug":"dust","permalink":"https://unpluggedcoder.me/tags/dust/"},{"name":"dutree","slug":"dutree","permalink":"https://unpluggedcoder.me/tags/dutree/"},{"name":"inferno","slug":"inferno","permalink":"https://unpluggedcoder.me/tags/inferno/"},{"name":"dtool","slug":"dtool","permalink":"https://unpluggedcoder.me/tags/dtool/"},{"name":"ytop","slug":"ytop","permalink":"https://unpluggedcoder.me/tags/ytop/"},{"name":"bat","slug":"bat","permalink":"https://unpluggedcoder.me/tags/bat/"},{"name":"tui-rs","slug":"tui-rs","permalink":"https://unpluggedcoder.me/tags/tui-rs/"},{"name":"RustÊïôÁ®ã","slug":"RustÊïôÁ®ã","permalink":"https://unpluggedcoder.me/tags/Rust%E6%95%99%E7%A8%8B/"},{"name":"RustÁ¨îËÆ∞","slug":"RustÁ¨îËÆ∞","permalink":"https://unpluggedcoder.me/tags/Rust%E7%AC%94%E8%AE%B0/"},{"name":"Pattern","slug":"Pattern","permalink":"https://unpluggedcoder.me/tags/Pattern/"},{"name":"Macros","slug":"Macros","permalink":"https://unpluggedcoder.me/tags/Macros/"},{"name":"Deep Learning","slug":"Deep-Learning","permalink":"https://unpluggedcoder.me/tags/Deep-Learning/"},{"name":"ËÇ≤ÂÑø","slug":"ËÇ≤ÂÑø","permalink":"https://unpluggedcoder.me/tags/%E8%82%B2%E5%84%BF/"},{"name":"ÁêÜË¥¢","slug":"ÁêÜË¥¢","permalink":"https://unpluggedcoder.me/tags/%E7%90%86%E8%B4%A2/"},{"name":"È£éÈô©","slug":"È£éÈô©","permalink":"https://unpluggedcoder.me/tags/%E9%A3%8E%E9%99%A9/"},{"name":"ÁªèÊµéÂ≠¶","slug":"ÁªèÊµéÂ≠¶","permalink":"https://unpluggedcoder.me/tags/%E7%BB%8F%E6%B5%8E%E5%AD%A6/"},{"name":"Compression","slug":"Compression","permalink":"https://unpluggedcoder.me/tags/Compression/"},{"name":"Concurrency","slug":"Concurrency","permalink":"https://unpluggedcoder.me/tags/Concurrency/"},{"name":"Mutex","slug":"Mutex","permalink":"https://unpluggedcoder.me/tags/Mutex/"},{"name":"Channel","slug":"Channel","permalink":"https://unpluggedcoder.me/tags/Channel/"},{"name":"Sync","slug":"Sync","permalink":"https://unpluggedcoder.me/tags/Sync/"},{"name":"Send","slug":"Send","permalink":"https://unpluggedcoder.me/tags/Send/"},{"name":"Atmoic","slug":"Atmoic","permalink":"https://unpluggedcoder.me/tags/Atmoic/"},{"name":"Condvar","slug":"Condvar","permalink":"https://unpluggedcoder.me/tags/Condvar/"},{"name":"Read","slug":"Read","permalink":"https://unpluggedcoder.me/tags/Read/"},{"name":"BufRead","slug":"BufRead","permalink":"https://unpluggedcoder.me/tags/BufRead/"},{"name":"Write","slug":"Write","permalink":"https://unpluggedcoder.me/tags/Write/"},{"name":"BufWrite","slug":"BufWrite","permalink":"https://unpluggedcoder.me/tags/BufWrite/"},{"name":"Talk","slug":"Talk","permalink":"https://unpluggedcoder.me/tags/Talk/"},{"name":"String","slug":"String","permalink":"https://unpluggedcoder.me/tags/String/"},{"name":"str","slug":"str","permalink":"https://unpluggedcoder.me/tags/str/"},{"name":"slice","slug":"slice","permalink":"https://unpluggedcoder.me/tags/slice/"},{"name":"FromStr","slug":"FromStr","permalink":"https://unpluggedcoder.me/tags/FromStr/"},{"name":"ToString","slug":"ToString","permalink":"https://unpluggedcoder.me/tags/ToString/"},{"name":"Collections","slug":"Collections","permalink":"https://unpluggedcoder.me/tags/Collections/"},{"name":"Vec","slug":"Vec","permalink":"https://unpluggedcoder.me/tags/Vec/"},{"name":"VecDeque","slug":"VecDeque","permalink":"https://unpluggedcoder.me/tags/VecDeque/"},{"name":"HashMap","slug":"HashMap","permalink":"https://unpluggedcoder.me/tags/HashMap/"},{"name":"HashSet","slug":"HashSet","permalink":"https://unpluggedcoder.me/tags/HashSet/"},{"name":"BTreeMap","slug":"BTreeMap","permalink":"https://unpluggedcoder.me/tags/BTreeMap/"},{"name":"BTreeSet","slug":"BTreeSet","permalink":"https://unpluggedcoder.me/tags/BTreeSet/"},{"name":"Performance","slug":"Performance","permalink":"https://unpluggedcoder.me/tags/Performance/"},{"name":"Iterator","slug":"Iterator","permalink":"https://unpluggedcoder.me/tags/Iterator/"},{"name":"Adapter","slug":"Adapter","permalink":"https://unpluggedcoder.me/tags/Adapter/"},{"name":"map","slug":"map","permalink":"https://unpluggedcoder.me/tags/map/"},{"name":"filter","slug":"filter","permalink":"https://unpluggedcoder.me/tags/filter/"},{"name":"IntoIterator","slug":"IntoIterator","permalink":"https://unpluggedcoder.me/tags/IntoIterator/"},{"name":"into_iter","slug":"into-iter","permalink":"https://unpluggedcoder.me/tags/into-iter/"},{"name":"drain","slug":"drain","permalink":"https://unpluggedcoder.me/tags/drain/"},{"name":"Closure","slug":"Closure","permalink":"https://unpluggedcoder.me/tags/Closure/"},{"name":"Fn","slug":"Fn","permalink":"https://unpluggedcoder.me/tags/Fn/"},{"name":"FnMut","slug":"FnMut","permalink":"https://unpluggedcoder.me/tags/FnMut/"},{"name":"FnOnce","slug":"FnOnce","permalink":"https://unpluggedcoder.me/tags/FnOnce/"},{"name":"Callback","slug":"Callback","permalink":"https://unpluggedcoder.me/tags/Callback/"},{"name":"Trait","slug":"Trait","permalink":"https://unpluggedcoder.me/tags/Trait/"},{"name":"Copy","slug":"Copy","permalink":"https://unpluggedcoder.me/tags/Copy/"},{"name":"Clone","slug":"Clone","permalink":"https://unpluggedcoder.me/tags/Clone/"},{"name":"Drop","slug":"Drop","permalink":"https://unpluggedcoder.me/tags/Drop/"},{"name":"Sized","slug":"Sized","permalink":"https://unpluggedcoder.me/tags/Sized/"},{"name":"AsRef","slug":"AsRef","permalink":"https://unpluggedcoder.me/tags/AsRef/"},{"name":"Borrow","slug":"Borrow","permalink":"https://unpluggedcoder.me/tags/Borrow/"},{"name":"ToOwned","slug":"ToOwned","permalink":"https://unpluggedcoder.me/tags/ToOwned/"},{"name":"Cow","slug":"Cow","permalink":"https://unpluggedcoder.me/tags/Cow/"},{"name":"From","slug":"From","permalink":"https://unpluggedcoder.me/tags/From/"},{"name":"Into","slug":"Into","permalink":"https://unpluggedcoder.me/tags/Into/"},{"name":"Generics","slug":"Generics","permalink":"https://unpluggedcoder.me/tags/Generics/"},{"name":"ÁâπË¥®","slug":"ÁâπË¥®","permalink":"https://unpluggedcoder.me/tags/%E7%89%B9%E8%B4%A8/"},{"name":"Ê≥õÂûã","slug":"Ê≥õÂûã","permalink":"https://unpluggedcoder.me/tags/%E6%B3%9B%E5%9E%8B/"},{"name":"Enum","slug":"Enum","permalink":"https://unpluggedcoder.me/tags/Enum/"},{"name":"PatternGuard","slug":"PatternGuard","permalink":"https://unpluggedcoder.me/tags/PatternGuard/"},{"name":"refutable","slug":"refutable","permalink":"https://unpluggedcoder.me/tags/refutable/"},{"name":"irrefutable","slug":"irrefutable","permalink":"https://unpluggedcoder.me/tags/irrefutable/"},{"name":"Struct","slug":"Struct","permalink":"https://unpluggedcoder.me/tags/Struct/"},{"name":"Cell<T>","slug":"Cell-T","permalink":"https://unpluggedcoder.me/tags/Cell-T/"},{"name":"RefCell<T>","slug":"RefCell-T","permalink":"https://unpluggedcoder.me/tags/RefCell-T/"},{"name":"Crates","slug":"Crates","permalink":"https://unpluggedcoder.me/tags/Crates/"},{"name":"Modules","slug":"Modules","permalink":"https://unpluggedcoder.me/tags/Modules/"},{"name":"pub","slug":"pub","permalink":"https://unpluggedcoder.me/tags/pub/"},{"name":"doc-tests","slug":"doc-tests","permalink":"https://unpluggedcoder.me/tags/doc-tests/"},{"name":"cargo","slug":"cargo","permalink":"https://unpluggedcoder.me/tags/cargo/"},{"name":"Error Handling","slug":"Error-Handling","permalink":"https://unpluggedcoder.me/tags/Error-Handling/"},{"name":"Result","slug":"Result","permalink":"https://unpluggedcoder.me/tags/Result/"},{"name":"painc","slug":"painc","permalink":"https://unpluggedcoder.me/tags/painc/"},{"name":"Option","slug":"Option","permalink":"https://unpluggedcoder.me/tags/Option/"},{"name":"Ownership","slug":"Ownership","permalink":"https://unpluggedcoder.me/tags/Ownership/"},{"name":"Reference","slug":"Reference","permalink":"https://unpluggedcoder.me/tags/Reference/"},{"name":"Shared Reference","slug":"Shared-Reference","permalink":"https://unpluggedcoder.me/tags/Shared-Reference/"},{"name":"Box","slug":"Box","permalink":"https://unpluggedcoder.me/tags/Box/"},{"name":"Rc","slug":"Rc","permalink":"https://unpluggedcoder.me/tags/Rc/"},{"name":"Arc","slug":"Arc","permalink":"https://unpluggedcoder.me/tags/Arc/"},{"name":"ÂØå‰∫∫ÊÄùÁª¥","slug":"ÂØå‰∫∫ÊÄùÁª¥","permalink":"https://unpluggedcoder.me/tags/%E5%AF%8C%E4%BA%BA%E6%80%9D%E7%BB%B4/"},{"name":"ÊÄßËÉΩ","slug":"ÊÄßËÉΩ","permalink":"https://unpluggedcoder.me/tags/%E6%80%A7%E8%83%BD/"},{"name":"ÂàÜÂ∏ÉÂºèÈîÅ","slug":"ÂàÜÂ∏ÉÂºèÈîÅ","permalink":"https://unpluggedcoder.me/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"},{"name":"Distribution Lock","slug":"Distribution-Lock","permalink":"https://unpluggedcoder.me/tags/Distribution-Lock/"},{"name":"Redis","slug":"Redis","permalink":"https://unpluggedcoder.me/tags/Redis/"},{"name":"asynchronous","slug":"asynchronous","permalink":"https://unpluggedcoder.me/tags/asynchronous/"},{"name":"logging","slug":"logging","permalink":"https://unpluggedcoder.me/tags/logging/"},{"name":"Celery","slug":"Celery","permalink":"https://unpluggedcoder.me/tags/Celery/"},{"name":"SSH","slug":"SSH","permalink":"https://unpluggedcoder.me/tags/SSH/"},{"name":"Resilio Sync","slug":"Resilio-Sync","permalink":"https://unpluggedcoder.me/tags/Resilio-Sync/"},{"name":"BT Sync","slug":"BT-Sync","permalink":"https://unpluggedcoder.me/tags/BT-Sync/"},{"name":"Django","slug":"Django","permalink":"https://unpluggedcoder.me/tags/Django/"},{"name":"Django Rest Framework","slug":"Django-Rest-Framework","permalink":"https://unpluggedcoder.me/tags/Django-Rest-Framework/"},{"name":"Data Visualization","slug":"Data-Visualization","permalink":"https://unpluggedcoder.me/tags/Data-Visualization/"},{"name":"ModeAnalytics","slug":"ModeAnalytics","permalink":"https://unpluggedcoder.me/tags/ModeAnalytics/"},{"name":"RDS","slug":"RDS","permalink":"https://unpluggedcoder.me/tags/RDS/"},{"name":"SQL","slug":"SQL","permalink":"https://unpluggedcoder.me/tags/SQL/"},{"name":"Aliyun","slug":"Aliyun","permalink":"https://unpluggedcoder.me/tags/Aliyun/"},{"name":"AWS","slug":"AWS","permalink":"https://unpluggedcoder.me/tags/AWS/"},{"name":"DataPipeline","slug":"DataPipeline","permalink":"https://unpluggedcoder.me/tags/DataPipeline/"},{"name":"RedShift","slug":"RedShift","permalink":"https://unpluggedcoder.me/tags/RedShift/"},{"name":"Mac","slug":"Mac","permalink":"https://unpluggedcoder.me/tags/Mac/"},{"name":"pip","slug":"pip","permalink":"https://unpluggedcoder.me/tags/pip/"},{"name":"Á¥†Êèè","slug":"Á¥†Êèè","permalink":"https://unpluggedcoder.me/tags/%E7%B4%A0%E6%8F%8F/"},{"name":"Windows","slug":"Windows","permalink":"https://unpluggedcoder.me/tags/Windows/"},{"name":"c#","slug":"c","permalink":"https://unpluggedcoder.me/tags/c/"},{"name":"MVVM","slug":"MVVM","permalink":"https://unpluggedcoder.me/tags/MVVM/"},{"name":"WPF","slug":"WPF","permalink":"https://unpluggedcoder.me/tags/WPF/"},{"name":"MySQLdb","slug":"MySQLdb","permalink":"https://unpluggedcoder.me/tags/MySQLdb/"},{"name":"Linux","slug":"Linux","permalink":"https://unpluggedcoder.me/tags/Linux/"},{"name":"quota","slug":"quota","permalink":"https://unpluggedcoder.me/tags/quota/"},{"name":"Áà¨Ëô´","slug":"Áà¨Ëô´","permalink":"https://unpluggedcoder.me/tags/%E7%88%AC%E8%99%AB/"},{"name":"Â∞èÂ∫¶WIFI","slug":"Â∞èÂ∫¶WIFI","permalink":"https://unpluggedcoder.me/tags/%E5%B0%8F%E5%BA%A6WIFI/"},{"name":"ATL","slug":"ATL","permalink":"https://unpluggedcoder.me/tags/ATL/"},{"name":"C#","slug":"C","permalink":"https://unpluggedcoder.me/tags/C/"},{"name":"C/C++","slug":"C-C","permalink":"https://unpluggedcoder.me/tags/C-C/"},{"name":"jabberd2","slug":"jabberd2","permalink":"https://unpluggedcoder.me/tags/jabberd2/"},{"name":"xmpp","slug":"xmpp","permalink":"https://unpluggedcoder.me/tags/xmpp/"},{"name":"Poco","slug":"Poco","permalink":"https://unpluggedcoder.me/tags/Poco/"},{"name":"GCC","slug":"GCC","permalink":"https://unpluggedcoder.me/tags/GCC/"},{"name":"Drum","slug":"Drum","permalink":"https://unpluggedcoder.me/tags/Drum/"},{"name":"‰ΩéÊô∫ÂïÜÁ§æ‰ºö","slug":"‰ΩéÊô∫ÂïÜÁ§æ‰ºö","permalink":"https://unpluggedcoder.me/tags/%E4%BD%8E%E6%99%BA%E5%95%86%E7%A4%BE%E4%BC%9A/"},{"name":"Unix/Linux","slug":"Unix-Linux","permalink":"https://unpluggedcoder.me/tags/Unix-Linux/"},{"name":"Âπ∂Âèë","slug":"Âπ∂Âèë","permalink":"https://unpluggedcoder.me/tags/%E5%B9%B6%E5%8F%91/"},{"name":"exception","slug":"exception","permalink":"https://unpluggedcoder.me/tags/exception/"},{"name":"Poco C++","slug":"Poco-C","permalink":"https://unpluggedcoder.me/tags/Poco-C/"},{"name":"C++11","slug":"C-11","permalink":"https://unpluggedcoder.me/tags/C-11/"},{"name":"auto_ptr","slug":"auto-ptr","permalink":"https://unpluggedcoder.me/tags/auto-ptr/"},{"name":"shared_ptr","slug":"shared-ptr","permalink":"https://unpluggedcoder.me/tags/shared-ptr/"},{"name":"SmartPointer","slug":"SmartPointer","permalink":"https://unpluggedcoder.me/tags/SmartPointer/"},{"name":"unique_ptr","slug":"unique-ptr","permalink":"https://unpluggedcoder.me/tags/unique-ptr/"},{"name":"weak_ptr","slug":"weak-ptr","permalink":"https://unpluggedcoder.me/tags/weak-ptr/"},{"name":"‰∫ã‰ª∂","slug":"‰∫ã‰ª∂","permalink":"https://unpluggedcoder.me/tags/%E4%BA%8B%E4%BB%B6/"},{"name":"ÂßîÊâò","slug":"ÂßîÊâò","permalink":"https://unpluggedcoder.me/tags/%E5%A7%94%E6%89%98/"}]}